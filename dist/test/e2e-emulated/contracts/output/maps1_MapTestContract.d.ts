import { Cell, Slice, Address, Builder, Dictionary, ContractProvider, Sender, Contract, ContractABI } from '@ton/core';
export type DataSize = {
    $$type: 'DataSize';
    cells: bigint;
    bits: bigint;
    refs: bigint;
};
export declare function storeDataSize(src: DataSize): (builder: Builder) => void;
export declare function loadDataSize(slice: Slice): {
    $$type: "DataSize";
    cells: bigint;
    bits: bigint;
    refs: bigint;
};
export type StateInit = {
    $$type: 'StateInit';
    code: Cell;
    data: Cell;
};
export declare function storeStateInit(src: StateInit): (builder: Builder) => void;
export declare function loadStateInit(slice: Slice): {
    $$type: "StateInit";
    code: Cell;
    data: Cell;
};
export type Context = {
    $$type: 'Context';
    bounceable: boolean;
    sender: Address;
    value: bigint;
    raw: Slice;
};
export declare function storeContext(src: Context): (builder: Builder) => void;
export declare function loadContext(slice: Slice): {
    $$type: "Context";
    bounceable: boolean;
    sender: Address;
    value: bigint;
    raw: Slice;
};
export type SendParameters = {
    $$type: 'SendParameters';
    mode: bigint;
    body: Cell | null;
    code: Cell | null;
    data: Cell | null;
    value: bigint;
    to: Address;
    bounce: boolean;
};
export declare function storeSendParameters(src: SendParameters): (builder: Builder) => void;
export declare function loadSendParameters(slice: Slice): {
    $$type: "SendParameters";
    mode: bigint;
    body: Cell | null;
    code: Cell | null;
    data: Cell | null;
    value: bigint;
    to: Address;
    bounce: boolean;
};
export type MessageParameters = {
    $$type: 'MessageParameters';
    mode: bigint;
    body: Cell | null;
    value: bigint;
    to: Address;
    bounce: boolean;
};
export declare function storeMessageParameters(src: MessageParameters): (builder: Builder) => void;
export declare function loadMessageParameters(slice: Slice): {
    $$type: "MessageParameters";
    mode: bigint;
    body: Cell | null;
    value: bigint;
    to: Address;
    bounce: boolean;
};
export type DeployParameters = {
    $$type: 'DeployParameters';
    mode: bigint;
    body: Cell | null;
    value: bigint;
    bounce: boolean;
    init: StateInit;
};
export declare function storeDeployParameters(src: DeployParameters): (builder: Builder) => void;
export declare function loadDeployParameters(slice: Slice): {
    $$type: "DeployParameters";
    mode: bigint;
    body: Cell | null;
    value: bigint;
    bounce: boolean;
    init: {
        $$type: "StateInit";
        code: Cell;
        data: Cell;
    };
};
export type StdAddress = {
    $$type: 'StdAddress';
    workchain: bigint;
    address: bigint;
};
export declare function storeStdAddress(src: StdAddress): (builder: Builder) => void;
export declare function loadStdAddress(slice: Slice): {
    $$type: "StdAddress";
    workchain: bigint;
    address: bigint;
};
export type VarAddress = {
    $$type: 'VarAddress';
    workchain: bigint;
    address: Slice;
};
export declare function storeVarAddress(src: VarAddress): (builder: Builder) => void;
export declare function loadVarAddress(slice: Slice): {
    $$type: "VarAddress";
    workchain: bigint;
    address: Slice;
};
export type BasechainAddress = {
    $$type: 'BasechainAddress';
    hash: bigint | null;
};
export declare function storeBasechainAddress(src: BasechainAddress): (builder: Builder) => void;
export declare function loadBasechainAddress(slice: Slice): {
    $$type: "BasechainAddress";
    hash: bigint | null;
};
export type SomeStruct = {
    $$type: 'SomeStruct';
    int: bigint;
    bool: boolean;
    address: Address;
    a: bigint;
    b: bigint;
};
export declare function storeSomeStruct(src: SomeStruct): (builder: Builder) => void;
export declare function loadSomeStruct(slice: Slice): {
    $$type: "SomeStruct";
    int: bigint;
    bool: boolean;
    address: Address;
    a: bigint;
    b: bigint;
};
export type GetAllMapsResult = {
    $$type: 'GetAllMapsResult';
    int_varint16: bigint | null;
    int_varint32: bigint | null;
    int_varuint16: bigint | null;
    int_varuint32: bigint | null;
    int_bool: boolean | null;
    int_cell: Cell | null;
    int_address: Address | null;
    int_struct: SomeStruct | null;
    int8_varint16: bigint | null;
    int8_varint32: bigint | null;
    int8_varuint16: bigint | null;
    int8_varuint32: bigint | null;
    int8_bool: boolean | null;
    int8_cell: Cell | null;
    int8_address: Address | null;
    int8_struct: SomeStruct | null;
    int42_varint16: bigint | null;
    int42_varint32: bigint | null;
    int42_varuint16: bigint | null;
    int42_varuint32: bigint | null;
    int42_bool: boolean | null;
    int42_cell: Cell | null;
    int42_address: Address | null;
    int42_struct: SomeStruct | null;
    int256_varint16: bigint | null;
    int256_varint32: bigint | null;
    int256_varuint16: bigint | null;
    int256_varuint32: bigint | null;
    int256_bool: boolean | null;
    int256_cell: Cell | null;
    int256_address: Address | null;
    int256_struct: SomeStruct | null;
    uint8_varint16: bigint | null;
    uint8_varint32: bigint | null;
    uint8_varuint16: bigint | null;
    uint8_varuint32: bigint | null;
    uint8_bool: boolean | null;
    uint8_cell: Cell | null;
    uint8_address: Address | null;
    uint8_struct: SomeStruct | null;
    uint42_varint16: bigint | null;
    uint42_varint32: bigint | null;
    uint42_varuint16: bigint | null;
    uint42_varuint32: bigint | null;
    uint42_bool: boolean | null;
    uint42_cell: Cell | null;
    uint42_address: Address | null;
    uint42_struct: SomeStruct | null;
    uint256_varint16: bigint | null;
    uint256_varint32: bigint | null;
    uint256_varuint16: bigint | null;
    uint256_varuint32: bigint | null;
    uint256_bool: boolean | null;
    uint256_cell: Cell | null;
    uint256_address: Address | null;
    uint256_struct: SomeStruct | null;
    address_varint16: bigint | null;
    address_varint32: bigint | null;
    address_varuint16: bigint | null;
    address_varuint32: bigint | null;
    address_bool: boolean | null;
    address_cell: Cell | null;
    address_address: Address | null;
    address_struct: SomeStruct | null;
};
export declare function storeGetAllMapsResult(src: GetAllMapsResult): (builder: Builder) => void;
export declare function loadGetAllMapsResult(slice: Slice): {
    $$type: "GetAllMapsResult";
    int_varint16: bigint | null;
    int_varint32: bigint | null;
    int_varuint16: bigint | null;
    int_varuint32: bigint | null;
    int_bool: boolean | null;
    int_cell: Cell | null;
    int_address: Address | null;
    int_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    int8_varint16: bigint | null;
    int8_varint32: bigint | null;
    int8_varuint16: bigint | null;
    int8_varuint32: bigint | null;
    int8_bool: boolean | null;
    int8_cell: Cell | null;
    int8_address: Address | null;
    int8_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    int42_varint16: bigint | null;
    int42_varint32: bigint | null;
    int42_varuint16: bigint | null;
    int42_varuint32: bigint | null;
    int42_bool: boolean | null;
    int42_cell: Cell | null;
    int42_address: Address | null;
    int42_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    int256_varint16: bigint | null;
    int256_varint32: bigint | null;
    int256_varuint16: bigint | null;
    int256_varuint32: bigint | null;
    int256_bool: boolean | null;
    int256_cell: Cell | null;
    int256_address: Address | null;
    int256_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    uint8_varint16: bigint | null;
    uint8_varint32: bigint | null;
    uint8_varuint16: bigint | null;
    uint8_varuint32: bigint | null;
    uint8_bool: boolean | null;
    uint8_cell: Cell | null;
    uint8_address: Address | null;
    uint8_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    uint42_varint16: bigint | null;
    uint42_varint32: bigint | null;
    uint42_varuint16: bigint | null;
    uint42_varuint32: bigint | null;
    uint42_bool: boolean | null;
    uint42_cell: Cell | null;
    uint42_address: Address | null;
    uint42_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    uint256_varint16: bigint | null;
    uint256_varint32: bigint | null;
    uint256_varuint16: bigint | null;
    uint256_varuint32: bigint | null;
    uint256_bool: boolean | null;
    uint256_cell: Cell | null;
    uint256_address: Address | null;
    uint256_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    address_varint16: bigint | null;
    address_varint32: bigint | null;
    address_varuint16: bigint | null;
    address_varuint32: bigint | null;
    address_bool: boolean | null;
    address_cell: Cell | null;
    address_address: Address | null;
    address_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
};
export type ReplaceAllMapsResult = {
    $$type: 'ReplaceAllMapsResult';
    int_varint16: boolean;
    int_varint32: boolean;
    int_varuint16: boolean;
    int_varuint32: boolean;
    int_bool: boolean;
    int_cell: boolean;
    int_address: boolean;
    int_struct: boolean;
    int8_varint16: boolean;
    int8_varint32: boolean;
    int8_varuint16: boolean;
    int8_varuint32: boolean;
    int8_bool: boolean;
    int8_cell: boolean;
    int8_address: boolean;
    int8_struct: boolean;
    int42_varint16: boolean;
    int42_varint32: boolean;
    int42_varuint16: boolean;
    int42_varuint32: boolean;
    int42_bool: boolean;
    int42_cell: boolean;
    int42_address: boolean;
    int42_struct: boolean;
    int256_varint16: boolean;
    int256_varint32: boolean;
    int256_varuint16: boolean;
    int256_varuint32: boolean;
    int256_bool: boolean;
    int256_cell: boolean;
    int256_address: boolean;
    int256_struct: boolean;
    uint8_varint16: boolean;
    uint8_varint32: boolean;
    uint8_varuint16: boolean;
    uint8_varuint32: boolean;
    uint8_bool: boolean;
    uint8_cell: boolean;
    uint8_address: boolean;
    uint8_struct: boolean;
    uint42_varint16: boolean;
    uint42_varint32: boolean;
    uint42_varuint16: boolean;
    uint42_varuint32: boolean;
    uint42_bool: boolean;
    uint42_cell: boolean;
    uint42_address: boolean;
    uint42_struct: boolean;
    uint256_varint16: boolean;
    uint256_varint32: boolean;
    uint256_varuint16: boolean;
    uint256_varuint32: boolean;
    uint256_bool: boolean;
    uint256_cell: boolean;
    uint256_address: boolean;
    uint256_struct: boolean;
    address_varint16: boolean;
    address_varint32: boolean;
    address_varuint16: boolean;
    address_varuint32: boolean;
    address_bool: boolean;
    address_cell: boolean;
    address_address: boolean;
    address_struct: boolean;
};
export declare function storeReplaceAllMapsResult(src: ReplaceAllMapsResult): (builder: Builder) => void;
export declare function loadReplaceAllMapsResult(slice: Slice): {
    $$type: "ReplaceAllMapsResult";
    int_varint16: boolean;
    int_varint32: boolean;
    int_varuint16: boolean;
    int_varuint32: boolean;
    int_bool: boolean;
    int_cell: boolean;
    int_address: boolean;
    int_struct: boolean;
    int8_varint16: boolean;
    int8_varint32: boolean;
    int8_varuint16: boolean;
    int8_varuint32: boolean;
    int8_bool: boolean;
    int8_cell: boolean;
    int8_address: boolean;
    int8_struct: boolean;
    int42_varint16: boolean;
    int42_varint32: boolean;
    int42_varuint16: boolean;
    int42_varuint32: boolean;
    int42_bool: boolean;
    int42_cell: boolean;
    int42_address: boolean;
    int42_struct: boolean;
    int256_varint16: boolean;
    int256_varint32: boolean;
    int256_varuint16: boolean;
    int256_varuint32: boolean;
    int256_bool: boolean;
    int256_cell: boolean;
    int256_address: boolean;
    int256_struct: boolean;
    uint8_varint16: boolean;
    uint8_varint32: boolean;
    uint8_varuint16: boolean;
    uint8_varuint32: boolean;
    uint8_bool: boolean;
    uint8_cell: boolean;
    uint8_address: boolean;
    uint8_struct: boolean;
    uint42_varint16: boolean;
    uint42_varint32: boolean;
    uint42_varuint16: boolean;
    uint42_varuint32: boolean;
    uint42_bool: boolean;
    uint42_cell: boolean;
    uint42_address: boolean;
    uint42_struct: boolean;
    uint256_varint16: boolean;
    uint256_varint32: boolean;
    uint256_varuint16: boolean;
    uint256_varuint32: boolean;
    uint256_bool: boolean;
    uint256_cell: boolean;
    uint256_address: boolean;
    uint256_struct: boolean;
    address_varint16: boolean;
    address_varint32: boolean;
    address_varuint16: boolean;
    address_varuint32: boolean;
    address_bool: boolean;
    address_cell: boolean;
    address_address: boolean;
    address_struct: boolean;
};
export type ReplaceGetAllMapsResult = {
    $$type: 'ReplaceGetAllMapsResult';
    int_varint16: bigint | null;
    int_varint32: bigint | null;
    int_varuint16: bigint | null;
    int_varuint32: bigint | null;
    int_bool: boolean | null;
    int_cell: Cell | null;
    int_address: Address | null;
    int_struct: SomeStruct | null;
    int8_varint16: bigint | null;
    int8_varint32: bigint | null;
    int8_varuint16: bigint | null;
    int8_varuint32: bigint | null;
    int8_bool: boolean | null;
    int8_cell: Cell | null;
    int8_address: Address | null;
    int8_struct: SomeStruct | null;
    int42_varint16: bigint | null;
    int42_varint32: bigint | null;
    int42_varuint16: bigint | null;
    int42_varuint32: bigint | null;
    int42_bool: boolean | null;
    int42_cell: Cell | null;
    int42_address: Address | null;
    int42_struct: SomeStruct | null;
    int256_varint16: bigint | null;
    int256_varint32: bigint | null;
    int256_varuint16: bigint | null;
    int256_varuint32: bigint | null;
    int256_bool: boolean | null;
    int256_cell: Cell | null;
    int256_address: Address | null;
    int256_struct: SomeStruct | null;
    uint8_varint16: bigint | null;
    uint8_varint32: bigint | null;
    uint8_varuint16: bigint | null;
    uint8_varuint32: bigint | null;
    uint8_bool: boolean | null;
    uint8_cell: Cell | null;
    uint8_address: Address | null;
    uint8_struct: SomeStruct | null;
    uint42_varint16: bigint | null;
    uint42_varint32: bigint | null;
    uint42_varuint16: bigint | null;
    uint42_varuint32: bigint | null;
    uint42_bool: boolean | null;
    uint42_cell: Cell | null;
    uint42_address: Address | null;
    uint42_struct: SomeStruct | null;
    uint256_varint16: bigint | null;
    uint256_varint32: bigint | null;
    uint256_varuint16: bigint | null;
    uint256_varuint32: bigint | null;
    uint256_bool: boolean | null;
    uint256_cell: Cell | null;
    uint256_address: Address | null;
    uint256_struct: SomeStruct | null;
    address_varint16: bigint | null;
    address_varint32: bigint | null;
    address_varuint16: bigint | null;
    address_varuint32: bigint | null;
    address_bool: boolean | null;
    address_cell: Cell | null;
    address_address: Address | null;
    address_struct: SomeStruct | null;
};
export declare function storeReplaceGetAllMapsResult(src: ReplaceGetAllMapsResult): (builder: Builder) => void;
export declare function loadReplaceGetAllMapsResult(slice: Slice): {
    $$type: "ReplaceGetAllMapsResult";
    int_varint16: bigint | null;
    int_varint32: bigint | null;
    int_varuint16: bigint | null;
    int_varuint32: bigint | null;
    int_bool: boolean | null;
    int_cell: Cell | null;
    int_address: Address | null;
    int_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    int8_varint16: bigint | null;
    int8_varint32: bigint | null;
    int8_varuint16: bigint | null;
    int8_varuint32: bigint | null;
    int8_bool: boolean | null;
    int8_cell: Cell | null;
    int8_address: Address | null;
    int8_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    int42_varint16: bigint | null;
    int42_varint32: bigint | null;
    int42_varuint16: bigint | null;
    int42_varuint32: bigint | null;
    int42_bool: boolean | null;
    int42_cell: Cell | null;
    int42_address: Address | null;
    int42_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    int256_varint16: bigint | null;
    int256_varint32: bigint | null;
    int256_varuint16: bigint | null;
    int256_varuint32: bigint | null;
    int256_bool: boolean | null;
    int256_cell: Cell | null;
    int256_address: Address | null;
    int256_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    uint8_varint16: bigint | null;
    uint8_varint32: bigint | null;
    uint8_varuint16: bigint | null;
    uint8_varuint32: bigint | null;
    uint8_bool: boolean | null;
    uint8_cell: Cell | null;
    uint8_address: Address | null;
    uint8_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    uint42_varint16: bigint | null;
    uint42_varint32: bigint | null;
    uint42_varuint16: bigint | null;
    uint42_varuint32: bigint | null;
    uint42_bool: boolean | null;
    uint42_cell: Cell | null;
    uint42_address: Address | null;
    uint42_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    uint256_varint16: bigint | null;
    uint256_varint32: bigint | null;
    uint256_varuint16: bigint | null;
    uint256_varuint32: bigint | null;
    uint256_bool: boolean | null;
    uint256_cell: Cell | null;
    uint256_address: Address | null;
    uint256_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
    address_varint16: bigint | null;
    address_varint32: bigint | null;
    address_varuint16: bigint | null;
    address_varuint32: bigint | null;
    address_bool: boolean | null;
    address_cell: Cell | null;
    address_address: Address | null;
    address_struct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
};
export type ExistsAllMapsResult = {
    $$type: 'ExistsAllMapsResult';
    int_varint16: boolean;
    int_varint32: boolean;
    int_varuint16: boolean;
    int_varuint32: boolean;
    int_bool: boolean;
    int_cell: boolean;
    int_address: boolean;
    int_struct: boolean;
    int8_varint16: boolean;
    int8_varint32: boolean;
    int8_varuint16: boolean;
    int8_varuint32: boolean;
    int8_bool: boolean;
    int8_cell: boolean;
    int8_address: boolean;
    int8_struct: boolean;
    int42_varint16: boolean;
    int42_varint32: boolean;
    int42_varuint16: boolean;
    int42_varuint32: boolean;
    int42_bool: boolean;
    int42_cell: boolean;
    int42_address: boolean;
    int42_struct: boolean;
    int256_varint16: boolean;
    int256_varint32: boolean;
    int256_varuint16: boolean;
    int256_varuint32: boolean;
    int256_bool: boolean;
    int256_cell: boolean;
    int256_address: boolean;
    int256_struct: boolean;
    uint8_varint16: boolean;
    uint8_varint32: boolean;
    uint8_varuint16: boolean;
    uint8_varuint32: boolean;
    uint8_bool: boolean;
    uint8_cell: boolean;
    uint8_address: boolean;
    uint8_struct: boolean;
    uint42_varint16: boolean;
    uint42_varint32: boolean;
    uint42_varuint16: boolean;
    uint42_varuint32: boolean;
    uint42_bool: boolean;
    uint42_cell: boolean;
    uint42_address: boolean;
    uint42_struct: boolean;
    uint256_varint16: boolean;
    uint256_varint32: boolean;
    uint256_varuint16: boolean;
    uint256_varuint32: boolean;
    uint256_bool: boolean;
    uint256_cell: boolean;
    uint256_address: boolean;
    uint256_struct: boolean;
    address_varint16: boolean;
    address_varint32: boolean;
    address_varuint16: boolean;
    address_varuint32: boolean;
    address_bool: boolean;
    address_cell: boolean;
    address_address: boolean;
    address_struct: boolean;
};
export declare function storeExistsAllMapsResult(src: ExistsAllMapsResult): (builder: Builder) => void;
export declare function loadExistsAllMapsResult(slice: Slice): {
    $$type: "ExistsAllMapsResult";
    int_varint16: boolean;
    int_varint32: boolean;
    int_varuint16: boolean;
    int_varuint32: boolean;
    int_bool: boolean;
    int_cell: boolean;
    int_address: boolean;
    int_struct: boolean;
    int8_varint16: boolean;
    int8_varint32: boolean;
    int8_varuint16: boolean;
    int8_varuint32: boolean;
    int8_bool: boolean;
    int8_cell: boolean;
    int8_address: boolean;
    int8_struct: boolean;
    int42_varint16: boolean;
    int42_varint32: boolean;
    int42_varuint16: boolean;
    int42_varuint32: boolean;
    int42_bool: boolean;
    int42_cell: boolean;
    int42_address: boolean;
    int42_struct: boolean;
    int256_varint16: boolean;
    int256_varint32: boolean;
    int256_varuint16: boolean;
    int256_varuint32: boolean;
    int256_bool: boolean;
    int256_cell: boolean;
    int256_address: boolean;
    int256_struct: boolean;
    uint8_varint16: boolean;
    uint8_varint32: boolean;
    uint8_varuint16: boolean;
    uint8_varuint32: boolean;
    uint8_bool: boolean;
    uint8_cell: boolean;
    uint8_address: boolean;
    uint8_struct: boolean;
    uint42_varint16: boolean;
    uint42_varint32: boolean;
    uint42_varuint16: boolean;
    uint42_varuint32: boolean;
    uint42_bool: boolean;
    uint42_cell: boolean;
    uint42_address: boolean;
    uint42_struct: boolean;
    uint256_varint16: boolean;
    uint256_varint32: boolean;
    uint256_varuint16: boolean;
    uint256_varuint32: boolean;
    uint256_bool: boolean;
    uint256_cell: boolean;
    uint256_address: boolean;
    uint256_struct: boolean;
    address_varint16: boolean;
    address_varint32: boolean;
    address_varuint16: boolean;
    address_varuint32: boolean;
    address_bool: boolean;
    address_cell: boolean;
    address_address: boolean;
    address_struct: boolean;
};
export type IsEmptyAllMapsResult = {
    $$type: 'IsEmptyAllMapsResult';
    int_varint16: boolean;
    int_varint32: boolean;
    int_varuint16: boolean;
    int_varuint32: boolean;
    int_bool: boolean;
    int_cell: boolean;
    int_address: boolean;
    int_struct: boolean;
    int8_varint16: boolean;
    int8_varint32: boolean;
    int8_varuint16: boolean;
    int8_varuint32: boolean;
    int8_bool: boolean;
    int8_cell: boolean;
    int8_address: boolean;
    int8_struct: boolean;
    int42_varint16: boolean;
    int42_varint32: boolean;
    int42_varuint16: boolean;
    int42_varuint32: boolean;
    int42_bool: boolean;
    int42_cell: boolean;
    int42_address: boolean;
    int42_struct: boolean;
    int256_varint16: boolean;
    int256_varint32: boolean;
    int256_varuint16: boolean;
    int256_varuint32: boolean;
    int256_bool: boolean;
    int256_cell: boolean;
    int256_address: boolean;
    int256_struct: boolean;
    uint8_varint16: boolean;
    uint8_varint32: boolean;
    uint8_varuint16: boolean;
    uint8_varuint32: boolean;
    uint8_bool: boolean;
    uint8_cell: boolean;
    uint8_address: boolean;
    uint8_struct: boolean;
    uint42_varint16: boolean;
    uint42_varint32: boolean;
    uint42_varuint16: boolean;
    uint42_varuint32: boolean;
    uint42_bool: boolean;
    uint42_cell: boolean;
    uint42_address: boolean;
    uint42_struct: boolean;
    uint256_varint16: boolean;
    uint256_varint32: boolean;
    uint256_varuint16: boolean;
    uint256_varuint32: boolean;
    uint256_bool: boolean;
    uint256_cell: boolean;
    uint256_address: boolean;
    uint256_struct: boolean;
    address_varint16: boolean;
    address_varint32: boolean;
    address_varuint16: boolean;
    address_varuint32: boolean;
    address_bool: boolean;
    address_cell: boolean;
    address_address: boolean;
    address_struct: boolean;
};
export declare function storeIsEmptyAllMapsResult(src: IsEmptyAllMapsResult): (builder: Builder) => void;
export declare function loadIsEmptyAllMapsResult(slice: Slice): {
    $$type: "IsEmptyAllMapsResult";
    int_varint16: boolean;
    int_varint32: boolean;
    int_varuint16: boolean;
    int_varuint32: boolean;
    int_bool: boolean;
    int_cell: boolean;
    int_address: boolean;
    int_struct: boolean;
    int8_varint16: boolean;
    int8_varint32: boolean;
    int8_varuint16: boolean;
    int8_varuint32: boolean;
    int8_bool: boolean;
    int8_cell: boolean;
    int8_address: boolean;
    int8_struct: boolean;
    int42_varint16: boolean;
    int42_varint32: boolean;
    int42_varuint16: boolean;
    int42_varuint32: boolean;
    int42_bool: boolean;
    int42_cell: boolean;
    int42_address: boolean;
    int42_struct: boolean;
    int256_varint16: boolean;
    int256_varint32: boolean;
    int256_varuint16: boolean;
    int256_varuint32: boolean;
    int256_bool: boolean;
    int256_cell: boolean;
    int256_address: boolean;
    int256_struct: boolean;
    uint8_varint16: boolean;
    uint8_varint32: boolean;
    uint8_varuint16: boolean;
    uint8_varuint32: boolean;
    uint8_bool: boolean;
    uint8_cell: boolean;
    uint8_address: boolean;
    uint8_struct: boolean;
    uint42_varint16: boolean;
    uint42_varint32: boolean;
    uint42_varuint16: boolean;
    uint42_varuint32: boolean;
    uint42_bool: boolean;
    uint42_cell: boolean;
    uint42_address: boolean;
    uint42_struct: boolean;
    uint256_varint16: boolean;
    uint256_varint32: boolean;
    uint256_varuint16: boolean;
    uint256_varuint32: boolean;
    uint256_bool: boolean;
    uint256_cell: boolean;
    uint256_address: boolean;
    uint256_struct: boolean;
    address_varint16: boolean;
    address_varint32: boolean;
    address_varuint16: boolean;
    address_varuint32: boolean;
    address_bool: boolean;
    address_cell: boolean;
    address_address: boolean;
    address_struct: boolean;
};
export type AsCellAllMapsResult = {
    $$type: 'AsCellAllMapsResult';
    int_varint16: Cell | null;
    int_varint32: Cell | null;
    int_varuint16: Cell | null;
    int_varuint32: Cell | null;
    int_bool: Cell | null;
    int_cell: Cell | null;
    int_address: Cell | null;
    int_struct: Cell | null;
    int8_varint16: Cell | null;
    int8_varint32: Cell | null;
    int8_varuint16: Cell | null;
    int8_varuint32: Cell | null;
    int8_bool: Cell | null;
    int8_cell: Cell | null;
    int8_address: Cell | null;
    int8_struct: Cell | null;
    int42_varint16: Cell | null;
    int42_varint32: Cell | null;
    int42_varuint16: Cell | null;
    int42_varuint32: Cell | null;
    int42_bool: Cell | null;
    int42_cell: Cell | null;
    int42_address: Cell | null;
    int42_struct: Cell | null;
    int256_varint16: Cell | null;
    int256_varint32: Cell | null;
    int256_varuint16: Cell | null;
    int256_varuint32: Cell | null;
    int256_bool: Cell | null;
    int256_cell: Cell | null;
    int256_address: Cell | null;
    int256_struct: Cell | null;
    uint8_varint16: Cell | null;
    uint8_varint32: Cell | null;
    uint8_varuint16: Cell | null;
    uint8_varuint32: Cell | null;
    uint8_bool: Cell | null;
    uint8_cell: Cell | null;
    uint8_address: Cell | null;
    uint8_struct: Cell | null;
    uint42_varint16: Cell | null;
    uint42_varint32: Cell | null;
    uint42_varuint16: Cell | null;
    uint42_varuint32: Cell | null;
    uint42_bool: Cell | null;
    uint42_cell: Cell | null;
    uint42_address: Cell | null;
    uint42_struct: Cell | null;
    uint256_varint16: Cell | null;
    uint256_varint32: Cell | null;
    uint256_varuint16: Cell | null;
    uint256_varuint32: Cell | null;
    uint256_bool: Cell | null;
    uint256_cell: Cell | null;
    uint256_address: Cell | null;
    uint256_struct: Cell | null;
    address_varint16: Cell | null;
    address_varint32: Cell | null;
    address_varuint16: Cell | null;
    address_varuint32: Cell | null;
    address_bool: Cell | null;
    address_cell: Cell | null;
    address_address: Cell | null;
    address_struct: Cell | null;
};
export declare function storeAsCellAllMapsResult(src: AsCellAllMapsResult): (builder: Builder) => void;
export declare function loadAsCellAllMapsResult(slice: Slice): {
    $$type: "AsCellAllMapsResult";
    int_varint16: Cell | null;
    int_varint32: Cell | null;
    int_varuint16: Cell | null;
    int_varuint32: Cell | null;
    int_bool: Cell | null;
    int_cell: Cell | null;
    int_address: Cell | null;
    int_struct: Cell | null;
    int8_varint16: Cell | null;
    int8_varint32: Cell | null;
    int8_varuint16: Cell | null;
    int8_varuint32: Cell | null;
    int8_bool: Cell | null;
    int8_cell: Cell | null;
    int8_address: Cell | null;
    int8_struct: Cell | null;
    int42_varint16: Cell | null;
    int42_varint32: Cell | null;
    int42_varuint16: Cell | null;
    int42_varuint32: Cell | null;
    int42_bool: Cell | null;
    int42_cell: Cell | null;
    int42_address: Cell | null;
    int42_struct: Cell | null;
    int256_varint16: Cell | null;
    int256_varint32: Cell | null;
    int256_varuint16: Cell | null;
    int256_varuint32: Cell | null;
    int256_bool: Cell | null;
    int256_cell: Cell | null;
    int256_address: Cell | null;
    int256_struct: Cell | null;
    uint8_varint16: Cell | null;
    uint8_varint32: Cell | null;
    uint8_varuint16: Cell | null;
    uint8_varuint32: Cell | null;
    uint8_bool: Cell | null;
    uint8_cell: Cell | null;
    uint8_address: Cell | null;
    uint8_struct: Cell | null;
    uint42_varint16: Cell | null;
    uint42_varint32: Cell | null;
    uint42_varuint16: Cell | null;
    uint42_varuint32: Cell | null;
    uint42_bool: Cell | null;
    uint42_cell: Cell | null;
    uint42_address: Cell | null;
    uint42_struct: Cell | null;
    uint256_varint16: Cell | null;
    uint256_varint32: Cell | null;
    uint256_varuint16: Cell | null;
    uint256_varuint32: Cell | null;
    uint256_bool: Cell | null;
    uint256_cell: Cell | null;
    uint256_address: Cell | null;
    uint256_struct: Cell | null;
    address_varint16: Cell | null;
    address_varint32: Cell | null;
    address_varuint16: Cell | null;
    address_varuint32: Cell | null;
    address_bool: Cell | null;
    address_cell: Cell | null;
    address_address: Cell | null;
    address_struct: Cell | null;
};
export type SetAllMaps = {
    $$type: 'SetAllMaps';
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
    valueVarint16: bigint | null;
    valueVarint32: bigint | null;
    valueVaruint16: bigint | null;
    valueVaruint32: bigint | null;
    valueBool: boolean | null;
    valueCell: Cell | null;
    valueAddress: Address | null;
    valueStruct: SomeStruct | null;
};
export declare function storeSetAllMaps(src: SetAllMaps): (builder: Builder) => void;
export declare function loadSetAllMaps(slice: Slice): {
    $$type: "SetAllMaps";
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
    valueVarint16: bigint | null;
    valueVarint32: bigint | null;
    valueVaruint16: bigint | null;
    valueVaruint32: bigint | null;
    valueBool: boolean | null;
    valueCell: Cell | null;
    valueAddress: Address | null;
    valueStruct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
};
export type DelAllMaps = {
    $$type: 'DelAllMaps';
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
};
export declare function storeDelAllMaps(src: DelAllMaps): (builder: Builder) => void;
export declare function loadDelAllMaps(slice: Slice): {
    $$type: "DelAllMaps";
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
};
export type ReplaceAllMaps = {
    $$type: 'ReplaceAllMaps';
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
    valueVarint16: bigint | null;
    valueVarint32: bigint | null;
    valueVaruint16: bigint | null;
    valueVaruint32: bigint | null;
    valueBool: boolean | null;
    valueCell: Cell | null;
    valueAddress: Address | null;
    valueStruct: SomeStruct | null;
};
export declare function storeReplaceAllMaps(src: ReplaceAllMaps): (builder: Builder) => void;
export declare function loadReplaceAllMaps(slice: Slice): {
    $$type: "ReplaceAllMaps";
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
    valueVarint16: bigint | null;
    valueVarint32: bigint | null;
    valueVaruint16: bigint | null;
    valueVaruint32: bigint | null;
    valueBool: boolean | null;
    valueCell: Cell | null;
    valueAddress: Address | null;
    valueStruct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
};
export type ReplaceGetAllMaps = {
    $$type: 'ReplaceGetAllMaps';
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
    valueVarint16: bigint | null;
    valueVarint32: bigint | null;
    valueVaruint16: bigint | null;
    valueVaruint32: bigint | null;
    valueBool: boolean | null;
    valueCell: Cell | null;
    valueAddress: Address | null;
    valueStruct: SomeStruct | null;
};
export declare function storeReplaceGetAllMaps(src: ReplaceGetAllMaps): (builder: Builder) => void;
export declare function loadReplaceGetAllMaps(slice: Slice): {
    $$type: "ReplaceGetAllMaps";
    keyInt: bigint;
    keyInt8: bigint;
    keyInt42: bigint;
    keyInt256: bigint;
    keyUint8: bigint;
    keyUint42: bigint;
    keyUint256: bigint;
    keyAddress: Address;
    valueVarint16: bigint | null;
    valueVarint32: bigint | null;
    valueVaruint16: bigint | null;
    valueVaruint32: bigint | null;
    valueBool: boolean | null;
    valueCell: Cell | null;
    valueAddress: Address | null;
    valueStruct: {
        $$type: "SomeStruct";
        int: bigint;
        bool: boolean;
        address: Address;
        a: bigint;
        b: bigint;
    } | null;
};
export type CheckNullReference = {
    $$type: 'CheckNullReference';
};
export declare function storeCheckNullReference(src: CheckNullReference): (builder: Builder) => void;
export declare function loadCheckNullReference(slice: Slice): {
    $$type: "CheckNullReference";
};
export type MapTestContract$Data = {
    $$type: 'MapTestContract$Data';
    int_varint16: Dictionary<bigint, bigint>;
    int_varint32: Dictionary<bigint, bigint>;
    int_varuint16: Dictionary<bigint, bigint>;
    int_varuint32: Dictionary<bigint, bigint>;
    int_bool: Dictionary<bigint, boolean>;
    int_cell: Dictionary<bigint, Cell>;
    int_address: Dictionary<bigint, Address>;
    int_struct: Dictionary<bigint, SomeStruct>;
    int8_varint16: Dictionary<number, bigint>;
    int8_varint32: Dictionary<number, bigint>;
    int8_varuint16: Dictionary<number, bigint>;
    int8_varuint32: Dictionary<number, bigint>;
    int8_bool: Dictionary<number, boolean>;
    int8_cell: Dictionary<number, Cell>;
    int8_address: Dictionary<number, Address>;
    int8_struct: Dictionary<number, SomeStruct>;
    int42_varint16: Dictionary<bigint, bigint>;
    int42_varint32: Dictionary<bigint, bigint>;
    int42_varuint16: Dictionary<bigint, bigint>;
    int42_varuint32: Dictionary<bigint, bigint>;
    int42_bool: Dictionary<bigint, boolean>;
    int42_cell: Dictionary<bigint, Cell>;
    int42_address: Dictionary<bigint, Address>;
    int42_struct: Dictionary<bigint, SomeStruct>;
    int256_varint16: Dictionary<bigint, bigint>;
    int256_varint32: Dictionary<bigint, bigint>;
    int256_varuint16: Dictionary<bigint, bigint>;
    int256_varuint32: Dictionary<bigint, bigint>;
    int256_bool: Dictionary<bigint, boolean>;
    int256_cell: Dictionary<bigint, Cell>;
    int256_address: Dictionary<bigint, Address>;
    int256_struct: Dictionary<bigint, SomeStruct>;
    uint8_varint16: Dictionary<number, bigint>;
    uint8_varint32: Dictionary<number, bigint>;
    uint8_varuint16: Dictionary<number, bigint>;
    uint8_varuint32: Dictionary<number, bigint>;
    uint8_bool: Dictionary<number, boolean>;
    uint8_cell: Dictionary<number, Cell>;
    uint8_address: Dictionary<number, Address>;
    uint8_struct: Dictionary<number, SomeStruct>;
    uint42_varint16: Dictionary<bigint, bigint>;
    uint42_varint32: Dictionary<bigint, bigint>;
    uint42_varuint16: Dictionary<bigint, bigint>;
    uint42_varuint32: Dictionary<bigint, bigint>;
    uint42_bool: Dictionary<bigint, boolean>;
    uint42_cell: Dictionary<bigint, Cell>;
    uint42_address: Dictionary<bigint, Address>;
    uint42_struct: Dictionary<bigint, SomeStruct>;
    uint256_varint16: Dictionary<bigint, bigint>;
    uint256_varint32: Dictionary<bigint, bigint>;
    uint256_varuint16: Dictionary<bigint, bigint>;
    uint256_varuint32: Dictionary<bigint, bigint>;
    uint256_bool: Dictionary<bigint, boolean>;
    uint256_cell: Dictionary<bigint, Cell>;
    uint256_address: Dictionary<bigint, Address>;
    uint256_struct: Dictionary<bigint, SomeStruct>;
    address_varint16: Dictionary<Address, bigint>;
    address_varint32: Dictionary<Address, bigint>;
    address_varuint16: Dictionary<Address, bigint>;
    address_varuint32: Dictionary<Address, bigint>;
    address_bool: Dictionary<Address, boolean>;
    address_cell: Dictionary<Address, Cell>;
    address_address: Dictionary<Address, Address>;
    address_struct: Dictionary<Address, SomeStruct>;
};
export declare function storeMapTestContract$Data(src: MapTestContract$Data): (builder: Builder) => void;
export declare function loadMapTestContract$Data(slice: Slice): {
    $$type: "MapTestContract$Data";
    int_varint16: Dictionary<bigint, bigint>;
    int_varint32: Dictionary<bigint, bigint>;
    int_varuint16: Dictionary<bigint, bigint>;
    int_varuint32: Dictionary<bigint, bigint>;
    int_bool: Dictionary<bigint, boolean>;
    int_cell: Dictionary<bigint, Cell>;
    int_address: Dictionary<bigint, Address>;
    int_struct: Dictionary<bigint, SomeStruct>;
    int8_varint16: Dictionary<number, bigint>;
    int8_varint32: Dictionary<number, bigint>;
    int8_varuint16: Dictionary<number, bigint>;
    int8_varuint32: Dictionary<number, bigint>;
    int8_bool: Dictionary<number, boolean>;
    int8_cell: Dictionary<number, Cell>;
    int8_address: Dictionary<number, Address>;
    int8_struct: Dictionary<number, SomeStruct>;
    int42_varint16: Dictionary<bigint, bigint>;
    int42_varint32: Dictionary<bigint, bigint>;
    int42_varuint16: Dictionary<bigint, bigint>;
    int42_varuint32: Dictionary<bigint, bigint>;
    int42_bool: Dictionary<bigint, boolean>;
    int42_cell: Dictionary<bigint, Cell>;
    int42_address: Dictionary<bigint, Address>;
    int42_struct: Dictionary<bigint, SomeStruct>;
    int256_varint16: Dictionary<bigint, bigint>;
    int256_varint32: Dictionary<bigint, bigint>;
    int256_varuint16: Dictionary<bigint, bigint>;
    int256_varuint32: Dictionary<bigint, bigint>;
    int256_bool: Dictionary<bigint, boolean>;
    int256_cell: Dictionary<bigint, Cell>;
    int256_address: Dictionary<bigint, Address>;
    int256_struct: Dictionary<bigint, SomeStruct>;
    uint8_varint16: Dictionary<number, bigint>;
    uint8_varint32: Dictionary<number, bigint>;
    uint8_varuint16: Dictionary<number, bigint>;
    uint8_varuint32: Dictionary<number, bigint>;
    uint8_bool: Dictionary<number, boolean>;
    uint8_cell: Dictionary<number, Cell>;
    uint8_address: Dictionary<number, Address>;
    uint8_struct: Dictionary<number, SomeStruct>;
    uint42_varint16: Dictionary<bigint, bigint>;
    uint42_varint32: Dictionary<bigint, bigint>;
    uint42_varuint16: Dictionary<bigint, bigint>;
    uint42_varuint32: Dictionary<bigint, bigint>;
    uint42_bool: Dictionary<bigint, boolean>;
    uint42_cell: Dictionary<bigint, Cell>;
    uint42_address: Dictionary<bigint, Address>;
    uint42_struct: Dictionary<bigint, SomeStruct>;
    uint256_varint16: Dictionary<bigint, bigint>;
    uint256_varint32: Dictionary<bigint, bigint>;
    uint256_varuint16: Dictionary<bigint, bigint>;
    uint256_varuint32: Dictionary<bigint, bigint>;
    uint256_bool: Dictionary<bigint, boolean>;
    uint256_cell: Dictionary<bigint, Cell>;
    uint256_address: Dictionary<bigint, Address>;
    uint256_struct: Dictionary<bigint, SomeStruct>;
    address_varint16: Dictionary<Address, bigint>;
    address_varint32: Dictionary<Address, bigint>;
    address_varuint16: Dictionary<Address, bigint>;
    address_varuint32: Dictionary<Address, bigint>;
    address_bool: Dictionary<Address, boolean>;
    address_cell: Dictionary<Address, Cell>;
    address_address: Dictionary<Address, Address>;
    address_struct: Dictionary<Address, SomeStruct>;
};
export declare const MapTestContract_getterMapping: {
    [key: string]: string;
};
export declare class MapTestContract implements Contract {
    static readonly storageReserve = 0n;
    static init(): Promise<{
        code: Cell;
        data: Cell;
    }>;
    static fromInit(): Promise<MapTestContract>;
    static fromAddress(address: Address): MapTestContract;
    readonly address: Address;
    readonly init?: {
        code: Cell;
        data: Cell;
    };
    readonly abi: ContractABI;
    private constructor();
    send(provider: ContractProvider, via: Sender, args: {
        value: bigint;
        bounce?: boolean | null | undefined;
    }, message: null | SetAllMaps | DelAllMaps | ReplaceAllMaps | ReplaceGetAllMaps | CheckNullReference): Promise<void>;
    getAllMaps(provider: ContractProvider): Promise<{
        $$type: "MapTestContract$Data";
        int_varint16: Dictionary<bigint, bigint>;
        int_varint32: Dictionary<bigint, bigint>;
        int_varuint16: Dictionary<bigint, bigint>;
        int_varuint32: Dictionary<bigint, bigint>;
        int_bool: Dictionary<bigint, boolean>;
        int_cell: Dictionary<bigint, Cell>;
        int_address: Dictionary<bigint, Address>;
        int_struct: Dictionary<bigint, SomeStruct>;
        int8_varint16: Dictionary<number, bigint>;
        int8_varint32: Dictionary<number, bigint>;
        int8_varuint16: Dictionary<number, bigint>;
        int8_varuint32: Dictionary<number, bigint>;
        int8_bool: Dictionary<number, boolean>;
        int8_cell: Dictionary<number, Cell>;
        int8_address: Dictionary<number, Address>;
        int8_struct: Dictionary<number, SomeStruct>;
        int42_varint16: Dictionary<bigint, bigint>;
        int42_varint32: Dictionary<bigint, bigint>;
        int42_varuint16: Dictionary<bigint, bigint>;
        int42_varuint32: Dictionary<bigint, bigint>;
        int42_bool: Dictionary<bigint, boolean>;
        int42_cell: Dictionary<bigint, Cell>;
        int42_address: Dictionary<bigint, Address>;
        int42_struct: Dictionary<bigint, SomeStruct>;
        int256_varint16: Dictionary<bigint, bigint>;
        int256_varint32: Dictionary<bigint, bigint>;
        int256_varuint16: Dictionary<bigint, bigint>;
        int256_varuint32: Dictionary<bigint, bigint>;
        int256_bool: Dictionary<bigint, boolean>;
        int256_cell: Dictionary<bigint, Cell>;
        int256_address: Dictionary<bigint, Address>;
        int256_struct: Dictionary<bigint, SomeStruct>;
        uint8_varint16: Dictionary<number, bigint>;
        uint8_varint32: Dictionary<number, bigint>;
        uint8_varuint16: Dictionary<number, bigint>;
        uint8_varuint32: Dictionary<number, bigint>;
        uint8_bool: Dictionary<number, boolean>;
        uint8_cell: Dictionary<number, Cell>;
        uint8_address: Dictionary<number, Address>;
        uint8_struct: Dictionary<number, SomeStruct>;
        uint42_varint16: Dictionary<bigint, bigint>;
        uint42_varint32: Dictionary<bigint, bigint>;
        uint42_varuint16: Dictionary<bigint, bigint>;
        uint42_varuint32: Dictionary<bigint, bigint>;
        uint42_bool: Dictionary<bigint, boolean>;
        uint42_cell: Dictionary<bigint, Cell>;
        uint42_address: Dictionary<bigint, Address>;
        uint42_struct: Dictionary<bigint, SomeStruct>;
        uint256_varint16: Dictionary<bigint, bigint>;
        uint256_varint32: Dictionary<bigint, bigint>;
        uint256_varuint16: Dictionary<bigint, bigint>;
        uint256_varuint32: Dictionary<bigint, bigint>;
        uint256_bool: Dictionary<bigint, boolean>;
        uint256_cell: Dictionary<bigint, Cell>;
        uint256_address: Dictionary<bigint, Address>;
        uint256_struct: Dictionary<bigint, SomeStruct>;
        address_varint16: Dictionary<Address, bigint>;
        address_varint32: Dictionary<Address, bigint>;
        address_varuint16: Dictionary<Address, bigint>;
        address_varuint32: Dictionary<Address, bigint>;
        address_bool: Dictionary<Address, boolean>;
        address_cell: Dictionary<Address, Cell>;
        address_address: Dictionary<Address, Address>;
        address_struct: Dictionary<Address, SomeStruct>;
    }>;
    getGetAllMaps(provider: ContractProvider, keyInt: bigint, keyInt8: bigint, keyInt42: bigint, keyInt256: bigint, keyUint8: bigint, keyUint42: bigint, keyUint256: bigint, keyAddress: Address): Promise<{
        $$type: "GetAllMapsResult";
        int_varint16: bigint | null;
        int_varint32: bigint | null;
        int_varuint16: bigint | null;
        int_varuint32: bigint | null;
        int_bool: boolean | null;
        int_cell: Cell | null;
        int_address: Address | null;
        int_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        int8_varint16: bigint | null;
        int8_varint32: bigint | null;
        int8_varuint16: bigint | null;
        int8_varuint32: bigint | null;
        int8_bool: boolean | null;
        int8_cell: Cell | null;
        int8_address: Address | null;
        int8_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        int42_varint16: bigint | null;
        int42_varint32: bigint | null;
        int42_varuint16: bigint | null;
        int42_varuint32: bigint | null;
        int42_bool: boolean | null;
        int42_cell: Cell | null;
        int42_address: Address | null;
        int42_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        int256_varint16: bigint | null;
        int256_varint32: bigint | null;
        int256_varuint16: bigint | null;
        int256_varuint32: bigint | null;
        int256_bool: boolean | null;
        int256_cell: Cell | null;
        int256_address: Address | null;
        int256_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        uint8_varint16: bigint | null;
        uint8_varint32: bigint | null;
        uint8_varuint16: bigint | null;
        uint8_varuint32: bigint | null;
        uint8_bool: boolean | null;
        uint8_cell: Cell | null;
        uint8_address: Address | null;
        uint8_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        uint42_varint16: bigint | null;
        uint42_varint32: bigint | null;
        uint42_varuint16: bigint | null;
        uint42_varuint32: bigint | null;
        uint42_bool: boolean | null;
        uint42_cell: Cell | null;
        uint42_address: Address | null;
        uint42_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        uint256_varint16: bigint | null;
        uint256_varint32: bigint | null;
        uint256_varuint16: bigint | null;
        uint256_varuint32: bigint | null;
        uint256_bool: boolean | null;
        uint256_cell: Cell | null;
        uint256_address: Address | null;
        uint256_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        address_varint16: bigint | null;
        address_varint32: bigint | null;
        address_varuint16: bigint | null;
        address_varuint32: bigint | null;
        address_bool: boolean | null;
        address_cell: Cell | null;
        address_address: Address | null;
        address_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
    }>;
    getReplaceAllMaps(provider: ContractProvider, keyInt: bigint, keyInt8: bigint, keyInt42: bigint, keyInt256: bigint, keyUint8: bigint, keyUint42: bigint, keyUint256: bigint, keyAddress: Address, valueVarint16: bigint, valueVarint32: bigint, valueVaruint16: bigint, valueVaruint32: bigint, valueBool: boolean, valueCell: Cell, valueAddress: Address, valueStruct: SomeStruct): Promise<{
        $$type: "ReplaceAllMapsResult";
        int_varint16: boolean;
        int_varint32: boolean;
        int_varuint16: boolean;
        int_varuint32: boolean;
        int_bool: boolean;
        int_cell: boolean;
        int_address: boolean;
        int_struct: boolean;
        int8_varint16: boolean;
        int8_varint32: boolean;
        int8_varuint16: boolean;
        int8_varuint32: boolean;
        int8_bool: boolean;
        int8_cell: boolean;
        int8_address: boolean;
        int8_struct: boolean;
        int42_varint16: boolean;
        int42_varint32: boolean;
        int42_varuint16: boolean;
        int42_varuint32: boolean;
        int42_bool: boolean;
        int42_cell: boolean;
        int42_address: boolean;
        int42_struct: boolean;
        int256_varint16: boolean;
        int256_varint32: boolean;
        int256_varuint16: boolean;
        int256_varuint32: boolean;
        int256_bool: boolean;
        int256_cell: boolean;
        int256_address: boolean;
        int256_struct: boolean;
        uint8_varint16: boolean;
        uint8_varint32: boolean;
        uint8_varuint16: boolean;
        uint8_varuint32: boolean;
        uint8_bool: boolean;
        uint8_cell: boolean;
        uint8_address: boolean;
        uint8_struct: boolean;
        uint42_varint16: boolean;
        uint42_varint32: boolean;
        uint42_varuint16: boolean;
        uint42_varuint32: boolean;
        uint42_bool: boolean;
        uint42_cell: boolean;
        uint42_address: boolean;
        uint42_struct: boolean;
        uint256_varint16: boolean;
        uint256_varint32: boolean;
        uint256_varuint16: boolean;
        uint256_varuint32: boolean;
        uint256_bool: boolean;
        uint256_cell: boolean;
        uint256_address: boolean;
        uint256_struct: boolean;
        address_varint16: boolean;
        address_varint32: boolean;
        address_varuint16: boolean;
        address_varuint32: boolean;
        address_bool: boolean;
        address_cell: boolean;
        address_address: boolean;
        address_struct: boolean;
    }>;
    getReplaceGetAllMaps(provider: ContractProvider, keyInt: bigint, keyInt8: bigint, keyInt42: bigint, keyInt256: bigint, keyUint8: bigint, keyUint42: bigint, keyUint256: bigint, keyAddress: Address, valueVarint16: bigint, valueVarint32: bigint, valueVaruint16: bigint, valueVaruint32: bigint, valueBool: boolean, valueCell: Cell, valueAddress: Address, valueStruct: SomeStruct): Promise<{
        $$type: "ReplaceGetAllMapsResult";
        int_varint16: bigint | null;
        int_varint32: bigint | null;
        int_varuint16: bigint | null;
        int_varuint32: bigint | null;
        int_bool: boolean | null;
        int_cell: Cell | null;
        int_address: Address | null;
        int_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        int8_varint16: bigint | null;
        int8_varint32: bigint | null;
        int8_varuint16: bigint | null;
        int8_varuint32: bigint | null;
        int8_bool: boolean | null;
        int8_cell: Cell | null;
        int8_address: Address | null;
        int8_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        int42_varint16: bigint | null;
        int42_varint32: bigint | null;
        int42_varuint16: bigint | null;
        int42_varuint32: bigint | null;
        int42_bool: boolean | null;
        int42_cell: Cell | null;
        int42_address: Address | null;
        int42_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        int256_varint16: bigint | null;
        int256_varint32: bigint | null;
        int256_varuint16: bigint | null;
        int256_varuint32: bigint | null;
        int256_bool: boolean | null;
        int256_cell: Cell | null;
        int256_address: Address | null;
        int256_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        uint8_varint16: bigint | null;
        uint8_varint32: bigint | null;
        uint8_varuint16: bigint | null;
        uint8_varuint32: bigint | null;
        uint8_bool: boolean | null;
        uint8_cell: Cell | null;
        uint8_address: Address | null;
        uint8_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        uint42_varint16: bigint | null;
        uint42_varint32: bigint | null;
        uint42_varuint16: bigint | null;
        uint42_varuint32: bigint | null;
        uint42_bool: boolean | null;
        uint42_cell: Cell | null;
        uint42_address: Address | null;
        uint42_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        uint256_varint16: bigint | null;
        uint256_varint32: bigint | null;
        uint256_varuint16: bigint | null;
        uint256_varuint32: bigint | null;
        uint256_bool: boolean | null;
        uint256_cell: Cell | null;
        uint256_address: Address | null;
        uint256_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
        address_varint16: bigint | null;
        address_varint32: bigint | null;
        address_varuint16: bigint | null;
        address_varuint32: bigint | null;
        address_bool: boolean | null;
        address_cell: Cell | null;
        address_address: Address | null;
        address_struct: {
            $$type: "SomeStruct";
            int: bigint;
            bool: boolean;
            address: Address;
            a: bigint;
            b: bigint;
        } | null;
    }>;
    getExistsAllMaps(provider: ContractProvider, keyInt: bigint, keyInt8: bigint, keyInt42: bigint, keyInt256: bigint, keyUint8: bigint, keyUint42: bigint, keyUint256: bigint, keyAddress: Address): Promise<{
        $$type: "ExistsAllMapsResult";
        int_varint16: boolean;
        int_varint32: boolean;
        int_varuint16: boolean;
        int_varuint32: boolean;
        int_bool: boolean;
        int_cell: boolean;
        int_address: boolean;
        int_struct: boolean;
        int8_varint16: boolean;
        int8_varint32: boolean;
        int8_varuint16: boolean;
        int8_varuint32: boolean;
        int8_bool: boolean;
        int8_cell: boolean;
        int8_address: boolean;
        int8_struct: boolean;
        int42_varint16: boolean;
        int42_varint32: boolean;
        int42_varuint16: boolean;
        int42_varuint32: boolean;
        int42_bool: boolean;
        int42_cell: boolean;
        int42_address: boolean;
        int42_struct: boolean;
        int256_varint16: boolean;
        int256_varint32: boolean;
        int256_varuint16: boolean;
        int256_varuint32: boolean;
        int256_bool: boolean;
        int256_cell: boolean;
        int256_address: boolean;
        int256_struct: boolean;
        uint8_varint16: boolean;
        uint8_varint32: boolean;
        uint8_varuint16: boolean;
        uint8_varuint32: boolean;
        uint8_bool: boolean;
        uint8_cell: boolean;
        uint8_address: boolean;
        uint8_struct: boolean;
        uint42_varint16: boolean;
        uint42_varint32: boolean;
        uint42_varuint16: boolean;
        uint42_varuint32: boolean;
        uint42_bool: boolean;
        uint42_cell: boolean;
        uint42_address: boolean;
        uint42_struct: boolean;
        uint256_varint16: boolean;
        uint256_varint32: boolean;
        uint256_varuint16: boolean;
        uint256_varuint32: boolean;
        uint256_bool: boolean;
        uint256_cell: boolean;
        uint256_address: boolean;
        uint256_struct: boolean;
        address_varint16: boolean;
        address_varint32: boolean;
        address_varuint16: boolean;
        address_varuint32: boolean;
        address_bool: boolean;
        address_cell: boolean;
        address_address: boolean;
        address_struct: boolean;
    }>;
    getIsEmptyAllMaps(provider: ContractProvider): Promise<{
        $$type: "IsEmptyAllMapsResult";
        int_varint16: boolean;
        int_varint32: boolean;
        int_varuint16: boolean;
        int_varuint32: boolean;
        int_bool: boolean;
        int_cell: boolean;
        int_address: boolean;
        int_struct: boolean;
        int8_varint16: boolean;
        int8_varint32: boolean;
        int8_varuint16: boolean;
        int8_varuint32: boolean;
        int8_bool: boolean;
        int8_cell: boolean;
        int8_address: boolean;
        int8_struct: boolean;
        int42_varint16: boolean;
        int42_varint32: boolean;
        int42_varuint16: boolean;
        int42_varuint32: boolean;
        int42_bool: boolean;
        int42_cell: boolean;
        int42_address: boolean;
        int42_struct: boolean;
        int256_varint16: boolean;
        int256_varint32: boolean;
        int256_varuint16: boolean;
        int256_varuint32: boolean;
        int256_bool: boolean;
        int256_cell: boolean;
        int256_address: boolean;
        int256_struct: boolean;
        uint8_varint16: boolean;
        uint8_varint32: boolean;
        uint8_varuint16: boolean;
        uint8_varuint32: boolean;
        uint8_bool: boolean;
        uint8_cell: boolean;
        uint8_address: boolean;
        uint8_struct: boolean;
        uint42_varint16: boolean;
        uint42_varint32: boolean;
        uint42_varuint16: boolean;
        uint42_varuint32: boolean;
        uint42_bool: boolean;
        uint42_cell: boolean;
        uint42_address: boolean;
        uint42_struct: boolean;
        uint256_varint16: boolean;
        uint256_varint32: boolean;
        uint256_varuint16: boolean;
        uint256_varuint32: boolean;
        uint256_bool: boolean;
        uint256_cell: boolean;
        uint256_address: boolean;
        uint256_struct: boolean;
        address_varint16: boolean;
        address_varint32: boolean;
        address_varuint16: boolean;
        address_varuint32: boolean;
        address_bool: boolean;
        address_cell: boolean;
        address_address: boolean;
        address_struct: boolean;
    }>;
    getAsCellAllMaps(provider: ContractProvider): Promise<{
        $$type: "AsCellAllMapsResult";
        int_varint16: Cell | null;
        int_varint32: Cell | null;
        int_varuint16: Cell | null;
        int_varuint32: Cell | null;
        int_bool: Cell | null;
        int_cell: Cell | null;
        int_address: Cell | null;
        int_struct: Cell | null;
        int8_varint16: Cell | null;
        int8_varint32: Cell | null;
        int8_varuint16: Cell | null;
        int8_varuint32: Cell | null;
        int8_bool: Cell | null;
        int8_cell: Cell | null;
        int8_address: Cell | null;
        int8_struct: Cell | null;
        int42_varint16: Cell | null;
        int42_varint32: Cell | null;
        int42_varuint16: Cell | null;
        int42_varuint32: Cell | null;
        int42_bool: Cell | null;
        int42_cell: Cell | null;
        int42_address: Cell | null;
        int42_struct: Cell | null;
        int256_varint16: Cell | null;
        int256_varint32: Cell | null;
        int256_varuint16: Cell | null;
        int256_varuint32: Cell | null;
        int256_bool: Cell | null;
        int256_cell: Cell | null;
        int256_address: Cell | null;
        int256_struct: Cell | null;
        uint8_varint16: Cell | null;
        uint8_varint32: Cell | null;
        uint8_varuint16: Cell | null;
        uint8_varuint32: Cell | null;
        uint8_bool: Cell | null;
        uint8_cell: Cell | null;
        uint8_address: Cell | null;
        uint8_struct: Cell | null;
        uint42_varint16: Cell | null;
        uint42_varint32: Cell | null;
        uint42_varuint16: Cell | null;
        uint42_varuint32: Cell | null;
        uint42_bool: Cell | null;
        uint42_cell: Cell | null;
        uint42_address: Cell | null;
        uint42_struct: Cell | null;
        uint256_varint16: Cell | null;
        uint256_varint32: Cell | null;
        uint256_varuint16: Cell | null;
        uint256_varuint32: Cell | null;
        uint256_bool: Cell | null;
        uint256_cell: Cell | null;
        uint256_address: Cell | null;
        uint256_struct: Cell | null;
        address_varint16: Cell | null;
        address_varint32: Cell | null;
        address_varuint16: Cell | null;
        address_varuint32: Cell | null;
        address_bool: Cell | null;
        address_cell: Cell | null;
        address_address: Cell | null;
        address_struct: Cell | null;
    }>;
    getCheckNullReference(provider: ContractProvider): Promise<bigint>;
}
