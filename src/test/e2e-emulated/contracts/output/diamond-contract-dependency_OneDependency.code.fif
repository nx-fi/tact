// automatically generated from `@stdlib/std/stdlib.fc` `@stdlib/std/stdlib_ex.fc` `/home/benji/proj/ton/tact/src/test/e2e-emulated/contracts/output/diamond-contract-dependency_OneDependency.code.fc` 
PROGRAM{
  DECLPROC __tact_sha256
  DECLPROC $OneDependency$_load
  DECLPROC $StateInit$_to_external
  DECLPROC $NoDependencies$init$_store
  DECLPROC $OneDependency$init$_store
  DECLPROC $OneDependency$init$_load
  DECLPROC $OneDependency$_contract_init
  DECLPROC $OneDependency$_contract_load
  DECLPROC $NoDependencies$_init_child
  DECLPROC $OneDependency$_init_child
  DECLPROC $OneDependency$_fun_getDep
  DECLPROC $OneDependency$_fun_getState
  93811 DECLMETHOD %getDep
  124033 DECLMETHOD %getState
  DECLPROC recv_internal
  65535 DECLMETHOD __tact_selector_hack
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_child_contract_codes
  DECLGLOBVAR __tact_randomized
  __tact_sha256 PROC:<{
    ONE
    WHILE:<{
      OVER SREFS 0 NEQINT
    }>DO<{
      OVER LDREF s0 POP CTOS s0 s1 XCHG INC
    }>
    HASHEXT_SHA256
  }>
  $OneDependency$_load PROCINLINE:<{
    32 LDU
    SWAP
  }>
  $StateInit$_to_external PROCINLINE:<{
  }>
  $NoDependencies$init$_store PROCINLINE:<{
    DROP
  }>
  $OneDependency$init$_store PROCINLINE:<{
    SWAP
    257 PUSHINT
    STIX
  }>
  $OneDependency$init$_load PROCINLINE:<{
    257 PUSHINT
    LDIX
    SWAP
  }>
  $OneDependency$_contract_init PROCINLINE:<{
  }>
  $OneDependency$_contract_load PROCINLINE:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
    IF:<{
      $OneDependency$_load INLINECALLDICT
      NIP
    }>ELSE<{
      $OneDependency$init$_load INLINECALLDICT
      SWAP
      ENDS
      $OneDependency$_contract_init INLINECALLDICT
    }>
  }>
  $NoDependencies$_init_child PROCINLINE:<{
        B{b5ee9c720101030100750001a0ff00208e423001d072d721d200d200fa4021103450666f04f86102f862ed44d0d20030916d916de230019130e07021d74920c21f953101d31f309132e2c00001c121b0dcf2c082e1f4a413f4bcf2c80b010125a679207b513434800c245b645b78b6cf1b04a0020014f82ac87001ca006d30c9} B>boc PUSHREF
    NEWC
    FALSE
    SWAP
    1 STI
    PUSHNULL
    $NoDependencies$init$_store INLINECALLDICT
    ENDC
  }>
  $OneDependency$_init_child PROCINLINE:<{
    MYCODE
    NEWC
    FALSE
    SWAP
    1 STI
    ROT
    $OneDependency$init$_store INLINECALLDICT
    ENDC
  }>
  $OneDependency$_fun_getDep PROCREF:<{
    $NoDependencies$_init_child INLINECALLDICT
  }>
  $OneDependency$_fun_getState PROCREF:<{
    DUP
    $OneDependency$_init_child INLINECALLDICT
  }>
  %getDep PROC:<{
    $OneDependency$_contract_load INLINECALLDICT
    $OneDependency$_fun_getDep INLINECALLDICT
    1 2 BLKDROP2
    $StateInit$_to_external INLINECALLDICT
  }>
  %getState PROC:<{
    $OneDependency$_contract_load INLINECALLDICT
    $OneDependency$_fun_getState INLINECALLDICT
    1 2 BLKDROP2
    $StateInit$_to_external INLINECALLDICT
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    2 PUSHINT
    SDSKIPFIRST
    1 LDI
    1 LDI
    LDMSGADDR
    OVER
    s3 s4 XCHG
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $OneDependency$_contract_load INLINECALLDICT
    DROP
    SWAP
    IFJMP:<{
      DROP
    }>
    0 PUSHINT
    OVER
    SBITS
    DUP
    31 GTINT
    IF:<{
      NIP
      SWAP
      32 LDU
      DROP
    }>ELSE<{
      s2 POP
    }>
    0 EQINT
    SWAP
    33 LESSINT
    AND
    IFJMP:<{
    }>
    130 THROW
  }>
  __tact_selector_hack PROC:<{
    @atend @ 1 {
        execute current@ context@ current!
        {
            }END> b>
            
            <{
                SETCP0 DUP
                IFNOTJMP:<{
                    DROP over <s ref@ 0 swap @procdictkeylen idict@ { "internal shortcut error" abort } ifnot @addop
                }>
    swap <s ref@
                0 swap @procdictkeylen idict- drop
                -1 swap @procdictkeylen idict- drop
                65535 swap @procdictkeylen idict- drop
                @procdictkeylen DICTPUSHCONST DICTIGETJMPZ 11 THROWARG
            }> b>
        } : }END>c
        current@ context! current!
    } does @atend !
  }>
}END>c
