// automatically generated from `@stdlib/std/stdlib.fc` `@stdlib/std/stdlib_ex.fc` `/home/benji/proj/ton/tact/src/test/e2e-emulated/contracts/output/initof_Child.code.fc` 
PROGRAM{
  DECLPROC __tact_sha256
  DECLPROC __tact_context_get_sender
  DECLPROC $ChildAddress$_store
  DECLPROC $ChildAddress$_store_cell
  DECLPROC $Child$_load
  DECLPROC $Child$init$_load
  DECLPROC $Child$_contract_init
  DECLPROC $Child$_contract_load
  DECLPROC $MessageParameters$_constructor_to_value_mode_bounce_body
  DECLPROC $ChildAddress$_constructor_address
  DECLPROC recv_internal
  65535 DECLMETHOD __tact_selector_hack
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_child_contract_codes
  DECLGLOBVAR __tact_randomized
  __tact_sha256 PROC:<{
    ONE
    WHILE:<{
      OVER SREFS 0 NEQINT
    }>DO<{
      OVER LDREF s0 POP CTOS s0 s1 XCHG INC
    }>
    HASHEXT_SHA256
  }>
  __tact_context_get_sender PROCINLINE:<{
    __tact_context_sender GETGLOB
  }>
  $ChildAddress$_store PROCINLINE:<{
    1109380902 PUSHINT
    ROT
    32 STU
    SWAP
    STSLICER
  }>
  $ChildAddress$_store_cell PROCINLINE:<{
    NEWC
    SWAP
    $ChildAddress$_store INLINECALLDICT
    ENDC
  }>
  $Child$_load PROCINLINE:<{
    LDMSGADDR
    SWAP
  }>
  $Child$init$_load PROCINLINE:<{
    LDMSGADDR
    SWAP
  }>
  $Child$_contract_init PROCINLINE:<{
  }>
  $Child$_contract_load PROCINLINE:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
    IF:<{
      $Child$_load INLINECALLDICT
      NIP
    }>ELSE<{
      $Child$init$_load INLINECALLDICT
      SWAP
      ENDS
      $Child$_contract_init INLINECALLDICT
    }>
  }>
  $MessageParameters$_constructor_to_value_mode_bounce_body PROCINLINE:<{
    s4 s1 s3 XCHG3
    -ROT
  }>
  $ChildAddress$_constructor_address PROCINLINE:<{
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    2 PUSHINT
    SDSKIPFIRST
    1 LDI
    1 LDI
    LDMSGADDR
    OVER
    s3 s4 XCHG
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $Child$_contract_load INLINECALLDICT
    DROP
    SWAP
    IFJMP:<{
      DROP
    }>
    0 PUSHINT
    OVER
    SBITS
    DUP
    31 GTINT
    IF:<{
      NIP
      SWAP
      32 LDU
      DROP
    }>ELSE<{
      s2 POP
    }>
    0 EQINT
    SWAP
    33 LESSINT
    AND
    IFJMP:<{
      __tact_context_get_sender INLINECALLDICT
      0 PUSHINT
      66 PUSHINT
      FALSE
          MYADDR
      $ChildAddress$_constructor_address INLINECALLDICT
      $ChildAddress$_store_cell INLINECALLDICT
      $MessageParameters$_constructor_to_value_mode_bounce_body INLINECALLDICT
          NEWC
          b{01} STSLICECONST  // store tag = $0 and ihr_disabled = true
          1 STI               // store `bounce`
          b{000} STSLICECONST // store bounced = false and src = addr_none
          STSLICE             // store `to`
          SWAP
          STGRAMS             // store `value`
          106 PUSHINT         // 1 + 4 + 4 + 64 + 32 + 1
          STZEROES
          // â†’ Stack state
          // s0: Builder
          // s1: `data`
          // s2: `code`
          // s3: `body`
          // s4: `mode`
          STDICT
          ENDC
          SWAP
          SENDRAWMSG
    }>
    130 THROW
  }>
  __tact_selector_hack PROC:<{
    @atend @ 1 {
        execute current@ context@ current!
        {
            }END> b>
            
            <{
                SETCP0 DUP
                IFNOTJMP:<{
                    DROP over <s ref@ 0 swap @procdictkeylen idict@ { "internal shortcut error" abort } ifnot @addop
                }>
    swap <s ref@
                0 swap @procdictkeylen idict- drop
                -1 swap @procdictkeylen idict- drop
                65535 swap @procdictkeylen idict- drop
                @procdictkeylen DICTPUSHCONST DICTIGETJMPZ 11 THROWARG
            }> b>
        } : }END>c
        current@ context! current!
    } does @atend !
  }>
}END>c
