#pragma version =0.4.6;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

;; constants-for-wrappers_ConstantTester.headers.fc
;;
;; Header files for ConstantTester
;; NOTE: declarations are sorted for optimal order
;;

;; $SimpleStruct$_to_external
(int) $SimpleStruct$_to_external(((int)) v) inline;

;; $NestedStruct$_to_external
(int, (int)) $NestedStruct$_to_external(((int, (int))) v) inline;

;; $ConstantTester$_contract_init
tuple $ConstantTester$_contract_init() impure inline;

;; $ConstantTester$_contract_load
tuple $ConstantTester$_contract_load() impure inline;

;; $ConstantTester$_fun_globalInt
(tuple, int) $ConstantTester$_fun_globalInt(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_globalString
(tuple, slice) $ConstantTester$_fun_globalString(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_globalStringWithQuotes
(tuple, slice) $ConstantTester$_fun_globalStringWithQuotes(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_globalBool
(tuple, int) $ConstantTester$_fun_globalBool(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_globalAddress
(tuple, slice) $ConstantTester$_fun_globalAddress(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_globalCell
(tuple, cell) $ConstantTester$_fun_globalCell(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_globalSlice
(tuple, slice) $ConstantTester$_fun_globalSlice(tuple $self) impure inline_ref;

;; $SimpleStruct$_constructor_value
((int)) $SimpleStruct$_constructor_value(int $value) inline;

;; $ConstantTester$_fun_globalSimpleStruct
(tuple, (int)) $ConstantTester$_fun_globalSimpleStruct(tuple $self) impure inline_ref;

;; $NestedStruct$_constructor_value_other
((int, (int))) $NestedStruct$_constructor_value_other(int $value, (int) $other) inline;

;; $ConstantTester$_fun_globalNestedStruct
(tuple, (int, (int))) $ConstantTester$_fun_globalNestedStruct(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractInt
(tuple, int) $ConstantTester$_fun_contractInt(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractString
(tuple, slice) $ConstantTester$_fun_contractString(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractStringWithQuotes
(tuple, slice) $ConstantTester$_fun_contractStringWithQuotes(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractBool
(tuple, int) $ConstantTester$_fun_contractBool(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractAddress
(tuple, slice) $ConstantTester$_fun_contractAddress(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractCell
(tuple, cell) $ConstantTester$_fun_contractCell(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractSlice
(tuple, slice) $ConstantTester$_fun_contractSlice(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractSimpleStruct
(tuple, (int)) $ConstantTester$_fun_contractSimpleStruct(tuple $self) impure inline_ref;

;; $ConstantTester$_fun_contractNestedStruct
(tuple, (int, (int))) $ConstantTester$_fun_contractNestedStruct(tuple $self) impure inline_ref;


;; constants-for-wrappers_ConstantTester.stdlib.fc
global (int, slice, int, slice) __tact_context;
global slice __tact_context_sender;
global cell __tact_child_contract_codes;
global int __tact_randomized;

;; constants-for-wrappers_ConstantTester.constants.fc
;; String "hello world"
slice __gen_slice_string_e3f85eb426d40008090255016d73ef2f09a300fbb999ca2472fdf0f0c1ec6566() asm """
    B{b5ee9c7241010101000d00001668656c6c6f20776f726c647c7b1c8f} B>boc <s PUSHSLICE
""";

;; String "hello "world""
slice __gen_slice_string_98dbb13a3c838c83764e785e861fbfe8b579ce38d27fb4f8ab1a5b58733a8517() asm """
    B{b5ee9c7241010101000f00001a68656c6c6f2022776f726c6422bb6eddc1} B>boc <s PUSHSLICE
""";

;; EQCD39VS5jcptHL8vMjEXrzGaRcCVYto7HUn4bpAOg8xqB2N
slice __gen_slice_address_58e2d2fc9446d00e70b3ad3ea1eb88797c323bae517f2527f807f62d09a56fdc() asm """
    B{b5ee9c7241010101002400004380107bfaaa5cc6e5368e5f9799188bd798cd22e04ab16d1d8ea4fc37480741e6351064a3e1a6} B>boc <s PUSHSLICE
""";

;; Cell VBg02ygr163WRwSlfJf1vVZ4CTVhISM21n/drXCUos0=
cell __gen_cell_cell_541834db282bd7add64704a57c97f5bd5678093561212336d67fddad7094a2cd() asm """
    B{b5ee9c724101080100a4000114ff00f4a413f4bcf2c80b01020162020300a6d001d072d721d200d200fa4021103450666f04f86102f862ed44d0d2000194fa4001319330f828e202915be07021d74920c21f953101d31f309132e2c00001c121b09bc87f01ca0001cf16c9ed54e030f2c0820201480406012bb8bd4ed44d0d2000194fa4001319330f828e2db3c3180500027a012bb851ded44d0d2000194fa4001319330f828e2db3c3180700022037abbce9} B>boc PUSHREF
""";

;; Slice VBg02ygr163WRwSlfJf1vVZ4CTVhISM21n/drXCUos0=
slice __gen_slice_slice_541834db282bd7add64704a57c97f5bd5678093561212336d67fddad7094a2cd() asm """
    B{b5ee9c724101080100a4000114ff00f4a413f4bcf2c80b01020162020300a6d001d072d721d200d200fa4021103450666f04f86102f862ed44d0d2000194fa4001319330f828e202915be07021d74920c21f953101d31f309132e2c00001c121b09bc87f01ca0001cf16c9ed54e030f2c0820201480406012bb8bd4ed44d0d2000194fa4001319330f828e2db3c3180500027a012bb851ded44d0d2000194fa4001319330f828e2db3c3180700022037abbce9} B>boc <s PUSHSLICE
""";

;; constants-for-wrappers_ConstantTester.storage.fc
;;
;; Type: SimpleStruct
;; TLB: _ value:int257 = SimpleStruct
;;

(int) $SimpleStruct$_to_external(((int)) v) inline {
    var (v'value) = v; 
    return (v'value);
}

((int)) $SimpleStruct$_constructor_value(int $value) inline {
    return ($value);
}

;;
;; Type: NestedStruct
;; TLB: _ value:int257 other:SimpleStruct{value:int257} = NestedStruct
;;

(int, (int)) $NestedStruct$_to_external(((int, (int))) v) inline {
    var (v'value, v'other) = v; 
    return (v'value, v'other);
}

((int, (int))) $NestedStruct$_constructor_value_other(int $value, (int) $other) inline {
    return ($value, $other);
}

;;
;; Type: ConstantTester
;; TLB: _  = ConstantTester
;;

tuple $ConstantTester$_contract_load() impure inline {
    slice $sc = get_data().begin_parse();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return null();
    } else {
        return $ConstantTester$_contract_init();
    }
}

;;
;; Contract ConstantTester functions
;;

tuple $ConstantTester$_contract_init() impure inline {
    tuple $self = null();
    return $self;
}

(tuple, int) $ConstantTester$_fun_globalInt(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_188 = 10;
    return ($self, $fresh$ret_188);
}

(tuple, slice) $ConstantTester$_fun_globalString(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_189 = __gen_slice_string_e3f85eb426d40008090255016d73ef2f09a300fbb999ca2472fdf0f0c1ec6566();
    return ($self, $fresh$ret_189);
}

(tuple, slice) $ConstantTester$_fun_globalStringWithQuotes(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_190 = __gen_slice_string_98dbb13a3c838c83764e785e861fbfe8b579ce38d27fb4f8ab1a5b58733a8517();
    return ($self, $fresh$ret_190);
}

(tuple, int) $ConstantTester$_fun_globalBool(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_191 = true;
    return ($self, $fresh$ret_191);
}

(tuple, slice) $ConstantTester$_fun_globalAddress(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_192 = __gen_slice_address_58e2d2fc9446d00e70b3ad3ea1eb88797c323bae517f2527f807f62d09a56fdc();
    return ($self, $fresh$ret_192);
}

(tuple, cell) $ConstantTester$_fun_globalCell(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_193 = __gen_cell_cell_541834db282bd7add64704a57c97f5bd5678093561212336d67fddad7094a2cd();
    return ($self, $fresh$ret_193);
}

(tuple, slice) $ConstantTester$_fun_globalSlice(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_194 = __gen_slice_slice_541834db282bd7add64704a57c97f5bd5678093561212336d67fddad7094a2cd();
    return ($self, $fresh$ret_194);
}

(tuple, (int)) $ConstantTester$_fun_globalSimpleStruct(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_195 = $SimpleStruct$_constructor_value(10);
    return ($self, $fresh$ret_195);
}

(tuple, (int, (int))) $ConstantTester$_fun_globalNestedStruct(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_196 = $NestedStruct$_constructor_value_other(10, $SimpleStruct$_constructor_value(11));
    return ($self, $fresh$ret_196);
}

(tuple, int) $ConstantTester$_fun_contractInt(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_197 = 10;
    return ($self, $fresh$ret_197);
}

(tuple, slice) $ConstantTester$_fun_contractString(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_198 = __gen_slice_string_e3f85eb426d40008090255016d73ef2f09a300fbb999ca2472fdf0f0c1ec6566();
    return ($self, $fresh$ret_198);
}

(tuple, slice) $ConstantTester$_fun_contractStringWithQuotes(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_199 = __gen_slice_string_98dbb13a3c838c83764e785e861fbfe8b579ce38d27fb4f8ab1a5b58733a8517();
    return ($self, $fresh$ret_199);
}

(tuple, int) $ConstantTester$_fun_contractBool(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_200 = true;
    return ($self, $fresh$ret_200);
}

(tuple, slice) $ConstantTester$_fun_contractAddress(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_201 = __gen_slice_address_58e2d2fc9446d00e70b3ad3ea1eb88797c323bae517f2527f807f62d09a56fdc();
    return ($self, $fresh$ret_201);
}

(tuple, cell) $ConstantTester$_fun_contractCell(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_202 = __gen_cell_cell_541834db282bd7add64704a57c97f5bd5678093561212336d67fddad7094a2cd();
    return ($self, $fresh$ret_202);
}

(tuple, slice) $ConstantTester$_fun_contractSlice(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_203 = __gen_slice_slice_541834db282bd7add64704a57c97f5bd5678093561212336d67fddad7094a2cd();
    return ($self, $fresh$ret_203);
}

(tuple, (int)) $ConstantTester$_fun_contractSimpleStruct(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_204 = $SimpleStruct$_constructor_value(10);
    return ($self, $fresh$ret_204);
}

(tuple, (int, (int))) $ConstantTester$_fun_contractNestedStruct(tuple $self) impure inline_ref {
    var ($self) = $self;
    var $fresh$ret_205 = $NestedStruct$_constructor_value_other(10, $SimpleStruct$_constructor_value(11));
    return ($self, $fresh$ret_205);
}

;;
;; Get methods of a Contract ConstantTester
;;

_ %globalInt() method_id(67661) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalInt();
    return res;
}

_ %globalString() method_id(72260) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalString();
    return res;
}

_ %globalStringWithQuotes() method_id(107522) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalStringWithQuotes();
    return res;
}

_ %globalBool() method_id(104324) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalBool();
    return res;
}

_ %globalAddress() method_id(67506) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalAddress();
    return res;
}

_ %globalCell() method_id(95138) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalCell();
    return res;
}

_ %globalSlice() method_id(121876) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalSlice();
    return res;
}

_ %globalSimpleStruct() method_id(69742) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalSimpleStruct();
    return $SimpleStruct$_to_external(res);
}

_ %globalNestedStruct() method_id(69915) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_globalNestedStruct();
    return $NestedStruct$_to_external(res);
}

_ %contractInt() method_id(109434) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractInt();
    return res;
}

_ %contractString() method_id(90762) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractString();
    return res;
}

_ %contractStringWithQuotes() method_id(107220) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractStringWithQuotes();
    return res;
}

_ %contractBool() method_id(75021) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractBool();
    return res;
}

_ %contractAddress() method_id(79405) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractAddress();
    return res;
}

_ %contractCell() method_id(114987) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractCell();
    return res;
}

_ %contractSlice() method_id(119437) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractSlice();
    return res;
}

_ %contractSimpleStruct() method_id(107680) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractSimpleStruct();
    return $SimpleStruct$_to_external(res);
}

_ %contractNestedStruct() method_id(107989) {
    var self = $ConstantTester$_contract_load();
    var res = self~$ConstantTester$_fun_contractNestedStruct();
    return $NestedStruct$_to_external(res);
}

;; message opcode reader utility
;; Returns 32 bit message opcode, otherwise throws the "Invalid incoming message" exit code
(slice, int) ~load_opcode(slice s) asm( -> 1 0) "32 LDUQ 130 THROWIFNOT";
;;
;; Routing of a Contract ConstantTester
;;

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    cs~skip_bits(2);
    var msg_bounceable = cs~load_int(1);
    var msg_bounced = cs~load_int(1);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounceable, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var $self = $ConstantTester$_contract_load();
    
    ;; Handle bounced messages
    if (msg_bounced) { return (); }
    int op = 0;
    int in_msg_length = slice_bits(in_msg);
    if (in_msg_length >= 32) {
        op = in_msg~load_uint(32);
    }
    ;; Receive empty message
    if ((op == 0) & (in_msg_length <= 32)) {
        return ();
    }
    ;; Throw if not handled
    throw(130);
}

() __tact_selector_hack_asm() impure asm """
@atend @ 1 {
    execute current@ context@ current!
    {
        }END> b>
        
        <{
            SETCP0 DUP
            IFNOTJMP:<{
                DROP over <s ref@ 0 swap @procdictkeylen idict@ { "internal shortcut error" abort } ifnot @addop
            }>
swap <s ref@
            0 swap @procdictkeylen idict- drop
            -1 swap @procdictkeylen idict- drop
            65535 swap @procdictkeylen idict- drop

            @procdictkeylen DICTPUSHCONST DICTIGETJMPZ 11 THROWARG
        }> b>
    } : }END>c
    current@ context! current!
} does @atend !
""";
() __tact_selector_hack() method_id(65535) {
    return __tact_selector_hack_asm();
}