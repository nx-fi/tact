#pragma version =0.4.6;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

;; maps1_MapTestContract.headers.fc
;;
;; Header files for MapTestContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_dict_get_slice_slice
slice __tact_dict_get_slice_slice(cell d, int kl, slice k) inline;

;; __tact_dict_set_slice_slice
(cell, ()) __tact_dict_set_slice_slice(cell d, int kl, slice k, slice v) inline;

;; __tact_dict_replace_slice_slice
(cell, (int)) __tact_dict_replace_slice_slice(cell d, int kl, slice k, slice v) inline;

;; __tact_dict_replaceget_slice_slice
(cell, (slice)) __tact_dict_replaceget_slice_slice(cell d, int kl, slice k, slice v) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_replace_slice_int
(cell, (int)) __tact_dict_replace_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_replaceget_slice_int
(cell, (int)) __tact_dict_replaceget_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_cell
cell __tact_dict_get_slice_cell(cell d, int kl, slice k) inline;

;; __tact_dict_set_slice_cell
(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_replace_slice_cell
(cell, (int)) __tact_dict_replace_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_replaceget_slice_cell
(cell, (cell)) __tact_dict_replaceget_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_dict_get_slice_varint16
int __tact_dict_get_slice_varint16(cell d, int kl, slice k) inline;

;; __tact_dict_set_slice_varint16
(cell, ()) __tact_dict_set_slice_varint16(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replace_slice_varint16
(cell, (int)) __tact_dict_replace_slice_varint16(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replaceget_slice_varint16
(cell, (int)) __tact_dict_replaceget_slice_varint16(cell d, int kl, slice k, int v) inline;

;; __tact_dict_get_slice_varint32
int __tact_dict_get_slice_varint32(cell d, int kl, slice k) inline;

;; __tact_dict_set_slice_varint32
(cell, ()) __tact_dict_set_slice_varint32(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replace_slice_varint32
(cell, (int)) __tact_dict_replace_slice_varint32(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replaceget_slice_varint32
(cell, (int)) __tact_dict_replaceget_slice_varint32(cell d, int kl, slice k, int v) inline;

;; __tact_dict_get_slice_varuint16
int __tact_dict_get_slice_varuint16(cell d, int kl, slice k) inline;

;; __tact_dict_set_slice_varuint16
(cell, ()) __tact_dict_set_slice_varuint16(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replace_slice_varuint16
(cell, (int)) __tact_dict_replace_slice_varuint16(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replaceget_slice_varuint16
(cell, (int)) __tact_dict_replaceget_slice_varuint16(cell d, int kl, slice k, int v) inline;

;; __tact_dict_get_slice_varuint32
int __tact_dict_get_slice_varuint32(cell d, int kl, slice k) inline;

;; __tact_dict_set_slice_varuint32
(cell, ()) __tact_dict_set_slice_varuint32(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replace_slice_varuint32
(cell, (int)) __tact_dict_replace_slice_varuint32(cell d, int kl, slice k, int v) inline;

;; __tact_dict_replaceget_slice_varuint32
(cell, (int)) __tact_dict_replaceget_slice_varuint32(cell d, int kl, slice k, int v) inline;

;; __tact_dict_get_uint_slice
slice __tact_dict_get_uint_slice(cell d, int kl, int k) inline;

;; __tact_dict_set_uint_slice
(cell, ()) __tact_dict_set_uint_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_replace_uint_slice
(cell, (int)) __tact_dict_replace_uint_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_replaceget_uint_slice
(cell, (slice)) __tact_dict_replaceget_uint_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_get_uint_int
int __tact_dict_get_uint_int(cell d, int kl, int k, int vl) inline;

;; __tact_dict_set_uint_int
(cell, ()) __tact_dict_set_uint_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_replace_uint_int
(cell, (int)) __tact_dict_replace_uint_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_replaceget_uint_int
(cell, (int)) __tact_dict_replaceget_uint_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_uint_cell
cell __tact_dict_get_uint_cell(cell d, int kl, int k) inline;

;; __tact_dict_set_uint_cell
(cell, ()) __tact_dict_set_uint_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_replace_uint_cell
(cell, (int)) __tact_dict_replace_uint_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_replaceget_uint_cell
(cell, (cell)) __tact_dict_replaceget_uint_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_uint_varint16
int __tact_dict_get_uint_varint16(cell d, int kl, int k) inline;

;; __tact_dict_set_uint_varint16
(cell, ()) __tact_dict_set_uint_varint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_uint_varint16
(cell, (int)) __tact_dict_replace_uint_varint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_uint_varint16
(cell, (int)) __tact_dict_replaceget_uint_varint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_get_uint_varint32
int __tact_dict_get_uint_varint32(cell d, int kl, int k) inline;

;; __tact_dict_set_uint_varint32
(cell, ()) __tact_dict_set_uint_varint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_uint_varint32
(cell, (int)) __tact_dict_replace_uint_varint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_uint_varint32
(cell, (int)) __tact_dict_replaceget_uint_varint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_get_uint_varuint16
int __tact_dict_get_uint_varuint16(cell d, int kl, int k) inline;

;; __tact_dict_set_uint_varuint16
(cell, ()) __tact_dict_set_uint_varuint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_uint_varuint16
(cell, (int)) __tact_dict_replace_uint_varuint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_uint_varuint16
(cell, (int)) __tact_dict_replaceget_uint_varuint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_get_uint_varuint32
int __tact_dict_get_uint_varuint32(cell d, int kl, int k) inline;

;; __tact_dict_set_uint_varuint32
(cell, ()) __tact_dict_set_uint_varuint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_uint_varuint32
(cell, (int)) __tact_dict_replace_uint_varuint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_uint_varuint32
(cell, (int)) __tact_dict_replaceget_uint_varuint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_get_int_slice
slice __tact_dict_get_int_slice(cell d, int kl, int k) inline;

;; __tact_dict_set_int_slice
(cell, ()) __tact_dict_set_int_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_replace_int_slice
(cell, (int)) __tact_dict_replace_int_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_replaceget_int_slice
(cell, (slice)) __tact_dict_replaceget_int_slice(cell d, int kl, int k, slice v) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_replace_int_int
(cell, (int)) __tact_dict_replace_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_replaceget_int_int
(cell, (int)) __tact_dict_replaceget_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_replace_int_cell
(cell, (int)) __tact_dict_replace_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_replaceget_int_cell
(cell, (cell)) __tact_dict_replaceget_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_varint16
int __tact_dict_get_int_varint16(cell d, int kl, int k) inline;

;; __tact_dict_set_int_varint16
(cell, ()) __tact_dict_set_int_varint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_int_varint16
(cell, (int)) __tact_dict_replace_int_varint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_int_varint16
(cell, (int)) __tact_dict_replaceget_int_varint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_get_int_varint32
int __tact_dict_get_int_varint32(cell d, int kl, int k) inline;

;; __tact_dict_set_int_varint32
(cell, ()) __tact_dict_set_int_varint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_int_varint32
(cell, (int)) __tact_dict_replace_int_varint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_int_varint32
(cell, (int)) __tact_dict_replaceget_int_varint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_get_int_varuint16
int __tact_dict_get_int_varuint16(cell d, int kl, int k) inline;

;; __tact_dict_set_int_varuint16
(cell, ()) __tact_dict_set_int_varuint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_int_varuint16
(cell, (int)) __tact_dict_replace_int_varuint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_int_varuint16
(cell, (int)) __tact_dict_replaceget_int_varuint16(cell d, int kl, int k, int v) inline;

;; __tact_dict_get_int_varuint32
int __tact_dict_get_int_varuint32(cell d, int kl, int k) inline;

;; __tact_dict_set_int_varuint32
(cell, ()) __tact_dict_set_int_varuint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replace_int_varuint32
(cell, (int)) __tact_dict_replace_int_varuint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_replaceget_int_varuint32
(cell, (int)) __tact_dict_replaceget_int_varuint32(cell d, int kl, int k, int v) inline;

;; __tact_dict_exists_slice
int __tact_dict_exists_slice(cell d, int kl, slice k) inline;

;; __tact_dict_exists_uint
int __tact_dict_exists_uint(cell d, int kl, int k) inline;

;; __tact_dict_exists_int
int __tact_dict_exists_int(cell d, int kl, int k) inline;

;; $SomeStruct$_store
builder $SomeStruct$_store(builder build_0, (int, int, slice, int, int) v) inline;

;; $SomeStruct$_store_cell
cell $SomeStruct$_store_cell((int, int, slice, int, int) v) inline;

;; $SomeStruct$_not_null
((int, int, slice, int, int)) $SomeStruct$_not_null(tuple v) inline;

;; $SomeStruct$_store_opt
cell $SomeStruct$_store_opt(tuple v) inline;

;; $SomeStruct$_load
(slice, ((int, int, slice, int, int))) $SomeStruct$_load(slice sc_0) inline;

;; $SomeStruct$_as_optional
tuple $SomeStruct$_as_optional((int, int, slice, int, int) v) inline;

;; $SomeStruct$_load_opt
tuple $SomeStruct$_load_opt(cell cl) inline;

;; $SetAllMaps$_load_without_opcode
(slice, ((int, int, int, int, int, int, int, slice, int, int, int, int, int, cell, slice, tuple))) $SetAllMaps$_load_without_opcode(slice sc_0) inline_ref;

;; $DelAllMaps$_load_without_opcode
(slice, ((int, int, int, int, int, int, int, slice))) $DelAllMaps$_load_without_opcode(slice sc_0) inline;

;; $ReplaceAllMaps$_load_without_opcode
(slice, ((int, int, int, int, int, int, int, slice, int, int, int, int, int, cell, slice, tuple))) $ReplaceAllMaps$_load_without_opcode(slice sc_0) inline_ref;

;; $ReplaceGetAllMaps$_load_without_opcode
(slice, ((int, int, int, int, int, int, int, slice, int, int, int, int, int, cell, slice, tuple))) $ReplaceGetAllMaps$_load_without_opcode(slice sc_0) inline_ref;

;; $CheckNullReference$_load_without_opcode
(slice, (tuple)) $CheckNullReference$_load_without_opcode(slice sc_0) inline;

;; $MapTestContract$_store
builder $MapTestContract$_store(builder build_0, (cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) v) inline;

;; $MapTestContract$_load
(slice, ((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell))) $MapTestContract$_load(slice sc_0) inline;

;; $SomeStruct$_from_tuple
(int, int, slice, int, int) $SomeStruct$_from_tuple(tuple v) inline;

;; $GetAllMapsResult$_to_external
(int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple) $GetAllMapsResult$_to_external(((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) v) inline;

;; $ReplaceAllMapsResult$_to_external
(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) $ReplaceAllMapsResult$_to_external(((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) v) inline;

;; $ReplaceGetAllMapsResult$_to_external
(int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple) $ReplaceGetAllMapsResult$_to_external(((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) v) inline;

;; $ExistsAllMapsResult$_to_external
(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) $ExistsAllMapsResult$_to_external(((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) v) inline;

;; $IsEmptyAllMapsResult$_to_external
(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) $IsEmptyAllMapsResult$_to_external(((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) v) inline;

;; $AsCellAllMapsResult$_to_external
(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $AsCellAllMapsResult$_to_external(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) v) inline;

;; $MapTestContract$_to_external
(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $MapTestContract$_to_external(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) v) inline;

;; $MapTestContract$_contract_init
(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $MapTestContract$_contract_init() impure inline;

;; $MapTestContract$_contract_load
(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $MapTestContract$_contract_load() impure inline_ref;

;; $MapTestContract$_contract_store
() $MapTestContract$_contract_store((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) v) impure inline;

;; $MapTestContract$_fun_allMaps
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) $MapTestContract$_fun_allMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref;

;; $GetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct
((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $GetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, cell $int_cell, slice $int_address, tuple $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, cell $int8_cell, slice $int8_address, tuple $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, cell $int42_cell, slice $int42_address, tuple $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, cell $int256_cell, slice $int256_address, tuple $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, cell $uint8_cell, slice $uint8_address, tuple $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, cell $uint42_cell, slice $uint42_address, tuple $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, cell $uint256_cell, slice $uint256_address, tuple $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, cell $address_cell, slice $address_address, tuple $address_struct) inline;

;; $MapTestContract$_fun_getAllMaps
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $MapTestContract$_fun_getAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress) impure inline_ref;

;; $ReplaceAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct
((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $ReplaceAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, int $int_cell, int $int_address, int $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, int $int8_cell, int $int8_address, int $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, int $int42_cell, int $int42_address, int $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, int $int256_cell, int $int256_address, int $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, int $uint8_cell, int $uint8_address, int $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, int $uint42_cell, int $uint42_address, int $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, int $uint256_cell, int $uint256_address, int $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, int $address_cell, int $address_address, int $address_struct) inline;

;; $MapTestContract$_fun_replaceAllMaps
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $MapTestContract$_fun_replaceAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress, int $valueVarint16, int $valueVarint32, int $valueVaruint16, int $valueVaruint32, int $valueBool, cell $valueCell, slice $valueAddress, (int, int, slice, int, int) $valueStruct) impure inline_ref;

;; $ReplaceGetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct
((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $ReplaceGetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, cell $int_cell, slice $int_address, tuple $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, cell $int8_cell, slice $int8_address, tuple $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, cell $int42_cell, slice $int42_address, tuple $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, cell $int256_cell, slice $int256_address, tuple $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, cell $uint8_cell, slice $uint8_address, tuple $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, cell $uint42_cell, slice $uint42_address, tuple $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, cell $uint256_cell, slice $uint256_address, tuple $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, cell $address_cell, slice $address_address, tuple $address_struct) inline;

;; $MapTestContract$_fun_replaceGetAllMaps
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $MapTestContract$_fun_replaceGetAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress, int $valueVarint16, int $valueVarint32, int $valueVaruint16, int $valueVaruint32, int $valueBool, cell $valueCell, slice $valueAddress, (int, int, slice, int, int) $valueStruct) impure inline_ref;

;; $ExistsAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct
((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $ExistsAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, int $int_cell, int $int_address, int $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, int $int8_cell, int $int8_address, int $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, int $int42_cell, int $int42_address, int $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, int $int256_cell, int $int256_address, int $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, int $uint8_cell, int $uint8_address, int $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, int $uint42_cell, int $uint42_address, int $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, int $uint256_cell, int $uint256_address, int $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, int $address_cell, int $address_address, int $address_struct) inline;

;; $MapTestContract$_fun_existsAllMaps
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $MapTestContract$_fun_existsAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress) impure inline_ref;

;; $IsEmptyAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct
((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $IsEmptyAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, int $int_cell, int $int_address, int $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, int $int8_cell, int $int8_address, int $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, int $int42_cell, int $int42_address, int $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, int $int256_cell, int $int256_address, int $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, int $uint8_cell, int $uint8_address, int $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, int $uint42_cell, int $uint42_address, int $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, int $uint256_cell, int $uint256_address, int $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, int $address_cell, int $address_address, int $address_struct) inline;

;; $MapTestContract$_fun_isEmptyAllMaps
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $MapTestContract$_fun_isEmptyAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref;

;; $AsCellAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) $AsCellAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(cell $int_varint16, cell $int_varint32, cell $int_varuint16, cell $int_varuint32, cell $int_bool, cell $int_cell, cell $int_address, cell $int_struct, cell $int8_varint16, cell $int8_varint32, cell $int8_varuint16, cell $int8_varuint32, cell $int8_bool, cell $int8_cell, cell $int8_address, cell $int8_struct, cell $int42_varint16, cell $int42_varint32, cell $int42_varuint16, cell $int42_varuint32, cell $int42_bool, cell $int42_cell, cell $int42_address, cell $int42_struct, cell $int256_varint16, cell $int256_varint32, cell $int256_varuint16, cell $int256_varuint32, cell $int256_bool, cell $int256_cell, cell $int256_address, cell $int256_struct, cell $uint8_varint16, cell $uint8_varint32, cell $uint8_varuint16, cell $uint8_varuint32, cell $uint8_bool, cell $uint8_cell, cell $uint8_address, cell $uint8_struct, cell $uint42_varint16, cell $uint42_varint32, cell $uint42_varuint16, cell $uint42_varuint32, cell $uint42_bool, cell $uint42_cell, cell $uint42_address, cell $uint42_struct, cell $uint256_varint16, cell $uint256_varint32, cell $uint256_varuint16, cell $uint256_varuint32, cell $uint256_bool, cell $uint256_cell, cell $uint256_address, cell $uint256_struct, cell $address_varint16, cell $address_varint32, cell $address_varuint16, cell $address_varuint32, cell $address_bool, cell $address_cell, cell $address_address, cell $address_struct) inline;

;; $MapTestContract$_fun_asCellAllMaps
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) $MapTestContract$_fun_asCellAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref;

;; $MapTestContract$_fun_checkNullReference
((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), int) $MapTestContract$_fun_checkNullReference((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref;


;; maps1_MapTestContract.stdlib.fc
global (int, slice, int, slice) __tact_context;
global slice __tact_context_sender;
global cell __tact_child_contract_codes;
global int __tact_randomized;

(slice, slice) __tact_load_address_opt(slice cs) inline {
    if (cs.preload_uint(2) != 0) {
        slice raw = cs~load_msg_addr();
        return (cs, raw);
    } else {
        cs~skip_bits(2);
        return (cs, null());
    }
}

forall X -> X __tact_not_null(X x) impure inline {
    throw_if(128, null?(x)); return x;
}

(cell, int) __tact_dict_delete(cell dict, int key_len, slice index) asm(index dict key_len) """
    DICTDEL
""";

(cell, int) __tact_dict_delete_int(cell dict, int key_len, int index) asm(index dict key_len) """
    DICTIDEL
""";

(cell, int) __tact_dict_delete_uint(cell dict, int key_len, int index) asm(index dict key_len) """
    DICTUDEL
""";

((cell), ()) __tact_dict_set_ref(cell dict, int key_len, slice index, cell value) asm(value index dict key_len) """
    DICTSETREF
""";

((cell), (int)) __tact_dict_replace_ref(cell dict, int key_len, slice index, cell value) asm(value index dict key_len) """
    DICTREPLACEREF
""";

((cell), (cell, int)) __tact_dict_replaceget_ref(cell dict, int key_len, slice index, cell value) asm(value index dict key_len) """
    DICTREPLACEGETREF NULLSWAPIFNOT
""";

(slice, int) __tact_dict_get(cell dict, int key_len, slice index) asm(index dict key_len) """
    DICTGET NULLSWAPIFNOT
""";

(cell, (slice, int)) __tact_dict_delete_get(cell dict, int key_len, slice index) asm(index dict key_len) """
    DICTDELGET NULLSWAPIFNOT
""";

(cell, (cell, int)) __tact_dict_delete_get_ref(cell dict, int key_len, slice index) asm(index dict key_len) """
    DICTDELGETREF NULLSWAPIFNOT
""";

(cell, int) __tact_dict_get_ref(cell dict, int key_len, slice index) asm(index dict key_len) """
    DICTGETREF NULLSWAPIFNOT
""";

forall X0, X1, X2, X3, X4 -> tuple __tact_tuple_create_5((X0, X1, X2, X3, X4) v) asm """
    5 TUPLE
""";

forall X0, X1, X2, X3, X4 -> (X0, X1, X2, X3, X4) __tact_tuple_destroy_5(tuple v) asm """
    5 UNTUPLE
""";

slice __tact_dict_get_slice_slice(cell d, int kl, slice k) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    if (ok) {
        return r;
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_slice_slice(cell d, int kl, slice k, slice v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return (dict_set_builder(d, kl, k, begin_cell().store_slice(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_slice_slice(cell d, int kl, slice k, slice v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, (ok));
    } else {
        return dict_replace_builder?(d, kl, k, begin_cell().store_slice(v));
    }
}

(cell, (slice)) __tact_dict_replaceget_slice_slice(cell d, int kl, slice k, slice v) inline {
    var (old, ok) = null?(v) ? d~__tact_dict_delete_get(kl, k) : d~dict_replaceget?(kl, k, begin_cell().store_slice(v).end_cell().begin_parse());
    if (ok) {
        return (d, old);
    } else {
        return (d, null());
    }
}

int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    if (ok) {
        return r~load_int(vl);
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return (dict_set_builder(d, kl, k, begin_cell().store_int(v, vl)), ());
    }
}

(cell, (int)) __tact_dict_replace_slice_int(cell d, int kl, slice k, int v, int vl) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, (ok));
    } else {
        return dict_replace_builder?(d, kl, k, begin_cell().store_int(v, vl));
    }
}

(cell, (int)) __tact_dict_replaceget_slice_int(cell d, int kl, slice k, int v, int vl) inline {
    var (old, ok) = null?(v) ? d~__tact_dict_delete_get(kl, k) : d~dict_replaceget?(kl, k, begin_cell().store_int(v, vl).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_int(vl));
    } else {
        return (d, null());
    }
}

cell __tact_dict_get_slice_cell(cell d, int kl, slice k) inline {
    var (r, ok) = __tact_dict_get_ref(d, kl, k);
    if (ok) {
        return r;
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return __tact_dict_set_ref(d, kl, k, v);
    }
}

(cell, (int)) __tact_dict_replace_slice_cell(cell d, int kl, slice k, cell v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, (ok));
    } else {
        return __tact_dict_replace_ref(d, kl, k, v);
    }
}

(cell, (cell)) __tact_dict_replaceget_slice_cell(cell d, int kl, slice k, cell v) inline {
    var (old, ok) = null?(v) ? d~__tact_dict_delete_get_ref(kl, k) : d~__tact_dict_replaceget_ref(kl, k, v);
    if (ok) {
        return (d, old);
    } else {
        return (d, null());
    }
}

int __tact_dict_get_slice_varint16(cell d, int kl, slice k) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    if (ok) {
        return r~load_varint16();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_slice_varint16(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return (dict_set_builder(d, kl, k, begin_cell().store_varint16(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_slice_varint16(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, (ok));
    } else {
        return dict_replace_builder?(d, kl, k, begin_cell().store_varint16(v));
    }
}

(cell, (int)) __tact_dict_replaceget_slice_varint16(cell d, int kl, slice k, int v) inline {
    var (old, ok) = null?(v) ? d~__tact_dict_delete_get(kl, k) : d~dict_replaceget?(kl, k, begin_cell().store_varint16(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varint16());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_slice_varint32(cell d, int kl, slice k) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    if (ok) {
        return r~load_varint32();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_slice_varint32(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return (dict_set_builder(d, kl, k, begin_cell().store_varint32(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_slice_varint32(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, (ok));
    } else {
        return dict_replace_builder?(d, kl, k, begin_cell().store_varint32(v));
    }
}

(cell, (int)) __tact_dict_replaceget_slice_varint32(cell d, int kl, slice k, int v) inline {
    var (old, ok) = null?(v) ? d~__tact_dict_delete_get(kl, k) : d~dict_replaceget?(kl, k, begin_cell().store_varint32(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varint32());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_slice_varuint16(cell d, int kl, slice k) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    if (ok) {
        return r~load_varuint16();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_slice_varuint16(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return (dict_set_builder(d, kl, k, begin_cell().store_varuint16(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_slice_varuint16(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, (ok));
    } else {
        return dict_replace_builder?(d, kl, k, begin_cell().store_varuint16(v));
    }
}

(cell, (int)) __tact_dict_replaceget_slice_varuint16(cell d, int kl, slice k, int v) inline {
    var (old, ok) = null?(v) ? d~__tact_dict_delete_get(kl, k) : d~dict_replaceget?(kl, k, begin_cell().store_varuint16(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varuint16());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_slice_varuint32(cell d, int kl, slice k) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    if (ok) {
        return r~load_varuint32();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_slice_varuint32(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, ());
    } else {
        return (dict_set_builder(d, kl, k, begin_cell().store_varuint32(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_slice_varuint32(cell d, int kl, slice k, int v) inline {
    if (null?(v)) {
        var (r, ok) = __tact_dict_delete(d, kl, k);
        return (r, (ok));
    } else {
        return dict_replace_builder?(d, kl, k, begin_cell().store_varuint32(v));
    }
}

(cell, (int)) __tact_dict_replaceget_slice_varuint32(cell d, int kl, slice k, int v) inline {
    var (old, ok) = null?(v) ? d~__tact_dict_delete_get(kl, k) : d~dict_replaceget?(kl, k, begin_cell().store_varuint32(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varuint32());
    } else {
        return (d, null());
    }
}

slice __tact_dict_get_uint_slice(cell d, int kl, int k) inline {
    var (r, ok) = udict_get?(d, kl, k);
    if (ok) {
        return r;
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_uint_slice(cell d, int kl, int k, slice v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (udict_set(d, kl, k, v), ());
    }
}

(cell, (int)) __tact_dict_replace_uint_slice(cell d, int kl, int k, slice v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return udict_replace?(d, kl, k, v);
    }
}

(cell, (slice)) __tact_dict_replaceget_uint_slice(cell d, int kl, int k, slice v) inline {
    var (old, ok) = null?(v) ? d~udict_delete_get?(kl, k) : d~udict_replaceget?(kl, k, v);
    if (ok) {
        return (d, old);
    } else {
        return (d, null());
    }
}

int __tact_dict_get_uint_int(cell d, int kl, int k, int vl) inline {
    var (r, ok) = udict_get?(d, kl, k);
    if (ok) {
        return r~load_int(vl);
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_uint_int(cell d, int kl, int k, int v, int vl) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (udict_set_builder(d, kl, k, begin_cell().store_int(v, vl)), ());
    }
}

(cell, (int)) __tact_dict_replace_uint_int(cell d, int kl, int k, int v, int vl) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return udict_replace_builder?(d, kl, k, begin_cell().store_int(v, vl));
    }
}

(cell, (int)) __tact_dict_replaceget_uint_int(cell d, int kl, int k, int v, int vl) inline {
    var (old, ok) = null?(v) ? d~udict_delete_get?(kl, k) : d~udict_replaceget?(kl, k, begin_cell().store_int(v, vl).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_int(vl));
    } else {
        return (d, null());
    }
}

cell __tact_dict_get_uint_cell(cell d, int kl, int k) inline {
    var (r, ok) = udict_get_ref?(d, kl, k);
    if (ok) {
        return r;
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_uint_cell(cell d, int kl, int k, cell v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (udict_set_ref(d, kl, k, v), ());
    }
}

(cell, (int)) __tact_dict_replace_uint_cell(cell d, int kl, int k, cell v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return udict_replace_ref?(d, kl, k, v);
    }
}

(cell, (cell)) __tact_dict_replaceget_uint_cell(cell d, int kl, int k, cell v) inline {
    var (old, ok) = null?(v) ? d~udict_delete_get_ref?(kl, k) : d~udict_replaceget_ref?(kl, k, v);
    if (ok) {
        return (d, old);
    } else {
        return (d, null());
    }
}

int __tact_dict_get_uint_varint16(cell d, int kl, int k) inline {
    var (r, ok) = udict_get?(d, kl, k);
    if (ok) {
        return r~load_varint16();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_uint_varint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (udict_set_builder(d, kl, k, begin_cell().store_varint16(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_uint_varint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return udict_replace_builder?(d, kl, k, begin_cell().store_varint16(v));
    }
}

(cell, (int)) __tact_dict_replaceget_uint_varint16(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~udict_delete_get?(kl, k) : d~udict_replaceget?(kl, k, begin_cell().store_varint16(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varint16());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_uint_varint32(cell d, int kl, int k) inline {
    var (r, ok) = udict_get?(d, kl, k);
    if (ok) {
        return r~load_varint32();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_uint_varint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (udict_set_builder(d, kl, k, begin_cell().store_varint32(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_uint_varint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return udict_replace_builder?(d, kl, k, begin_cell().store_varint32(v));
    }
}

(cell, (int)) __tact_dict_replaceget_uint_varint32(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~udict_delete_get?(kl, k) : d~udict_replaceget?(kl, k, begin_cell().store_varint32(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varint32());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_uint_varuint16(cell d, int kl, int k) inline {
    var (r, ok) = udict_get?(d, kl, k);
    if (ok) {
        return r~load_varuint16();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_uint_varuint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (udict_set_builder(d, kl, k, begin_cell().store_varuint16(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_uint_varuint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return udict_replace_builder?(d, kl, k, begin_cell().store_varuint16(v));
    }
}

(cell, (int)) __tact_dict_replaceget_uint_varuint16(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~udict_delete_get?(kl, k) : d~udict_replaceget?(kl, k, begin_cell().store_varuint16(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varuint16());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_uint_varuint32(cell d, int kl, int k) inline {
    var (r, ok) = udict_get?(d, kl, k);
    if (ok) {
        return r~load_varuint32();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_uint_varuint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (udict_set_builder(d, kl, k, begin_cell().store_varuint32(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_uint_varuint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = udict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return udict_replace_builder?(d, kl, k, begin_cell().store_varuint32(v));
    }
}

(cell, (int)) __tact_dict_replaceget_uint_varuint32(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~udict_delete_get?(kl, k) : d~udict_replaceget?(kl, k, begin_cell().store_varuint32(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varuint32());
    } else {
        return (d, null());
    }
}

slice __tact_dict_get_int_slice(cell d, int kl, int k) inline {
    var (r, ok) = idict_get?(d, kl, k);
    if (ok) {
        return r;
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_int_slice(cell d, int kl, int k, slice v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set(d, kl, k, v), ());
    }
}

(cell, (int)) __tact_dict_replace_int_slice(cell d, int kl, int k, slice v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return idict_replace?(d, kl, k, v);
    }
}

(cell, (slice)) __tact_dict_replaceget_int_slice(cell d, int kl, int k, slice v) inline {
    var (old, ok) = null?(v) ? d~idict_delete_get?(kl, k) : d~idict_replaceget?(kl, k, v);
    if (ok) {
        return (d, old);
    } else {
        return (d, null());
    }
}

int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline {
    var (r, ok) = idict_get?(d, kl, k);
    if (ok) {
        return r~load_int(vl);
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_builder(d, kl, k, begin_cell().store_int(v, vl)), ());
    }
}

(cell, (int)) __tact_dict_replace_int_int(cell d, int kl, int k, int v, int vl) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return idict_replace_builder?(d, kl, k, begin_cell().store_int(v, vl));
    }
}

(cell, (int)) __tact_dict_replaceget_int_int(cell d, int kl, int k, int v, int vl) inline {
    var (old, ok) = null?(v) ? d~idict_delete_get?(kl, k) : d~idict_replaceget?(kl, k, begin_cell().store_int(v, vl).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_int(vl));
    } else {
        return (d, null());
    }
}

cell __tact_dict_get_int_cell(cell d, int kl, int k) inline {
    var (r, ok) = idict_get_ref?(d, kl, k);
    if (ok) {
        return r;
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_ref(d, kl, k, v), ());
    }
}

(cell, (int)) __tact_dict_replace_int_cell(cell d, int kl, int k, cell v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return idict_replace_ref?(d, kl, k, v);
    }
}

(cell, (cell)) __tact_dict_replaceget_int_cell(cell d, int kl, int k, cell v) inline {
    var (old, ok) = null?(v) ? d~idict_delete_get_ref?(kl, k) : d~idict_replaceget_ref?(kl, k, v);
    if (ok) {
        return (d, old);
    } else {
        return (d, null());
    }
}

int __tact_dict_get_int_varint16(cell d, int kl, int k) inline {
    var (r, ok) = idict_get?(d, kl, k);
    if (ok) {
        return r~load_varint16();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_int_varint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_builder(d, kl, k, begin_cell().store_varint16(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_int_varint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return idict_replace_builder?(d, kl, k, begin_cell().store_varint16(v));
    }
}

(cell, (int)) __tact_dict_replaceget_int_varint16(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~idict_delete_get?(kl, k) : d~idict_replaceget?(kl, k, begin_cell().store_varint16(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varint16());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_int_varint32(cell d, int kl, int k) inline {
    var (r, ok) = idict_get?(d, kl, k);
    if (ok) {
        return r~load_varint32();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_int_varint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_builder(d, kl, k, begin_cell().store_varint32(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_int_varint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return idict_replace_builder?(d, kl, k, begin_cell().store_varint32(v));
    }
}

(cell, (int)) __tact_dict_replaceget_int_varint32(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~idict_delete_get?(kl, k) : d~idict_replaceget?(kl, k, begin_cell().store_varint32(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varint32());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_int_varuint16(cell d, int kl, int k) inline {
    var (r, ok) = idict_get?(d, kl, k);
    if (ok) {
        return r~load_varuint16();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_int_varuint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_builder(d, kl, k, begin_cell().store_varuint16(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_int_varuint16(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return idict_replace_builder?(d, kl, k, begin_cell().store_varuint16(v));
    }
}

(cell, (int)) __tact_dict_replaceget_int_varuint16(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~idict_delete_get?(kl, k) : d~idict_replaceget?(kl, k, begin_cell().store_varuint16(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varuint16());
    } else {
        return (d, null());
    }
}

int __tact_dict_get_int_varuint32(cell d, int kl, int k) inline {
    var (r, ok) = idict_get?(d, kl, k);
    if (ok) {
        return r~load_varuint32();
    } else {
        return null();
    }
}

(cell, ()) __tact_dict_set_int_varuint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, ());
    } else {
        return (idict_set_builder(d, kl, k, begin_cell().store_varuint32(v)), ());
    }
}

(cell, (int)) __tact_dict_replace_int_varuint32(cell d, int kl, int k, int v) inline {
    if (null?(v)) {
        var (r, ok) = idict_delete?(d, kl, k);
        return (r, (ok));
    } else {
        return idict_replace_builder?(d, kl, k, begin_cell().store_varuint32(v));
    }
}

(cell, (int)) __tact_dict_replaceget_int_varuint32(cell d, int kl, int k, int v) inline {
    var (old, ok) = null?(v) ? d~idict_delete_get?(kl, k) : d~idict_replaceget?(kl, k, begin_cell().store_varuint32(v).end_cell().begin_parse());
    if (ok) {
        return (d, old~load_varuint32());
    } else {
        return (d, null());
    }
}

int __tact_dict_exists_slice(cell d, int kl, slice k) inline {
    var (r, ok) = __tact_dict_get(d, kl, k);
    return ok;
}

int __tact_dict_exists_uint(cell d, int kl, int k) inline {
    var (r, ok) = udict_get?(d, kl, k);
    return ok;
}

int __tact_dict_exists_int(cell d, int kl, int k) inline {
    var (r, ok) = idict_get?(d, kl, k);
    return ok;
}

;; maps1_MapTestContract.storage.fc
;;
;; Type: SomeStruct
;; TLB: _ int:int257 bool:bool address:address a:int257 b:int257 = SomeStruct
;;

builder $SomeStruct$_store(builder build_0, (int, int, slice, int, int) v) inline {
    var (v'int, v'bool, v'address, v'a, v'b) = v;
    build_0 = build_0.store_int(v'int, 257);
    build_0 = build_0.store_int(v'bool, 1);
    build_0 = build_0.store_slice(v'address);
    build_0 = build_0.store_int(v'a, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'b, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $SomeStruct$_store_cell((int, int, slice, int, int) v) inline {
    return $SomeStruct$_store(begin_cell(), v).end_cell();
}

((int, int, slice, int, int)) $SomeStruct$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'int, int vvv'bool, slice vvv'address, int vvv'a, int vvv'b) = __tact_tuple_destroy_5(v);
    return (vvv'int, vvv'bool, vvv'address, vvv'a, vvv'b);
}

cell $SomeStruct$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $SomeStruct$_store_cell($SomeStruct$_not_null(v));
}

(slice, ((int, int, slice, int, int))) $SomeStruct$_load(slice sc_0) inline {
    var v'int = sc_0~load_int(257);
    var v'bool = sc_0~load_int(1);
    var v'address = sc_0~load_msg_addr();
    var v'a = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'b = sc_1~load_int(257);
    return (sc_0, (v'int, v'bool, v'address, v'a, v'b));
}

tuple $SomeStruct$_as_optional((int, int, slice, int, int) v) inline {
    var (v'int, v'bool, v'address, v'a, v'b) = v;
    return __tact_tuple_create_5(v'int, v'bool, v'address, v'a, v'b);
}

tuple $SomeStruct$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $SomeStruct$_as_optional(sc~$SomeStruct$_load());
}

(int, int, slice, int, int) $SomeStruct$_from_tuple(tuple v) inline {
    var (int v'int, int v'bool, slice v'address, int v'a, int v'b) = __tact_tuple_destroy_5(v);
    return (v'int, v'bool, v'address, v'a, v'b);
}

;;
;; Type: GetAllMapsResult
;; TLB: _ int_varint16:Maybe int257 int_varint32:Maybe int257 int_varuint16:Maybe int257 int_varuint32:Maybe int257 int_bool:Maybe bool int_cell:Maybe ^cell int_address:Maybe address int_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} int8_varint16:Maybe int257 int8_varint32:Maybe int257 int8_varuint16:Maybe int257 int8_varuint32:Maybe int257 int8_bool:Maybe bool int8_cell:Maybe ^cell int8_address:Maybe address int8_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} int42_varint16:Maybe int257 int42_varint32:Maybe int257 int42_varuint16:Maybe int257 int42_varuint32:Maybe int257 int42_bool:Maybe bool int42_cell:Maybe ^cell int42_address:Maybe address int42_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} int256_varint16:Maybe int257 int256_varint32:Maybe int257 int256_varuint16:Maybe int257 int256_varuint32:Maybe int257 int256_bool:Maybe bool int256_cell:Maybe ^cell int256_address:Maybe address int256_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} uint8_varint16:Maybe int257 uint8_varint32:Maybe int257 uint8_varuint16:Maybe int257 uint8_varuint32:Maybe int257 uint8_bool:Maybe bool uint8_cell:Maybe ^cell uint8_address:Maybe address uint8_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} uint42_varint16:Maybe int257 uint42_varint32:Maybe int257 uint42_varuint16:Maybe int257 uint42_varuint32:Maybe int257 uint42_bool:Maybe bool uint42_cell:Maybe ^cell uint42_address:Maybe address uint42_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} uint256_varint16:Maybe int257 uint256_varint32:Maybe int257 uint256_varuint16:Maybe int257 uint256_varuint32:Maybe int257 uint256_bool:Maybe bool uint256_cell:Maybe ^cell uint256_address:Maybe address uint256_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} address_varint16:Maybe int257 address_varint32:Maybe int257 address_varuint16:Maybe int257 address_varuint32:Maybe int257 address_bool:Maybe bool address_cell:Maybe ^cell address_address:Maybe address address_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} = GetAllMapsResult
;;

(int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple) $GetAllMapsResult$_to_external(((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v; 
    return (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct);
}

((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $GetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, cell $int_cell, slice $int_address, tuple $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, cell $int8_cell, slice $int8_address, tuple $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, cell $int42_cell, slice $int42_address, tuple $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, cell $int256_cell, slice $int256_address, tuple $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, cell $uint8_cell, slice $uint8_address, tuple $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, cell $uint42_cell, slice $uint42_address, tuple $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, cell $uint256_cell, slice $uint256_address, tuple $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, cell $address_cell, slice $address_address, tuple $address_struct) inline {
    return ($int_varint16, $int_varint32, $int_varuint16, $int_varuint32, $int_bool, $int_cell, $int_address, $int_struct, $int8_varint16, $int8_varint32, $int8_varuint16, $int8_varuint32, $int8_bool, $int8_cell, $int8_address, $int8_struct, $int42_varint16, $int42_varint32, $int42_varuint16, $int42_varuint32, $int42_bool, $int42_cell, $int42_address, $int42_struct, $int256_varint16, $int256_varint32, $int256_varuint16, $int256_varuint32, $int256_bool, $int256_cell, $int256_address, $int256_struct, $uint8_varint16, $uint8_varint32, $uint8_varuint16, $uint8_varuint32, $uint8_bool, $uint8_cell, $uint8_address, $uint8_struct, $uint42_varint16, $uint42_varint32, $uint42_varuint16, $uint42_varuint32, $uint42_bool, $uint42_cell, $uint42_address, $uint42_struct, $uint256_varint16, $uint256_varint32, $uint256_varuint16, $uint256_varuint32, $uint256_bool, $uint256_cell, $uint256_address, $uint256_struct, $address_varint16, $address_varint32, $address_varuint16, $address_varuint32, $address_bool, $address_cell, $address_address, $address_struct);
}

;;
;; Type: ReplaceAllMapsResult
;; TLB: _ int_varint16:bool int_varint32:bool int_varuint16:bool int_varuint32:bool int_bool:bool int_cell:bool int_address:bool int_struct:bool int8_varint16:bool int8_varint32:bool int8_varuint16:bool int8_varuint32:bool int8_bool:bool int8_cell:bool int8_address:bool int8_struct:bool int42_varint16:bool int42_varint32:bool int42_varuint16:bool int42_varuint32:bool int42_bool:bool int42_cell:bool int42_address:bool int42_struct:bool int256_varint16:bool int256_varint32:bool int256_varuint16:bool int256_varuint32:bool int256_bool:bool int256_cell:bool int256_address:bool int256_struct:bool uint8_varint16:bool uint8_varint32:bool uint8_varuint16:bool uint8_varuint32:bool uint8_bool:bool uint8_cell:bool uint8_address:bool uint8_struct:bool uint42_varint16:bool uint42_varint32:bool uint42_varuint16:bool uint42_varuint32:bool uint42_bool:bool uint42_cell:bool uint42_address:bool uint42_struct:bool uint256_varint16:bool uint256_varint32:bool uint256_varuint16:bool uint256_varuint32:bool uint256_bool:bool uint256_cell:bool uint256_address:bool uint256_struct:bool address_varint16:bool address_varint32:bool address_varuint16:bool address_varuint32:bool address_bool:bool address_cell:bool address_address:bool address_struct:bool = ReplaceAllMapsResult
;;

(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) $ReplaceAllMapsResult$_to_external(((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v; 
    return (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct);
}

((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $ReplaceAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, int $int_cell, int $int_address, int $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, int $int8_cell, int $int8_address, int $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, int $int42_cell, int $int42_address, int $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, int $int256_cell, int $int256_address, int $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, int $uint8_cell, int $uint8_address, int $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, int $uint42_cell, int $uint42_address, int $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, int $uint256_cell, int $uint256_address, int $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, int $address_cell, int $address_address, int $address_struct) inline {
    return ($int_varint16, $int_varint32, $int_varuint16, $int_varuint32, $int_bool, $int_cell, $int_address, $int_struct, $int8_varint16, $int8_varint32, $int8_varuint16, $int8_varuint32, $int8_bool, $int8_cell, $int8_address, $int8_struct, $int42_varint16, $int42_varint32, $int42_varuint16, $int42_varuint32, $int42_bool, $int42_cell, $int42_address, $int42_struct, $int256_varint16, $int256_varint32, $int256_varuint16, $int256_varuint32, $int256_bool, $int256_cell, $int256_address, $int256_struct, $uint8_varint16, $uint8_varint32, $uint8_varuint16, $uint8_varuint32, $uint8_bool, $uint8_cell, $uint8_address, $uint8_struct, $uint42_varint16, $uint42_varint32, $uint42_varuint16, $uint42_varuint32, $uint42_bool, $uint42_cell, $uint42_address, $uint42_struct, $uint256_varint16, $uint256_varint32, $uint256_varuint16, $uint256_varuint32, $uint256_bool, $uint256_cell, $uint256_address, $uint256_struct, $address_varint16, $address_varint32, $address_varuint16, $address_varuint32, $address_bool, $address_cell, $address_address, $address_struct);
}

;;
;; Type: ReplaceGetAllMapsResult
;; TLB: _ int_varint16:Maybe int257 int_varint32:Maybe int257 int_varuint16:Maybe int257 int_varuint32:Maybe int257 int_bool:Maybe bool int_cell:Maybe ^cell int_address:Maybe address int_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} int8_varint16:Maybe int257 int8_varint32:Maybe int257 int8_varuint16:Maybe int257 int8_varuint32:Maybe int257 int8_bool:Maybe bool int8_cell:Maybe ^cell int8_address:Maybe address int8_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} int42_varint16:Maybe int257 int42_varint32:Maybe int257 int42_varuint16:Maybe int257 int42_varuint32:Maybe int257 int42_bool:Maybe bool int42_cell:Maybe ^cell int42_address:Maybe address int42_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} int256_varint16:Maybe int257 int256_varint32:Maybe int257 int256_varuint16:Maybe int257 int256_varuint32:Maybe int257 int256_bool:Maybe bool int256_cell:Maybe ^cell int256_address:Maybe address int256_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} uint8_varint16:Maybe int257 uint8_varint32:Maybe int257 uint8_varuint16:Maybe int257 uint8_varuint32:Maybe int257 uint8_bool:Maybe bool uint8_cell:Maybe ^cell uint8_address:Maybe address uint8_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} uint42_varint16:Maybe int257 uint42_varint32:Maybe int257 uint42_varuint16:Maybe int257 uint42_varuint32:Maybe int257 uint42_bool:Maybe bool uint42_cell:Maybe ^cell uint42_address:Maybe address uint42_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} uint256_varint16:Maybe int257 uint256_varint32:Maybe int257 uint256_varuint16:Maybe int257 uint256_varuint32:Maybe int257 uint256_bool:Maybe bool uint256_cell:Maybe ^cell uint256_address:Maybe address uint256_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} address_varint16:Maybe int257 address_varint32:Maybe int257 address_varuint16:Maybe int257 address_varuint32:Maybe int257 address_bool:Maybe bool address_cell:Maybe ^cell address_address:Maybe address address_struct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} = ReplaceGetAllMapsResult
;;

(int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple) $ReplaceGetAllMapsResult$_to_external(((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v; 
    return (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct);
}

((int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $ReplaceGetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, cell $int_cell, slice $int_address, tuple $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, cell $int8_cell, slice $int8_address, tuple $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, cell $int42_cell, slice $int42_address, tuple $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, cell $int256_cell, slice $int256_address, tuple $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, cell $uint8_cell, slice $uint8_address, tuple $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, cell $uint42_cell, slice $uint42_address, tuple $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, cell $uint256_cell, slice $uint256_address, tuple $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, cell $address_cell, slice $address_address, tuple $address_struct) inline {
    return ($int_varint16, $int_varint32, $int_varuint16, $int_varuint32, $int_bool, $int_cell, $int_address, $int_struct, $int8_varint16, $int8_varint32, $int8_varuint16, $int8_varuint32, $int8_bool, $int8_cell, $int8_address, $int8_struct, $int42_varint16, $int42_varint32, $int42_varuint16, $int42_varuint32, $int42_bool, $int42_cell, $int42_address, $int42_struct, $int256_varint16, $int256_varint32, $int256_varuint16, $int256_varuint32, $int256_bool, $int256_cell, $int256_address, $int256_struct, $uint8_varint16, $uint8_varint32, $uint8_varuint16, $uint8_varuint32, $uint8_bool, $uint8_cell, $uint8_address, $uint8_struct, $uint42_varint16, $uint42_varint32, $uint42_varuint16, $uint42_varuint32, $uint42_bool, $uint42_cell, $uint42_address, $uint42_struct, $uint256_varint16, $uint256_varint32, $uint256_varuint16, $uint256_varuint32, $uint256_bool, $uint256_cell, $uint256_address, $uint256_struct, $address_varint16, $address_varint32, $address_varuint16, $address_varuint32, $address_bool, $address_cell, $address_address, $address_struct);
}

;;
;; Type: ExistsAllMapsResult
;; TLB: _ int_varint16:bool int_varint32:bool int_varuint16:bool int_varuint32:bool int_bool:bool int_cell:bool int_address:bool int_struct:bool int8_varint16:bool int8_varint32:bool int8_varuint16:bool int8_varuint32:bool int8_bool:bool int8_cell:bool int8_address:bool int8_struct:bool int42_varint16:bool int42_varint32:bool int42_varuint16:bool int42_varuint32:bool int42_bool:bool int42_cell:bool int42_address:bool int42_struct:bool int256_varint16:bool int256_varint32:bool int256_varuint16:bool int256_varuint32:bool int256_bool:bool int256_cell:bool int256_address:bool int256_struct:bool uint8_varint16:bool uint8_varint32:bool uint8_varuint16:bool uint8_varuint32:bool uint8_bool:bool uint8_cell:bool uint8_address:bool uint8_struct:bool uint42_varint16:bool uint42_varint32:bool uint42_varuint16:bool uint42_varuint32:bool uint42_bool:bool uint42_cell:bool uint42_address:bool uint42_struct:bool uint256_varint16:bool uint256_varint32:bool uint256_varuint16:bool uint256_varuint32:bool uint256_bool:bool uint256_cell:bool uint256_address:bool uint256_struct:bool address_varint16:bool address_varint32:bool address_varuint16:bool address_varuint32:bool address_bool:bool address_cell:bool address_address:bool address_struct:bool = ExistsAllMapsResult
;;

(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) $ExistsAllMapsResult$_to_external(((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v; 
    return (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct);
}

((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $ExistsAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, int $int_cell, int $int_address, int $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, int $int8_cell, int $int8_address, int $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, int $int42_cell, int $int42_address, int $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, int $int256_cell, int $int256_address, int $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, int $uint8_cell, int $uint8_address, int $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, int $uint42_cell, int $uint42_address, int $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, int $uint256_cell, int $uint256_address, int $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, int $address_cell, int $address_address, int $address_struct) inline {
    return ($int_varint16, $int_varint32, $int_varuint16, $int_varuint32, $int_bool, $int_cell, $int_address, $int_struct, $int8_varint16, $int8_varint32, $int8_varuint16, $int8_varuint32, $int8_bool, $int8_cell, $int8_address, $int8_struct, $int42_varint16, $int42_varint32, $int42_varuint16, $int42_varuint32, $int42_bool, $int42_cell, $int42_address, $int42_struct, $int256_varint16, $int256_varint32, $int256_varuint16, $int256_varuint32, $int256_bool, $int256_cell, $int256_address, $int256_struct, $uint8_varint16, $uint8_varint32, $uint8_varuint16, $uint8_varuint32, $uint8_bool, $uint8_cell, $uint8_address, $uint8_struct, $uint42_varint16, $uint42_varint32, $uint42_varuint16, $uint42_varuint32, $uint42_bool, $uint42_cell, $uint42_address, $uint42_struct, $uint256_varint16, $uint256_varint32, $uint256_varuint16, $uint256_varuint32, $uint256_bool, $uint256_cell, $uint256_address, $uint256_struct, $address_varint16, $address_varint32, $address_varuint16, $address_varuint32, $address_bool, $address_cell, $address_address, $address_struct);
}

;;
;; Type: IsEmptyAllMapsResult
;; TLB: _ int_varint16:bool int_varint32:bool int_varuint16:bool int_varuint32:bool int_bool:bool int_cell:bool int_address:bool int_struct:bool int8_varint16:bool int8_varint32:bool int8_varuint16:bool int8_varuint32:bool int8_bool:bool int8_cell:bool int8_address:bool int8_struct:bool int42_varint16:bool int42_varint32:bool int42_varuint16:bool int42_varuint32:bool int42_bool:bool int42_cell:bool int42_address:bool int42_struct:bool int256_varint16:bool int256_varint32:bool int256_varuint16:bool int256_varuint32:bool int256_bool:bool int256_cell:bool int256_address:bool int256_struct:bool uint8_varint16:bool uint8_varint32:bool uint8_varuint16:bool uint8_varuint32:bool uint8_bool:bool uint8_cell:bool uint8_address:bool uint8_struct:bool uint42_varint16:bool uint42_varint32:bool uint42_varuint16:bool uint42_varuint32:bool uint42_bool:bool uint42_cell:bool uint42_address:bool uint42_struct:bool uint256_varint16:bool uint256_varint32:bool uint256_varuint16:bool uint256_varuint32:bool uint256_bool:bool uint256_cell:bool uint256_address:bool uint256_struct:bool address_varint16:bool address_varint32:bool address_varuint16:bool address_varuint32:bool address_bool:bool address_cell:bool address_address:bool address_struct:bool = IsEmptyAllMapsResult
;;

(int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int) $IsEmptyAllMapsResult$_to_external(((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v; 
    return (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct);
}

((int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $IsEmptyAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(int $int_varint16, int $int_varint32, int $int_varuint16, int $int_varuint32, int $int_bool, int $int_cell, int $int_address, int $int_struct, int $int8_varint16, int $int8_varint32, int $int8_varuint16, int $int8_varuint32, int $int8_bool, int $int8_cell, int $int8_address, int $int8_struct, int $int42_varint16, int $int42_varint32, int $int42_varuint16, int $int42_varuint32, int $int42_bool, int $int42_cell, int $int42_address, int $int42_struct, int $int256_varint16, int $int256_varint32, int $int256_varuint16, int $int256_varuint32, int $int256_bool, int $int256_cell, int $int256_address, int $int256_struct, int $uint8_varint16, int $uint8_varint32, int $uint8_varuint16, int $uint8_varuint32, int $uint8_bool, int $uint8_cell, int $uint8_address, int $uint8_struct, int $uint42_varint16, int $uint42_varint32, int $uint42_varuint16, int $uint42_varuint32, int $uint42_bool, int $uint42_cell, int $uint42_address, int $uint42_struct, int $uint256_varint16, int $uint256_varint32, int $uint256_varuint16, int $uint256_varuint32, int $uint256_bool, int $uint256_cell, int $uint256_address, int $uint256_struct, int $address_varint16, int $address_varint32, int $address_varuint16, int $address_varuint32, int $address_bool, int $address_cell, int $address_address, int $address_struct) inline {
    return ($int_varint16, $int_varint32, $int_varuint16, $int_varuint32, $int_bool, $int_cell, $int_address, $int_struct, $int8_varint16, $int8_varint32, $int8_varuint16, $int8_varuint32, $int8_bool, $int8_cell, $int8_address, $int8_struct, $int42_varint16, $int42_varint32, $int42_varuint16, $int42_varuint32, $int42_bool, $int42_cell, $int42_address, $int42_struct, $int256_varint16, $int256_varint32, $int256_varuint16, $int256_varuint32, $int256_bool, $int256_cell, $int256_address, $int256_struct, $uint8_varint16, $uint8_varint32, $uint8_varuint16, $uint8_varuint32, $uint8_bool, $uint8_cell, $uint8_address, $uint8_struct, $uint42_varint16, $uint42_varint32, $uint42_varuint16, $uint42_varuint32, $uint42_bool, $uint42_cell, $uint42_address, $uint42_struct, $uint256_varint16, $uint256_varint32, $uint256_varuint16, $uint256_varuint32, $uint256_bool, $uint256_cell, $uint256_address, $uint256_struct, $address_varint16, $address_varint32, $address_varuint16, $address_varuint32, $address_bool, $address_cell, $address_address, $address_struct);
}

;;
;; Type: AsCellAllMapsResult
;; TLB: _ int_varint16:Maybe ^cell int_varint32:Maybe ^cell int_varuint16:Maybe ^cell int_varuint32:Maybe ^cell int_bool:Maybe ^cell int_cell:Maybe ^cell int_address:Maybe ^cell int_struct:Maybe ^cell int8_varint16:Maybe ^cell int8_varint32:Maybe ^cell int8_varuint16:Maybe ^cell int8_varuint32:Maybe ^cell int8_bool:Maybe ^cell int8_cell:Maybe ^cell int8_address:Maybe ^cell int8_struct:Maybe ^cell int42_varint16:Maybe ^cell int42_varint32:Maybe ^cell int42_varuint16:Maybe ^cell int42_varuint32:Maybe ^cell int42_bool:Maybe ^cell int42_cell:Maybe ^cell int42_address:Maybe ^cell int42_struct:Maybe ^cell int256_varint16:Maybe ^cell int256_varint32:Maybe ^cell int256_varuint16:Maybe ^cell int256_varuint32:Maybe ^cell int256_bool:Maybe ^cell int256_cell:Maybe ^cell int256_address:Maybe ^cell int256_struct:Maybe ^cell uint8_varint16:Maybe ^cell uint8_varint32:Maybe ^cell uint8_varuint16:Maybe ^cell uint8_varuint32:Maybe ^cell uint8_bool:Maybe ^cell uint8_cell:Maybe ^cell uint8_address:Maybe ^cell uint8_struct:Maybe ^cell uint42_varint16:Maybe ^cell uint42_varint32:Maybe ^cell uint42_varuint16:Maybe ^cell uint42_varuint32:Maybe ^cell uint42_bool:Maybe ^cell uint42_cell:Maybe ^cell uint42_address:Maybe ^cell uint42_struct:Maybe ^cell uint256_varint16:Maybe ^cell uint256_varint32:Maybe ^cell uint256_varuint16:Maybe ^cell uint256_varuint32:Maybe ^cell uint256_bool:Maybe ^cell uint256_cell:Maybe ^cell uint256_address:Maybe ^cell uint256_struct:Maybe ^cell address_varint16:Maybe ^cell address_varint32:Maybe ^cell address_varuint16:Maybe ^cell address_varuint32:Maybe ^cell address_bool:Maybe ^cell address_cell:Maybe ^cell address_address:Maybe ^cell address_struct:Maybe ^cell = AsCellAllMapsResult
;;

(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $AsCellAllMapsResult$_to_external(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v; 
    return (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) $AsCellAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(cell $int_varint16, cell $int_varint32, cell $int_varuint16, cell $int_varuint32, cell $int_bool, cell $int_cell, cell $int_address, cell $int_struct, cell $int8_varint16, cell $int8_varint32, cell $int8_varuint16, cell $int8_varuint32, cell $int8_bool, cell $int8_cell, cell $int8_address, cell $int8_struct, cell $int42_varint16, cell $int42_varint32, cell $int42_varuint16, cell $int42_varuint32, cell $int42_bool, cell $int42_cell, cell $int42_address, cell $int42_struct, cell $int256_varint16, cell $int256_varint32, cell $int256_varuint16, cell $int256_varuint32, cell $int256_bool, cell $int256_cell, cell $int256_address, cell $int256_struct, cell $uint8_varint16, cell $uint8_varint32, cell $uint8_varuint16, cell $uint8_varuint32, cell $uint8_bool, cell $uint8_cell, cell $uint8_address, cell $uint8_struct, cell $uint42_varint16, cell $uint42_varint32, cell $uint42_varuint16, cell $uint42_varuint32, cell $uint42_bool, cell $uint42_cell, cell $uint42_address, cell $uint42_struct, cell $uint256_varint16, cell $uint256_varint32, cell $uint256_varuint16, cell $uint256_varuint32, cell $uint256_bool, cell $uint256_cell, cell $uint256_address, cell $uint256_struct, cell $address_varint16, cell $address_varint32, cell $address_varuint16, cell $address_varuint32, cell $address_bool, cell $address_cell, cell $address_address, cell $address_struct) inline {
    return ($int_varint16, $int_varint32, $int_varuint16, $int_varuint32, $int_bool, $int_cell, $int_address, $int_struct, $int8_varint16, $int8_varint32, $int8_varuint16, $int8_varuint32, $int8_bool, $int8_cell, $int8_address, $int8_struct, $int42_varint16, $int42_varint32, $int42_varuint16, $int42_varuint32, $int42_bool, $int42_cell, $int42_address, $int42_struct, $int256_varint16, $int256_varint32, $int256_varuint16, $int256_varuint32, $int256_bool, $int256_cell, $int256_address, $int256_struct, $uint8_varint16, $uint8_varint32, $uint8_varuint16, $uint8_varuint32, $uint8_bool, $uint8_cell, $uint8_address, $uint8_struct, $uint42_varint16, $uint42_varint32, $uint42_varuint16, $uint42_varuint32, $uint42_bool, $uint42_cell, $uint42_address, $uint42_struct, $uint256_varint16, $uint256_varint32, $uint256_varuint16, $uint256_varuint32, $uint256_bool, $uint256_cell, $uint256_address, $uint256_struct, $address_varint16, $address_varint32, $address_varuint16, $address_varuint32, $address_bool, $address_cell, $address_address, $address_struct);
}

;;
;; Type: SetAllMaps
;; Header: 0x054279b2
;; TLB: set_all_maps#054279b2 keyInt:int257 keyInt8:int257 keyInt42:int257 keyInt256:int257 keyUint8:int257 keyUint42:int257 keyUint256:int257 keyAddress:address valueVarint16:Maybe int257 valueVarint32:Maybe int257 valueVaruint16:Maybe int257 valueVaruint32:Maybe int257 valueBool:Maybe bool valueCell:Maybe ^cell valueAddress:Maybe address valueStruct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} = SetAllMaps
;;

(slice, ((int, int, int, int, int, int, int, slice, int, int, int, int, int, cell, slice, tuple))) $SetAllMaps$_load_without_opcode(slice sc_0) inline_ref {
    var v'keyInt = sc_0~load_int(257);
    var v'keyInt8 = sc_0~load_int(257);
    var v'keyInt42 = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'keyInt256 = sc_1~load_int(257);
    var v'keyUint8 = sc_1~load_int(257);
    var v'keyUint42 = sc_1~load_int(257);
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'keyUint256 = sc_2~load_int(257);
    var v'keyAddress = sc_2~load_msg_addr();
    var v'valueVarint16 = sc_2~load_int(1) ? sc_2~load_int(257) : null();
    slice sc_3 = sc_2~load_ref().begin_parse();
    var v'valueVarint32 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueVaruint16 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueVaruint32 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueBool = sc_3~load_int(1) ? sc_3~load_int(1) : null();
    var v'valueCell = sc_3~load_int(1) ? sc_3~load_ref() : null();
    slice sc_4 = sc_3~load_ref().begin_parse();
    var v'valueAddress = sc_4~__tact_load_address_opt();
    slice sc_5 = sc_4~load_ref().begin_parse();
    var v'valueStruct = sc_5~load_int(1) ? $SomeStruct$_as_optional(sc_5~$SomeStruct$_load()) : null();
    return (sc_0, (v'keyInt, v'keyInt8, v'keyInt42, v'keyInt256, v'keyUint8, v'keyUint42, v'keyUint256, v'keyAddress, v'valueVarint16, v'valueVarint32, v'valueVaruint16, v'valueVaruint32, v'valueBool, v'valueCell, v'valueAddress, v'valueStruct));
}

;;
;; Type: DelAllMaps
;; Header: 0x4b2bbe7f
;; TLB: del_all_maps#4b2bbe7f keyInt:int257 keyInt8:int257 keyInt42:int257 keyInt256:int257 keyUint8:int257 keyUint42:int257 keyUint256:int257 keyAddress:address = DelAllMaps
;;

(slice, ((int, int, int, int, int, int, int, slice))) $DelAllMaps$_load_without_opcode(slice sc_0) inline {
    var v'keyInt = sc_0~load_int(257);
    var v'keyInt8 = sc_0~load_int(257);
    var v'keyInt42 = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'keyInt256 = sc_1~load_int(257);
    var v'keyUint8 = sc_1~load_int(257);
    var v'keyUint42 = sc_1~load_int(257);
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'keyUint256 = sc_2~load_int(257);
    var v'keyAddress = sc_2~load_msg_addr();
    return (sc_0, (v'keyInt, v'keyInt8, v'keyInt42, v'keyInt256, v'keyUint8, v'keyUint42, v'keyUint256, v'keyAddress));
}

;;
;; Type: ReplaceAllMaps
;; Header: 0xe9090267
;; TLB: replace_all_maps#e9090267 keyInt:int257 keyInt8:int257 keyInt42:int257 keyInt256:int257 keyUint8:int257 keyUint42:int257 keyUint256:int257 keyAddress:address valueVarint16:Maybe int257 valueVarint32:Maybe int257 valueVaruint16:Maybe int257 valueVaruint32:Maybe int257 valueBool:Maybe bool valueCell:Maybe ^cell valueAddress:Maybe address valueStruct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} = ReplaceAllMaps
;;

(slice, ((int, int, int, int, int, int, int, slice, int, int, int, int, int, cell, slice, tuple))) $ReplaceAllMaps$_load_without_opcode(slice sc_0) inline_ref {
    var v'keyInt = sc_0~load_int(257);
    var v'keyInt8 = sc_0~load_int(257);
    var v'keyInt42 = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'keyInt256 = sc_1~load_int(257);
    var v'keyUint8 = sc_1~load_int(257);
    var v'keyUint42 = sc_1~load_int(257);
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'keyUint256 = sc_2~load_int(257);
    var v'keyAddress = sc_2~load_msg_addr();
    var v'valueVarint16 = sc_2~load_int(1) ? sc_2~load_int(257) : null();
    slice sc_3 = sc_2~load_ref().begin_parse();
    var v'valueVarint32 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueVaruint16 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueVaruint32 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueBool = sc_3~load_int(1) ? sc_3~load_int(1) : null();
    var v'valueCell = sc_3~load_int(1) ? sc_3~load_ref() : null();
    slice sc_4 = sc_3~load_ref().begin_parse();
    var v'valueAddress = sc_4~__tact_load_address_opt();
    slice sc_5 = sc_4~load_ref().begin_parse();
    var v'valueStruct = sc_5~load_int(1) ? $SomeStruct$_as_optional(sc_5~$SomeStruct$_load()) : null();
    return (sc_0, (v'keyInt, v'keyInt8, v'keyInt42, v'keyInt256, v'keyUint8, v'keyUint42, v'keyUint256, v'keyAddress, v'valueVarint16, v'valueVarint32, v'valueVaruint16, v'valueVaruint32, v'valueBool, v'valueCell, v'valueAddress, v'valueStruct));
}

;;
;; Type: ReplaceGetAllMaps
;; Header: 0x3ed9e7d1
;; TLB: replace_get_all_maps#3ed9e7d1 keyInt:int257 keyInt8:int257 keyInt42:int257 keyInt256:int257 keyUint8:int257 keyUint42:int257 keyUint256:int257 keyAddress:address valueVarint16:Maybe int257 valueVarint32:Maybe int257 valueVaruint16:Maybe int257 valueVaruint32:Maybe int257 valueBool:Maybe bool valueCell:Maybe ^cell valueAddress:Maybe address valueStruct:Maybe SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257} = ReplaceGetAllMaps
;;

(slice, ((int, int, int, int, int, int, int, slice, int, int, int, int, int, cell, slice, tuple))) $ReplaceGetAllMaps$_load_without_opcode(slice sc_0) inline_ref {
    var v'keyInt = sc_0~load_int(257);
    var v'keyInt8 = sc_0~load_int(257);
    var v'keyInt42 = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'keyInt256 = sc_1~load_int(257);
    var v'keyUint8 = sc_1~load_int(257);
    var v'keyUint42 = sc_1~load_int(257);
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'keyUint256 = sc_2~load_int(257);
    var v'keyAddress = sc_2~load_msg_addr();
    var v'valueVarint16 = sc_2~load_int(1) ? sc_2~load_int(257) : null();
    slice sc_3 = sc_2~load_ref().begin_parse();
    var v'valueVarint32 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueVaruint16 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueVaruint32 = sc_3~load_int(1) ? sc_3~load_int(257) : null();
    var v'valueBool = sc_3~load_int(1) ? sc_3~load_int(1) : null();
    var v'valueCell = sc_3~load_int(1) ? sc_3~load_ref() : null();
    slice sc_4 = sc_3~load_ref().begin_parse();
    var v'valueAddress = sc_4~__tact_load_address_opt();
    slice sc_5 = sc_4~load_ref().begin_parse();
    var v'valueStruct = sc_5~load_int(1) ? $SomeStruct$_as_optional(sc_5~$SomeStruct$_load()) : null();
    return (sc_0, (v'keyInt, v'keyInt8, v'keyInt42, v'keyInt256, v'keyUint8, v'keyUint42, v'keyUint256, v'keyAddress, v'valueVarint16, v'valueVarint32, v'valueVaruint16, v'valueVaruint32, v'valueBool, v'valueCell, v'valueAddress, v'valueStruct));
}

;;
;; Type: CheckNullReference
;; Header: 0xb182fee0
;; TLB: check_null_reference#b182fee0  = CheckNullReference
;;

(slice, (tuple)) $CheckNullReference$_load_without_opcode(slice sc_0) inline {
    return (sc_0, null());
}

;;
;; Type: MapTestContract
;; TLB: _ int_varint16:dict<int, varint16> int_varint32:dict<int, varint32> int_varuint16:dict<int, varuint16> int_varuint32:dict<int, varuint32> int_bool:dict<int, bool> int_cell:dict<int, ^cell> int_address:dict<int, address> int_struct:dict<int, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> int8_varint16:dict<int8, varint16> int8_varint32:dict<int8, varint32> int8_varuint16:dict<int8, varuint16> int8_varuint32:dict<int8, varuint32> int8_bool:dict<int8, bool> int8_cell:dict<int8, ^cell> int8_address:dict<int8, address> int8_struct:dict<int8, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> int42_varint16:dict<int42, varint16> int42_varint32:dict<int42, varint32> int42_varuint16:dict<int42, varuint16> int42_varuint32:dict<int42, varuint32> int42_bool:dict<int42, bool> int42_cell:dict<int42, ^cell> int42_address:dict<int42, address> int42_struct:dict<int42, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> int256_varint16:dict<int256, varint16> int256_varint32:dict<int256, varint32> int256_varuint16:dict<int256, varuint16> int256_varuint32:dict<int256, varuint32> int256_bool:dict<int256, bool> int256_cell:dict<int256, ^cell> int256_address:dict<int256, address> int256_struct:dict<int256, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> uint8_varint16:dict<uint8, varint16> uint8_varint32:dict<uint8, varint32> uint8_varuint16:dict<uint8, varuint16> uint8_varuint32:dict<uint8, varuint32> uint8_bool:dict<uint8, bool> uint8_cell:dict<uint8, ^cell> uint8_address:dict<uint8, address> uint8_struct:dict<uint8, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> uint42_varint16:dict<uint42, varint16> uint42_varint32:dict<uint42, varint32> uint42_varuint16:dict<uint42, varuint16> uint42_varuint32:dict<uint42, varuint32> uint42_bool:dict<uint42, bool> uint42_cell:dict<uint42, ^cell> uint42_address:dict<uint42, address> uint42_struct:dict<uint42, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> uint256_varint16:dict<uint256, varint16> uint256_varint32:dict<uint256, varint32> uint256_varuint16:dict<uint256, varuint16> uint256_varuint32:dict<uint256, varuint32> uint256_bool:dict<uint256, bool> uint256_cell:dict<uint256, ^cell> uint256_address:dict<uint256, address> uint256_struct:dict<uint256, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> address_varint16:dict<address, varint16> address_varint32:dict<address, varint32> address_varuint16:dict<address, varuint16> address_varuint32:dict<address, varuint32> address_bool:dict<address, bool> address_cell:dict<address, ^cell> address_address:dict<address, address> address_struct:dict<address, ^SomeStruct{int:int257,bool:bool,address:address,a:int257,b:int257}> = MapTestContract
;;

builder $MapTestContract$_store(builder build_0, (cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v;
    build_0 = build_0.store_dict(v'int_varint16);
    var build_1 = begin_cell();
    build_1 = build_1.store_dict(v'int_varint32);
    build_1 = build_1.store_dict(v'int_varuint16);
    build_1 = build_1.store_dict(v'int_varuint32);
    var build_2 = begin_cell();
    build_2 = build_2.store_dict(v'int_bool);
    build_2 = build_2.store_dict(v'int_cell);
    build_2 = build_2.store_dict(v'int_address);
    var build_3 = begin_cell();
    build_3 = build_3.store_dict(v'int_struct);
    build_3 = build_3.store_dict(v'int8_varint16);
    build_3 = build_3.store_dict(v'int8_varint32);
    var build_4 = begin_cell();
    build_4 = build_4.store_dict(v'int8_varuint16);
    build_4 = build_4.store_dict(v'int8_varuint32);
    build_4 = build_4.store_dict(v'int8_bool);
    var build_5 = begin_cell();
    build_5 = build_5.store_dict(v'int8_cell);
    build_5 = build_5.store_dict(v'int8_address);
    build_5 = build_5.store_dict(v'int8_struct);
    var build_6 = begin_cell();
    build_6 = build_6.store_dict(v'int42_varint16);
    build_6 = build_6.store_dict(v'int42_varint32);
    build_6 = build_6.store_dict(v'int42_varuint16);
    var build_7 = begin_cell();
    build_7 = build_7.store_dict(v'int42_varuint32);
    build_7 = build_7.store_dict(v'int42_bool);
    build_7 = build_7.store_dict(v'int42_cell);
    var build_8 = begin_cell();
    build_8 = build_8.store_dict(v'int42_address);
    build_8 = build_8.store_dict(v'int42_struct);
    build_8 = build_8.store_dict(v'int256_varint16);
    var build_9 = begin_cell();
    build_9 = build_9.store_dict(v'int256_varint32);
    build_9 = build_9.store_dict(v'int256_varuint16);
    build_9 = build_9.store_dict(v'int256_varuint32);
    var build_10 = begin_cell();
    build_10 = build_10.store_dict(v'int256_bool);
    build_10 = build_10.store_dict(v'int256_cell);
    build_10 = build_10.store_dict(v'int256_address);
    var build_11 = begin_cell();
    build_11 = build_11.store_dict(v'int256_struct);
    build_11 = build_11.store_dict(v'uint8_varint16);
    build_11 = build_11.store_dict(v'uint8_varint32);
    var build_12 = begin_cell();
    build_12 = build_12.store_dict(v'uint8_varuint16);
    build_12 = build_12.store_dict(v'uint8_varuint32);
    build_12 = build_12.store_dict(v'uint8_bool);
    var build_13 = begin_cell();
    build_13 = build_13.store_dict(v'uint8_cell);
    build_13 = build_13.store_dict(v'uint8_address);
    build_13 = build_13.store_dict(v'uint8_struct);
    var build_14 = begin_cell();
    build_14 = build_14.store_dict(v'uint42_varint16);
    build_14 = build_14.store_dict(v'uint42_varint32);
    build_14 = build_14.store_dict(v'uint42_varuint16);
    var build_15 = begin_cell();
    build_15 = build_15.store_dict(v'uint42_varuint32);
    build_15 = build_15.store_dict(v'uint42_bool);
    build_15 = build_15.store_dict(v'uint42_cell);
    var build_16 = begin_cell();
    build_16 = build_16.store_dict(v'uint42_address);
    build_16 = build_16.store_dict(v'uint42_struct);
    build_16 = build_16.store_dict(v'uint256_varint16);
    var build_17 = begin_cell();
    build_17 = build_17.store_dict(v'uint256_varint32);
    build_17 = build_17.store_dict(v'uint256_varuint16);
    build_17 = build_17.store_dict(v'uint256_varuint32);
    var build_18 = begin_cell();
    build_18 = build_18.store_dict(v'uint256_bool);
    build_18 = build_18.store_dict(v'uint256_cell);
    build_18 = build_18.store_dict(v'uint256_address);
    var build_19 = begin_cell();
    build_19 = build_19.store_dict(v'uint256_struct);
    build_19 = build_19.store_dict(v'address_varint16);
    build_19 = build_19.store_dict(v'address_varint32);
    var build_20 = begin_cell();
    build_20 = build_20.store_dict(v'address_varuint16);
    build_20 = build_20.store_dict(v'address_varuint32);
    build_20 = build_20.store_dict(v'address_bool);
    var build_21 = begin_cell();
    build_21 = build_21.store_dict(v'address_cell);
    build_21 = build_21.store_dict(v'address_address);
    build_21 = build_21.store_dict(v'address_struct);
    build_20 = store_ref(build_20, build_21.end_cell());
    build_19 = store_ref(build_19, build_20.end_cell());
    build_18 = store_ref(build_18, build_19.end_cell());
    build_17 = store_ref(build_17, build_18.end_cell());
    build_16 = store_ref(build_16, build_17.end_cell());
    build_15 = store_ref(build_15, build_16.end_cell());
    build_14 = store_ref(build_14, build_15.end_cell());
    build_13 = store_ref(build_13, build_14.end_cell());
    build_12 = store_ref(build_12, build_13.end_cell());
    build_11 = store_ref(build_11, build_12.end_cell());
    build_10 = store_ref(build_10, build_11.end_cell());
    build_9 = store_ref(build_9, build_10.end_cell());
    build_8 = store_ref(build_8, build_9.end_cell());
    build_7 = store_ref(build_7, build_8.end_cell());
    build_6 = store_ref(build_6, build_7.end_cell());
    build_5 = store_ref(build_5, build_6.end_cell());
    build_4 = store_ref(build_4, build_5.end_cell());
    build_3 = store_ref(build_3, build_4.end_cell());
    build_2 = store_ref(build_2, build_3.end_cell());
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell))) $MapTestContract$_load(slice sc_0) inline {
    var v'int_varint16 = sc_0~load_dict();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'int_varint32 = sc_1~load_dict();
    var v'int_varuint16 = sc_1~load_dict();
    var v'int_varuint32 = sc_1~load_dict();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'int_bool = sc_2~load_dict();
    var v'int_cell = sc_2~load_dict();
    var v'int_address = sc_2~load_dict();
    slice sc_3 = sc_2~load_ref().begin_parse();
    var v'int_struct = sc_3~load_dict();
    var v'int8_varint16 = sc_3~load_dict();
    var v'int8_varint32 = sc_3~load_dict();
    slice sc_4 = sc_3~load_ref().begin_parse();
    var v'int8_varuint16 = sc_4~load_dict();
    var v'int8_varuint32 = sc_4~load_dict();
    var v'int8_bool = sc_4~load_dict();
    slice sc_5 = sc_4~load_ref().begin_parse();
    var v'int8_cell = sc_5~load_dict();
    var v'int8_address = sc_5~load_dict();
    var v'int8_struct = sc_5~load_dict();
    slice sc_6 = sc_5~load_ref().begin_parse();
    var v'int42_varint16 = sc_6~load_dict();
    var v'int42_varint32 = sc_6~load_dict();
    var v'int42_varuint16 = sc_6~load_dict();
    slice sc_7 = sc_6~load_ref().begin_parse();
    var v'int42_varuint32 = sc_7~load_dict();
    var v'int42_bool = sc_7~load_dict();
    var v'int42_cell = sc_7~load_dict();
    slice sc_8 = sc_7~load_ref().begin_parse();
    var v'int42_address = sc_8~load_dict();
    var v'int42_struct = sc_8~load_dict();
    var v'int256_varint16 = sc_8~load_dict();
    slice sc_9 = sc_8~load_ref().begin_parse();
    var v'int256_varint32 = sc_9~load_dict();
    var v'int256_varuint16 = sc_9~load_dict();
    var v'int256_varuint32 = sc_9~load_dict();
    slice sc_10 = sc_9~load_ref().begin_parse();
    var v'int256_bool = sc_10~load_dict();
    var v'int256_cell = sc_10~load_dict();
    var v'int256_address = sc_10~load_dict();
    slice sc_11 = sc_10~load_ref().begin_parse();
    var v'int256_struct = sc_11~load_dict();
    var v'uint8_varint16 = sc_11~load_dict();
    var v'uint8_varint32 = sc_11~load_dict();
    slice sc_12 = sc_11~load_ref().begin_parse();
    var v'uint8_varuint16 = sc_12~load_dict();
    var v'uint8_varuint32 = sc_12~load_dict();
    var v'uint8_bool = sc_12~load_dict();
    slice sc_13 = sc_12~load_ref().begin_parse();
    var v'uint8_cell = sc_13~load_dict();
    var v'uint8_address = sc_13~load_dict();
    var v'uint8_struct = sc_13~load_dict();
    slice sc_14 = sc_13~load_ref().begin_parse();
    var v'uint42_varint16 = sc_14~load_dict();
    var v'uint42_varint32 = sc_14~load_dict();
    var v'uint42_varuint16 = sc_14~load_dict();
    slice sc_15 = sc_14~load_ref().begin_parse();
    var v'uint42_varuint32 = sc_15~load_dict();
    var v'uint42_bool = sc_15~load_dict();
    var v'uint42_cell = sc_15~load_dict();
    slice sc_16 = sc_15~load_ref().begin_parse();
    var v'uint42_address = sc_16~load_dict();
    var v'uint42_struct = sc_16~load_dict();
    var v'uint256_varint16 = sc_16~load_dict();
    slice sc_17 = sc_16~load_ref().begin_parse();
    var v'uint256_varint32 = sc_17~load_dict();
    var v'uint256_varuint16 = sc_17~load_dict();
    var v'uint256_varuint32 = sc_17~load_dict();
    slice sc_18 = sc_17~load_ref().begin_parse();
    var v'uint256_bool = sc_18~load_dict();
    var v'uint256_cell = sc_18~load_dict();
    var v'uint256_address = sc_18~load_dict();
    slice sc_19 = sc_18~load_ref().begin_parse();
    var v'uint256_struct = sc_19~load_dict();
    var v'address_varint16 = sc_19~load_dict();
    var v'address_varint32 = sc_19~load_dict();
    slice sc_20 = sc_19~load_ref().begin_parse();
    var v'address_varuint16 = sc_20~load_dict();
    var v'address_varuint32 = sc_20~load_dict();
    var v'address_bool = sc_20~load_dict();
    slice sc_21 = sc_20~load_ref().begin_parse();
    var v'address_cell = sc_21~load_dict();
    var v'address_address = sc_21~load_dict();
    var v'address_struct = sc_21~load_dict();
    return (sc_0, (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct));
}

(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $MapTestContract$_to_external(((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) v) inline {
    var (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct) = v; 
    return (v'int_varint16, v'int_varint32, v'int_varuint16, v'int_varuint32, v'int_bool, v'int_cell, v'int_address, v'int_struct, v'int8_varint16, v'int8_varint32, v'int8_varuint16, v'int8_varuint32, v'int8_bool, v'int8_cell, v'int8_address, v'int8_struct, v'int42_varint16, v'int42_varint32, v'int42_varuint16, v'int42_varuint32, v'int42_bool, v'int42_cell, v'int42_address, v'int42_struct, v'int256_varint16, v'int256_varint32, v'int256_varuint16, v'int256_varuint32, v'int256_bool, v'int256_cell, v'int256_address, v'int256_struct, v'uint8_varint16, v'uint8_varint32, v'uint8_varuint16, v'uint8_varuint32, v'uint8_bool, v'uint8_cell, v'uint8_address, v'uint8_struct, v'uint42_varint16, v'uint42_varint32, v'uint42_varuint16, v'uint42_varuint32, v'uint42_bool, v'uint42_cell, v'uint42_address, v'uint42_struct, v'uint256_varint16, v'uint256_varint32, v'uint256_varuint16, v'uint256_varuint32, v'uint256_bool, v'uint256_cell, v'uint256_address, v'uint256_struct, v'address_varint16, v'address_varint32, v'address_varuint16, v'address_varuint32, v'address_bool, v'address_cell, v'address_address, v'address_struct);
}

(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $MapTestContract$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$MapTestContract$_load();
    } else {
        return $MapTestContract$_contract_init();
    }
}

() $MapTestContract$_contract_store((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) v) impure inline {
    builder b = begin_cell();
    b = b.store_int(true, 1);
    b = $MapTestContract$_store(b, v);
    set_data(b.end_cell());
}

;;
;; Contract MapTestContract functions
;;

(cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $MapTestContract$_contract_init() impure inline {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = (null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null(), null());
    return ($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) $MapTestContract$_fun_allMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    var $fresh$ret_498 = ($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct);
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_498);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $MapTestContract$_fun_getAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    var $fresh$ret_499 = $GetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(__tact_dict_get_int_varint16($self'int_varint16, 257, $keyInt), __tact_dict_get_int_varint32($self'int_varint32, 257, $keyInt), __tact_dict_get_int_varuint16($self'int_varuint16, 257, $keyInt), __tact_dict_get_int_varuint32($self'int_varuint32, 257, $keyInt), __tact_dict_get_int_int($self'int_bool, 257, $keyInt, 1), __tact_dict_get_int_cell($self'int_cell, 257, $keyInt), __tact_dict_get_int_slice($self'int_address, 257, $keyInt), $SomeStruct$_load_opt(__tact_dict_get_int_cell($self'int_struct, 257, $keyInt)), __tact_dict_get_int_varint16($self'int8_varint16, 8, $keyInt8), __tact_dict_get_int_varint32($self'int8_varint32, 8, $keyInt8), __tact_dict_get_int_varuint16($self'int8_varuint16, 8, $keyInt8), __tact_dict_get_int_varuint32($self'int8_varuint32, 8, $keyInt8), __tact_dict_get_int_int($self'int8_bool, 8, $keyInt8, 1), __tact_dict_get_int_cell($self'int8_cell, 8, $keyInt8), __tact_dict_get_int_slice($self'int8_address, 8, $keyInt8), $SomeStruct$_load_opt(__tact_dict_get_int_cell($self'int8_struct, 8, $keyInt8)), __tact_dict_get_int_varint16($self'int42_varint16, 42, $keyInt42), __tact_dict_get_int_varint32($self'int42_varint32, 42, $keyInt42), __tact_dict_get_int_varuint16($self'int42_varuint16, 42, $keyInt42), __tact_dict_get_int_varuint32($self'int42_varuint32, 42, $keyInt42), __tact_dict_get_int_int($self'int42_bool, 42, $keyInt42, 1), __tact_dict_get_int_cell($self'int42_cell, 42, $keyInt42), __tact_dict_get_int_slice($self'int42_address, 42, $keyInt42), $SomeStruct$_load_opt(__tact_dict_get_int_cell($self'int42_struct, 42, $keyInt42)), __tact_dict_get_int_varint16($self'int256_varint16, 256, $keyInt256), __tact_dict_get_int_varint32($self'int256_varint32, 256, $keyInt256), __tact_dict_get_int_varuint16($self'int256_varuint16, 256, $keyInt256), __tact_dict_get_int_varuint32($self'int256_varuint32, 256, $keyInt256), __tact_dict_get_int_int($self'int256_bool, 256, $keyInt256, 1), __tact_dict_get_int_cell($self'int256_cell, 256, $keyInt256), __tact_dict_get_int_slice($self'int256_address, 256, $keyInt256), $SomeStruct$_load_opt(__tact_dict_get_int_cell($self'int256_struct, 256, $keyInt256)), __tact_dict_get_uint_varint16($self'uint8_varint16, 8, $keyUint8), __tact_dict_get_uint_varint32($self'uint8_varint32, 8, $keyUint8), __tact_dict_get_uint_varuint16($self'uint8_varuint16, 8, $keyUint8), __tact_dict_get_uint_varuint32($self'uint8_varuint32, 8, $keyUint8), __tact_dict_get_uint_int($self'uint8_bool, 8, $keyUint8, 1), __tact_dict_get_uint_cell($self'uint8_cell, 8, $keyUint8), __tact_dict_get_uint_slice($self'uint8_address, 8, $keyUint8), $SomeStruct$_load_opt(__tact_dict_get_uint_cell($self'uint8_struct, 8, $keyUint8)), __tact_dict_get_uint_varint16($self'uint42_varint16, 42, $keyUint42), __tact_dict_get_uint_varint32($self'uint42_varint32, 42, $keyUint42), __tact_dict_get_uint_varuint16($self'uint42_varuint16, 42, $keyUint42), __tact_dict_get_uint_varuint32($self'uint42_varuint32, 42, $keyUint42), __tact_dict_get_uint_int($self'uint42_bool, 42, $keyUint42, 1), __tact_dict_get_uint_cell($self'uint42_cell, 42, $keyUint42), __tact_dict_get_uint_slice($self'uint42_address, 42, $keyUint42), $SomeStruct$_load_opt(__tact_dict_get_uint_cell($self'uint42_struct, 42, $keyUint42)), __tact_dict_get_uint_varint16($self'uint256_varint16, 256, $keyUint256), __tact_dict_get_uint_varint32($self'uint256_varint32, 256, $keyUint256), __tact_dict_get_uint_varuint16($self'uint256_varuint16, 256, $keyUint256), __tact_dict_get_uint_varuint32($self'uint256_varuint32, 256, $keyUint256), __tact_dict_get_uint_int($self'uint256_bool, 256, $keyUint256, 1), __tact_dict_get_uint_cell($self'uint256_cell, 256, $keyUint256), __tact_dict_get_uint_slice($self'uint256_address, 256, $keyUint256), $SomeStruct$_load_opt(__tact_dict_get_uint_cell($self'uint256_struct, 256, $keyUint256)), __tact_dict_get_slice_varint16($self'address_varint16, 267, $keyAddress), __tact_dict_get_slice_varint32($self'address_varint32, 267, $keyAddress), __tact_dict_get_slice_varuint16($self'address_varuint16, 267, $keyAddress), __tact_dict_get_slice_varuint32($self'address_varuint32, 267, $keyAddress), __tact_dict_get_slice_int($self'address_bool, 267, $keyAddress, 1), __tact_dict_get_slice_cell($self'address_cell, 267, $keyAddress), __tact_dict_get_slice_slice($self'address_address, 267, $keyAddress), $SomeStruct$_load_opt(__tact_dict_get_slice_cell($self'address_struct, 267, $keyAddress)));
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_499);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $MapTestContract$_fun_replaceAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress, int $valueVarint16, int $valueVarint32, int $valueVaruint16, int $valueVaruint32, int $valueBool, cell $valueCell, slice $valueAddress, (int, int, slice, int, int) $valueStruct) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    var (($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)) = $valueStruct;
    var $fresh$ret_500 = $ReplaceAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct($self'int_varint16~__tact_dict_replace_int_varint16(257, $keyInt, $valueVarint16), $self'int_varint32~__tact_dict_replace_int_varint32(257, $keyInt, $valueVarint32), $self'int_varuint16~__tact_dict_replace_int_varuint16(257, $keyInt, $valueVaruint16), $self'int_varuint32~__tact_dict_replace_int_varuint32(257, $keyInt, $valueVaruint32), $self'int_bool~__tact_dict_replace_int_int(257, $keyInt, $valueBool, 1), $self'int_cell~__tact_dict_replace_int_cell(257, $keyInt, $valueCell), $self'int_address~__tact_dict_replace_int_slice(257, $keyInt, $valueAddress), $self'int_struct~__tact_dict_replace_int_cell(257, $keyInt, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))), $self'int8_varint16~__tact_dict_replace_int_varint16(8, $keyInt8, $valueVarint16), $self'int8_varint32~__tact_dict_replace_int_varint32(8, $keyInt8, $valueVarint32), $self'int8_varuint16~__tact_dict_replace_int_varuint16(8, $keyInt8, $valueVaruint16), $self'int8_varuint32~__tact_dict_replace_int_varuint32(8, $keyInt8, $valueVaruint32), $self'int8_bool~__tact_dict_replace_int_int(8, $keyInt8, $valueBool, 1), $self'int8_cell~__tact_dict_replace_int_cell(8, $keyInt8, $valueCell), $self'int8_address~__tact_dict_replace_int_slice(8, $keyInt8, $valueAddress), $self'int8_struct~__tact_dict_replace_int_cell(8, $keyInt8, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))), $self'int42_varint16~__tact_dict_replace_int_varint16(42, $keyInt42, $valueVarint16), $self'int42_varint32~__tact_dict_replace_int_varint32(42, $keyInt42, $valueVarint32), $self'int42_varuint16~__tact_dict_replace_int_varuint16(42, $keyInt42, $valueVaruint16), $self'int42_varuint32~__tact_dict_replace_int_varuint32(42, $keyInt42, $valueVaruint32), $self'int42_bool~__tact_dict_replace_int_int(42, $keyInt42, $valueBool, 1), $self'int42_cell~__tact_dict_replace_int_cell(42, $keyInt42, $valueCell), $self'int42_address~__tact_dict_replace_int_slice(42, $keyInt42, $valueAddress), $self'int42_struct~__tact_dict_replace_int_cell(42, $keyInt42, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))), $self'int256_varint16~__tact_dict_replace_int_varint16(256, $keyInt256, $valueVarint16), $self'int256_varint32~__tact_dict_replace_int_varint32(256, $keyInt256, $valueVarint32), $self'int256_varuint16~__tact_dict_replace_int_varuint16(256, $keyInt256, $valueVaruint16), $self'int256_varuint32~__tact_dict_replace_int_varuint32(256, $keyInt256, $valueVaruint32), $self'int256_bool~__tact_dict_replace_int_int(256, $keyInt256, $valueBool, 1), $self'int256_cell~__tact_dict_replace_int_cell(256, $keyInt256, $valueCell), $self'int256_address~__tact_dict_replace_int_slice(256, $keyInt256, $valueAddress), $self'int256_struct~__tact_dict_replace_int_cell(256, $keyInt256, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))), $self'uint8_varint16~__tact_dict_replace_uint_varint16(8, $keyUint8, $valueVarint16), $self'uint8_varint32~__tact_dict_replace_uint_varint32(8, $keyUint8, $valueVarint32), $self'uint8_varuint16~__tact_dict_replace_uint_varuint16(8, $keyUint8, $valueVaruint16), $self'uint8_varuint32~__tact_dict_replace_uint_varuint32(8, $keyUint8, $valueVaruint32), $self'uint8_bool~__tact_dict_replace_uint_int(8, $keyUint8, $valueBool, 1), $self'uint8_cell~__tact_dict_replace_uint_cell(8, $keyUint8, $valueCell), $self'uint8_address~__tact_dict_replace_uint_slice(8, $keyUint8, $valueAddress), $self'uint8_struct~__tact_dict_replace_uint_cell(8, $keyUint8, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))), $self'uint42_varint16~__tact_dict_replace_uint_varint16(42, $keyUint42, $valueVarint16), $self'uint42_varint32~__tact_dict_replace_uint_varint32(42, $keyUint42, $valueVarint32), $self'uint42_varuint16~__tact_dict_replace_uint_varuint16(42, $keyUint42, $valueVaruint16), $self'uint42_varuint32~__tact_dict_replace_uint_varuint32(42, $keyUint42, $valueVaruint32), $self'uint42_bool~__tact_dict_replace_uint_int(42, $keyUint42, $valueBool, 1), $self'uint42_cell~__tact_dict_replace_uint_cell(42, $keyUint42, $valueCell), $self'uint42_address~__tact_dict_replace_uint_slice(42, $keyUint42, $valueAddress), $self'uint42_struct~__tact_dict_replace_uint_cell(42, $keyUint42, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))), $self'uint256_varint16~__tact_dict_replace_uint_varint16(256, $keyUint256, $valueVarint16), $self'uint256_varint32~__tact_dict_replace_uint_varint32(256, $keyUint256, $valueVarint32), $self'uint256_varuint16~__tact_dict_replace_uint_varuint16(256, $keyUint256, $valueVaruint16), $self'uint256_varuint32~__tact_dict_replace_uint_varuint32(256, $keyUint256, $valueVaruint32), $self'uint256_bool~__tact_dict_replace_uint_int(256, $keyUint256, $valueBool, 1), $self'uint256_cell~__tact_dict_replace_uint_cell(256, $keyUint256, $valueCell), $self'uint256_address~__tact_dict_replace_uint_slice(256, $keyUint256, $valueAddress), $self'uint256_struct~__tact_dict_replace_uint_cell(256, $keyUint256, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))), $self'address_varint16~__tact_dict_replace_slice_varint16(267, $keyAddress, $valueVarint16), $self'address_varint32~__tact_dict_replace_slice_varint32(267, $keyAddress, $valueVarint32), $self'address_varuint16~__tact_dict_replace_slice_varuint16(267, $keyAddress, $valueVaruint16), $self'address_varuint32~__tact_dict_replace_slice_varuint32(267, $keyAddress, $valueVaruint32), $self'address_bool~__tact_dict_replace_slice_int(267, $keyAddress, $valueBool, 1), $self'address_cell~__tact_dict_replace_slice_cell(267, $keyAddress, $valueCell), $self'address_address~__tact_dict_replace_slice_slice(267, $keyAddress, $valueAddress), $self'address_struct~__tact_dict_replace_slice_cell(267, $keyAddress, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b))));
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_500);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple, int, int, int, int, int, cell, slice, tuple)) $MapTestContract$_fun_replaceGetAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress, int $valueVarint16, int $valueVarint32, int $valueVaruint16, int $valueVaruint32, int $valueBool, cell $valueCell, slice $valueAddress, (int, int, slice, int, int) $valueStruct) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    var (($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)) = $valueStruct;
    var $fresh$ret_501 = $ReplaceGetAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct($self'int_varint16~__tact_dict_replaceget_int_varint16(257, $keyInt, $valueVarint16), $self'int_varint32~__tact_dict_replaceget_int_varint32(257, $keyInt, $valueVarint32), $self'int_varuint16~__tact_dict_replaceget_int_varuint16(257, $keyInt, $valueVaruint16), $self'int_varuint32~__tact_dict_replaceget_int_varuint32(257, $keyInt, $valueVaruint32), $self'int_bool~__tact_dict_replaceget_int_int(257, $keyInt, $valueBool, 1), $self'int_cell~__tact_dict_replaceget_int_cell(257, $keyInt, $valueCell), $self'int_address~__tact_dict_replaceget_int_slice(257, $keyInt, $valueAddress), $SomeStruct$_load_opt($self'int_struct~__tact_dict_replaceget_int_cell(257, $keyInt, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))), $self'int8_varint16~__tact_dict_replaceget_int_varint16(8, $keyInt8, $valueVarint16), $self'int8_varint32~__tact_dict_replaceget_int_varint32(8, $keyInt8, $valueVarint32), $self'int8_varuint16~__tact_dict_replaceget_int_varuint16(8, $keyInt8, $valueVaruint16), $self'int8_varuint32~__tact_dict_replaceget_int_varuint32(8, $keyInt8, $valueVaruint32), $self'int8_bool~__tact_dict_replaceget_int_int(8, $keyInt8, $valueBool, 1), $self'int8_cell~__tact_dict_replaceget_int_cell(8, $keyInt8, $valueCell), $self'int8_address~__tact_dict_replaceget_int_slice(8, $keyInt8, $valueAddress), $SomeStruct$_load_opt($self'int8_struct~__tact_dict_replaceget_int_cell(8, $keyInt8, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))), $self'int42_varint16~__tact_dict_replaceget_int_varint16(42, $keyInt42, $valueVarint16), $self'int42_varint32~__tact_dict_replaceget_int_varint32(42, $keyInt42, $valueVarint32), $self'int42_varuint16~__tact_dict_replaceget_int_varuint16(42, $keyInt42, $valueVaruint16), $self'int42_varuint32~__tact_dict_replaceget_int_varuint32(42, $keyInt42, $valueVaruint32), $self'int42_bool~__tact_dict_replaceget_int_int(42, $keyInt42, $valueBool, 1), $self'int42_cell~__tact_dict_replaceget_int_cell(42, $keyInt42, $valueCell), $self'int42_address~__tact_dict_replaceget_int_slice(42, $keyInt42, $valueAddress), $SomeStruct$_load_opt($self'int42_struct~__tact_dict_replaceget_int_cell(42, $keyInt42, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))), $self'int256_varint16~__tact_dict_replaceget_int_varint16(256, $keyInt256, $valueVarint16), $self'int256_varint32~__tact_dict_replaceget_int_varint32(256, $keyInt256, $valueVarint32), $self'int256_varuint16~__tact_dict_replaceget_int_varuint16(256, $keyInt256, $valueVaruint16), $self'int256_varuint32~__tact_dict_replaceget_int_varuint32(256, $keyInt256, $valueVaruint32), $self'int256_bool~__tact_dict_replaceget_int_int(256, $keyInt256, $valueBool, 1), $self'int256_cell~__tact_dict_replaceget_int_cell(256, $keyInt256, $valueCell), $self'int256_address~__tact_dict_replaceget_int_slice(256, $keyInt256, $valueAddress), $SomeStruct$_load_opt($self'int256_struct~__tact_dict_replaceget_int_cell(256, $keyInt256, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))), $self'uint8_varint16~__tact_dict_replaceget_uint_varint16(8, $keyUint8, $valueVarint16), $self'uint8_varint32~__tact_dict_replaceget_uint_varint32(8, $keyUint8, $valueVarint32), $self'uint8_varuint16~__tact_dict_replaceget_uint_varuint16(8, $keyUint8, $valueVaruint16), $self'uint8_varuint32~__tact_dict_replaceget_uint_varuint32(8, $keyUint8, $valueVaruint32), $self'uint8_bool~__tact_dict_replaceget_uint_int(8, $keyUint8, $valueBool, 1), $self'uint8_cell~__tact_dict_replaceget_uint_cell(8, $keyUint8, $valueCell), $self'uint8_address~__tact_dict_replaceget_uint_slice(8, $keyUint8, $valueAddress), $SomeStruct$_load_opt($self'uint8_struct~__tact_dict_replaceget_uint_cell(8, $keyUint8, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))), $self'uint42_varint16~__tact_dict_replaceget_uint_varint16(42, $keyUint42, $valueVarint16), $self'uint42_varint32~__tact_dict_replaceget_uint_varint32(42, $keyUint42, $valueVarint32), $self'uint42_varuint16~__tact_dict_replaceget_uint_varuint16(42, $keyUint42, $valueVaruint16), $self'uint42_varuint32~__tact_dict_replaceget_uint_varuint32(42, $keyUint42, $valueVaruint32), $self'uint42_bool~__tact_dict_replaceget_uint_int(42, $keyUint42, $valueBool, 1), $self'uint42_cell~__tact_dict_replaceget_uint_cell(42, $keyUint42, $valueCell), $self'uint42_address~__tact_dict_replaceget_uint_slice(42, $keyUint42, $valueAddress), $SomeStruct$_load_opt($self'uint42_struct~__tact_dict_replaceget_uint_cell(42, $keyUint42, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))), $self'uint256_varint16~__tact_dict_replaceget_uint_varint16(256, $keyUint256, $valueVarint16), $self'uint256_varint32~__tact_dict_replaceget_uint_varint32(256, $keyUint256, $valueVarint32), $self'uint256_varuint16~__tact_dict_replaceget_uint_varuint16(256, $keyUint256, $valueVaruint16), $self'uint256_varuint32~__tact_dict_replaceget_uint_varuint32(256, $keyUint256, $valueVaruint32), $self'uint256_bool~__tact_dict_replaceget_uint_int(256, $keyUint256, $valueBool, 1), $self'uint256_cell~__tact_dict_replaceget_uint_cell(256, $keyUint256, $valueCell), $self'uint256_address~__tact_dict_replaceget_uint_slice(256, $keyUint256, $valueAddress), $SomeStruct$_load_opt($self'uint256_struct~__tact_dict_replaceget_uint_cell(256, $keyUint256, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))), $self'address_varint16~__tact_dict_replaceget_slice_varint16(267, $keyAddress, $valueVarint16), $self'address_varint32~__tact_dict_replaceget_slice_varint32(267, $keyAddress, $valueVarint32), $self'address_varuint16~__tact_dict_replaceget_slice_varuint16(267, $keyAddress, $valueVaruint16), $self'address_varuint32~__tact_dict_replaceget_slice_varuint32(267, $keyAddress, $valueVaruint32), $self'address_bool~__tact_dict_replaceget_slice_int(267, $keyAddress, $valueBool, 1), $self'address_cell~__tact_dict_replaceget_slice_cell(267, $keyAddress, $valueCell), $self'address_address~__tact_dict_replaceget_slice_slice(267, $keyAddress, $valueAddress), $SomeStruct$_load_opt($self'address_struct~__tact_dict_replaceget_slice_cell(267, $keyAddress, $SomeStruct$_store_cell(($valueStruct'int, $valueStruct'bool, $valueStruct'address, $valueStruct'a, $valueStruct'b)))));
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_501);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $MapTestContract$_fun_existsAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self, int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    var $fresh$ret_502 = $ExistsAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(__tact_dict_exists_int($self'int_varint16, 257, $keyInt), __tact_dict_exists_int($self'int_varint32, 257, $keyInt), __tact_dict_exists_int($self'int_varuint16, 257, $keyInt), __tact_dict_exists_int($self'int_varuint32, 257, $keyInt), __tact_dict_exists_int($self'int_bool, 257, $keyInt), __tact_dict_exists_int($self'int_cell, 257, $keyInt), __tact_dict_exists_int($self'int_address, 257, $keyInt), __tact_dict_exists_int($self'int_struct, 257, $keyInt), __tact_dict_exists_int($self'int8_varint16, 8, $keyInt8), __tact_dict_exists_int($self'int8_varint32, 8, $keyInt8), __tact_dict_exists_int($self'int8_varuint16, 8, $keyInt8), __tact_dict_exists_int($self'int8_varuint32, 8, $keyInt8), __tact_dict_exists_int($self'int8_bool, 8, $keyInt8), __tact_dict_exists_int($self'int8_cell, 8, $keyInt8), __tact_dict_exists_int($self'int8_address, 8, $keyInt8), __tact_dict_exists_int($self'int8_struct, 8, $keyInt8), __tact_dict_exists_int($self'int42_varint16, 42, $keyInt42), __tact_dict_exists_int($self'int42_varint32, 42, $keyInt42), __tact_dict_exists_int($self'int42_varuint16, 42, $keyInt42), __tact_dict_exists_int($self'int42_varuint32, 42, $keyInt42), __tact_dict_exists_int($self'int42_bool, 42, $keyInt42), __tact_dict_exists_int($self'int42_cell, 42, $keyInt42), __tact_dict_exists_int($self'int42_address, 42, $keyInt42), __tact_dict_exists_int($self'int42_struct, 42, $keyInt42), __tact_dict_exists_int($self'int256_varint16, 256, $keyInt256), __tact_dict_exists_int($self'int256_varint32, 256, $keyInt256), __tact_dict_exists_int($self'int256_varuint16, 256, $keyInt256), __tact_dict_exists_int($self'int256_varuint32, 256, $keyInt256), __tact_dict_exists_int($self'int256_bool, 256, $keyInt256), __tact_dict_exists_int($self'int256_cell, 256, $keyInt256), __tact_dict_exists_int($self'int256_address, 256, $keyInt256), __tact_dict_exists_int($self'int256_struct, 256, $keyInt256), __tact_dict_exists_uint($self'uint8_varint16, 8, $keyUint8), __tact_dict_exists_uint($self'uint8_varint32, 8, $keyUint8), __tact_dict_exists_uint($self'uint8_varuint16, 8, $keyUint8), __tact_dict_exists_uint($self'uint8_varuint32, 8, $keyUint8), __tact_dict_exists_uint($self'uint8_bool, 8, $keyUint8), __tact_dict_exists_uint($self'uint8_cell, 8, $keyUint8), __tact_dict_exists_uint($self'uint8_address, 8, $keyUint8), __tact_dict_exists_uint($self'uint8_struct, 8, $keyUint8), __tact_dict_exists_uint($self'uint42_varint16, 42, $keyUint42), __tact_dict_exists_uint($self'uint42_varint32, 42, $keyUint42), __tact_dict_exists_uint($self'uint42_varuint16, 42, $keyUint42), __tact_dict_exists_uint($self'uint42_varuint32, 42, $keyUint42), __tact_dict_exists_uint($self'uint42_bool, 42, $keyUint42), __tact_dict_exists_uint($self'uint42_cell, 42, $keyUint42), __tact_dict_exists_uint($self'uint42_address, 42, $keyUint42), __tact_dict_exists_uint($self'uint42_struct, 42, $keyUint42), __tact_dict_exists_uint($self'uint256_varint16, 256, $keyUint256), __tact_dict_exists_uint($self'uint256_varint32, 256, $keyUint256), __tact_dict_exists_uint($self'uint256_varuint16, 256, $keyUint256), __tact_dict_exists_uint($self'uint256_varuint32, 256, $keyUint256), __tact_dict_exists_uint($self'uint256_bool, 256, $keyUint256), __tact_dict_exists_uint($self'uint256_cell, 256, $keyUint256), __tact_dict_exists_uint($self'uint256_address, 256, $keyUint256), __tact_dict_exists_uint($self'uint256_struct, 256, $keyUint256), __tact_dict_exists_slice($self'address_varint16, 267, $keyAddress), __tact_dict_exists_slice($self'address_varint32, 267, $keyAddress), __tact_dict_exists_slice($self'address_varuint16, 267, $keyAddress), __tact_dict_exists_slice($self'address_varuint32, 267, $keyAddress), __tact_dict_exists_slice($self'address_bool, 267, $keyAddress), __tact_dict_exists_slice($self'address_cell, 267, $keyAddress), __tact_dict_exists_slice($self'address_address, 267, $keyAddress), __tact_dict_exists_slice($self'address_struct, 267, $keyAddress));
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_502);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int)) $MapTestContract$_fun_isEmptyAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    var $fresh$ret_503 = $IsEmptyAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct(null?($self'int_varint16), null?($self'int_varint32), null?($self'int_varuint16), null?($self'int_varuint32), null?($self'int_bool), null?($self'int_cell), null?($self'int_address), null?($self'int_struct), null?($self'int8_varint16), null?($self'int8_varint32), null?($self'int8_varuint16), null?($self'int8_varuint32), null?($self'int8_bool), null?($self'int8_cell), null?($self'int8_address), null?($self'int8_struct), null?($self'int42_varint16), null?($self'int42_varint32), null?($self'int42_varuint16), null?($self'int42_varuint32), null?($self'int42_bool), null?($self'int42_cell), null?($self'int42_address), null?($self'int42_struct), null?($self'int256_varint16), null?($self'int256_varint32), null?($self'int256_varuint16), null?($self'int256_varuint32), null?($self'int256_bool), null?($self'int256_cell), null?($self'int256_address), null?($self'int256_struct), null?($self'uint8_varint16), null?($self'uint8_varint32), null?($self'uint8_varuint16), null?($self'uint8_varuint32), null?($self'uint8_bool), null?($self'uint8_cell), null?($self'uint8_address), null?($self'uint8_struct), null?($self'uint42_varint16), null?($self'uint42_varint32), null?($self'uint42_varuint16), null?($self'uint42_varuint32), null?($self'uint42_bool), null?($self'uint42_cell), null?($self'uint42_address), null?($self'uint42_struct), null?($self'uint256_varint16), null?($self'uint256_varint32), null?($self'uint256_varuint16), null?($self'uint256_varuint32), null?($self'uint256_bool), null?($self'uint256_cell), null?($self'uint256_address), null?($self'uint256_struct), null?($self'address_varint16), null?($self'address_varint32), null?($self'address_varuint16), null?($self'address_varuint32), null?($self'address_bool), null?($self'address_cell), null?($self'address_address), null?($self'address_struct));
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_503);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), (cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell)) $MapTestContract$_fun_asCellAllMaps((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    var $fresh$ret_504 = $AsCellAllMapsResult$_constructor_int_varint16_int_varint32_int_varuint16_int_varuint32_int_bool_int_cell_int_address_int_struct_int8_varint16_int8_varint32_int8_varuint16_int8_varuint32_int8_bool_int8_cell_int8_address_int8_struct_int42_varint16_int42_varint32_int42_varuint16_int42_varuint32_int42_bool_int42_cell_int42_address_int42_struct_int256_varint16_int256_varint32_int256_varuint16_int256_varuint32_int256_bool_int256_cell_int256_address_int256_struct_uint8_varint16_uint8_varint32_uint8_varuint16_uint8_varuint32_uint8_bool_uint8_cell_uint8_address_uint8_struct_uint42_varint16_uint42_varint32_uint42_varuint16_uint42_varuint32_uint42_bool_uint42_cell_uint42_address_uint42_struct_uint256_varint16_uint256_varint32_uint256_varuint16_uint256_varuint32_uint256_bool_uint256_cell_uint256_address_uint256_struct_address_varint16_address_varint32_address_varuint16_address_varuint32_address_bool_address_cell_address_address_address_struct($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct);
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_504);
}

((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell), int) $MapTestContract$_fun_checkNullReference((cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell, cell) $self) impure inline_ref {
    var (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct)) = $self;
    cell $m = null();
    var $fresh$ret_505 = __tact_not_null(__tact_dict_get_int_int($m, 257, 0, 257));
    return (($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct), $fresh$ret_505);
}

;;
;; Get methods of a Contract MapTestContract
;;

_ %allMaps() method_id(94363) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_allMaps();
    return $MapTestContract$_to_external(res);
}

_ %getAllMaps(int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress) method_id(96520) {
    int $keyInt = $keyInt;
    int $keyInt8 = $keyInt8;
    int $keyInt42 = $keyInt42;
    int $keyInt256 = $keyInt256;
    int $keyUint8 = $keyUint8;
    int $keyUint42 = $keyUint42;
    int $keyUint256 = $keyUint256;
    slice $keyAddress = $keyAddress;
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_getAllMaps($keyInt, $keyInt8, $keyInt42, $keyInt256, $keyUint8, $keyUint42, $keyUint256, $keyAddress);
    return $GetAllMapsResult$_to_external(res);
}

_ %replaceAllMaps(int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress, int $valueVarint16, int $valueVarint32, int $valueVaruint16, int $valueVaruint32, int $valueBool, cell $valueCell, slice $valueAddress, tuple $valueStruct) method_id(66237) {
    int $keyInt = $keyInt;
    int $keyInt8 = $keyInt8;
    int $keyInt42 = $keyInt42;
    int $keyInt256 = $keyInt256;
    int $keyUint8 = $keyUint8;
    int $keyUint42 = $keyUint42;
    int $keyUint256 = $keyUint256;
    slice $keyAddress = $keyAddress;
    int $valueVarint16 = $valueVarint16;
    int $valueVarint32 = $valueVarint32;
    int $valueVaruint16 = $valueVaruint16;
    int $valueVaruint32 = $valueVaruint32;
    int $valueBool = $valueBool;
    cell $valueCell = $valueCell;
    slice $valueAddress = $valueAddress;
    (int, int, slice, int, int) $valueStruct = $SomeStruct$_from_tuple($valueStruct);
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_replaceAllMaps($keyInt, $keyInt8, $keyInt42, $keyInt256, $keyUint8, $keyUint42, $keyUint256, $keyAddress, $valueVarint16, $valueVarint32, $valueVaruint16, $valueVaruint32, $valueBool, $valueCell, $valueAddress, $valueStruct);
    return $ReplaceAllMapsResult$_to_external(res);
}

_ %replaceGetAllMaps(int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress, int $valueVarint16, int $valueVarint32, int $valueVaruint16, int $valueVaruint32, int $valueBool, cell $valueCell, slice $valueAddress, tuple $valueStruct) method_id(90912) {
    int $keyInt = $keyInt;
    int $keyInt8 = $keyInt8;
    int $keyInt42 = $keyInt42;
    int $keyInt256 = $keyInt256;
    int $keyUint8 = $keyUint8;
    int $keyUint42 = $keyUint42;
    int $keyUint256 = $keyUint256;
    slice $keyAddress = $keyAddress;
    int $valueVarint16 = $valueVarint16;
    int $valueVarint32 = $valueVarint32;
    int $valueVaruint16 = $valueVaruint16;
    int $valueVaruint32 = $valueVaruint32;
    int $valueBool = $valueBool;
    cell $valueCell = $valueCell;
    slice $valueAddress = $valueAddress;
    (int, int, slice, int, int) $valueStruct = $SomeStruct$_from_tuple($valueStruct);
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_replaceGetAllMaps($keyInt, $keyInt8, $keyInt42, $keyInt256, $keyUint8, $keyUint42, $keyUint256, $keyAddress, $valueVarint16, $valueVarint32, $valueVaruint16, $valueVaruint32, $valueBool, $valueCell, $valueAddress, $valueStruct);
    return $ReplaceGetAllMapsResult$_to_external(res);
}

_ %existsAllMaps(int $keyInt, int $keyInt8, int $keyInt42, int $keyInt256, int $keyUint8, int $keyUint42, int $keyUint256, slice $keyAddress) method_id(66408) {
    int $keyInt = $keyInt;
    int $keyInt8 = $keyInt8;
    int $keyInt42 = $keyInt42;
    int $keyInt256 = $keyInt256;
    int $keyUint8 = $keyUint8;
    int $keyUint42 = $keyUint42;
    int $keyUint256 = $keyUint256;
    slice $keyAddress = $keyAddress;
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_existsAllMaps($keyInt, $keyInt8, $keyInt42, $keyInt256, $keyUint8, $keyUint42, $keyUint256, $keyAddress);
    return $ExistsAllMapsResult$_to_external(res);
}

_ %isEmptyAllMaps() method_id(98752) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_isEmptyAllMaps();
    return $IsEmptyAllMapsResult$_to_external(res);
}

_ %asCellAllMaps() method_id(117227) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_asCellAllMaps();
    return $AsCellAllMapsResult$_to_external(res);
}

_ %checkNullReference() method_id(70003) {
    var self = $MapTestContract$_contract_load();
    var res = self~$MapTestContract$_fun_checkNullReference();
    return res;
}

;; message opcode reader utility
;; Returns 32 bit message opcode, otherwise throws the "Invalid incoming message" exit code
(slice, int) ~load_opcode(slice s) asm( -> 1 0) "32 LDUQ 130 THROWIFNOT";
;;
;; Routing of a Contract MapTestContract
;;

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    cs~skip_bits(2);
    var msg_bounceable = cs~load_int(1);
    var msg_bounced = cs~load_int(1);
    slice msg_sender_addr = cs~load_msg_addr();
    __tact_context = (msg_bounceable, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var ($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct) = $MapTestContract$_contract_load();
    
    ;; Handle bounced messages
    if (msg_bounced) { return (); }
    int op = 0;
    int in_msg_length = slice_bits(in_msg);
    if (in_msg_length >= 32) {
        op = in_msg~load_uint(32);
    }
    ;; Receive SetAllMaps message
    if (op == 88242610) {
        var ($msg'keyInt, $msg'keyInt8, $msg'keyInt42, $msg'keyInt256, $msg'keyUint8, $msg'keyUint42, $msg'keyUint256, $msg'keyAddress, $msg'valueVarint16, $msg'valueVarint32, $msg'valueVaruint16, $msg'valueVaruint32, $msg'valueBool, $msg'valueCell, $msg'valueAddress, $msg'valueStruct) = in_msg~$SetAllMaps$_load_without_opcode();
        $self'int_varint16~__tact_dict_set_int_varint16(257, $msg'keyInt, $msg'valueVarint16);
        $self'int_varint32~__tact_dict_set_int_varint32(257, $msg'keyInt, $msg'valueVarint32);
        $self'int_varuint16~__tact_dict_set_int_varuint16(257, $msg'keyInt, $msg'valueVaruint16);
        $self'int_varuint32~__tact_dict_set_int_varuint32(257, $msg'keyInt, $msg'valueVaruint32);
        $self'int_bool~__tact_dict_set_int_int(257, $msg'keyInt, $msg'valueBool, 1);
        $self'int_cell~__tact_dict_set_int_cell(257, $msg'keyInt, $msg'valueCell);
        $self'int_address~__tact_dict_set_int_slice(257, $msg'keyInt, $msg'valueAddress);
        $self'int_struct~__tact_dict_set_int_cell(257, $msg'keyInt, $SomeStruct$_store_opt($msg'valueStruct));
        $self'int8_varint16~__tact_dict_set_int_varint16(8, $msg'keyInt8, $msg'valueVarint16);
        $self'int8_varint32~__tact_dict_set_int_varint32(8, $msg'keyInt8, $msg'valueVarint32);
        $self'int8_varuint16~__tact_dict_set_int_varuint16(8, $msg'keyInt8, $msg'valueVaruint16);
        $self'int8_varuint32~__tact_dict_set_int_varuint32(8, $msg'keyInt8, $msg'valueVaruint32);
        $self'int8_bool~__tact_dict_set_int_int(8, $msg'keyInt8, $msg'valueBool, 1);
        $self'int8_cell~__tact_dict_set_int_cell(8, $msg'keyInt8, $msg'valueCell);
        $self'int8_address~__tact_dict_set_int_slice(8, $msg'keyInt8, $msg'valueAddress);
        $self'int8_struct~__tact_dict_set_int_cell(8, $msg'keyInt8, $SomeStruct$_store_opt($msg'valueStruct));
        $self'int42_varint16~__tact_dict_set_int_varint16(42, $msg'keyInt42, $msg'valueVarint16);
        $self'int42_varint32~__tact_dict_set_int_varint32(42, $msg'keyInt42, $msg'valueVarint32);
        $self'int42_varuint16~__tact_dict_set_int_varuint16(42, $msg'keyInt42, $msg'valueVaruint16);
        $self'int42_varuint32~__tact_dict_set_int_varuint32(42, $msg'keyInt42, $msg'valueVaruint32);
        $self'int42_bool~__tact_dict_set_int_int(42, $msg'keyInt42, $msg'valueBool, 1);
        $self'int42_cell~__tact_dict_set_int_cell(42, $msg'keyInt42, $msg'valueCell);
        $self'int42_address~__tact_dict_set_int_slice(42, $msg'keyInt42, $msg'valueAddress);
        $self'int42_struct~__tact_dict_set_int_cell(42, $msg'keyInt42, $SomeStruct$_store_opt($msg'valueStruct));
        $self'int256_varint16~__tact_dict_set_int_varint16(256, $msg'keyInt256, $msg'valueVarint16);
        $self'int256_varint32~__tact_dict_set_int_varint32(256, $msg'keyInt256, $msg'valueVarint32);
        $self'int256_varuint16~__tact_dict_set_int_varuint16(256, $msg'keyInt256, $msg'valueVaruint16);
        $self'int256_varuint32~__tact_dict_set_int_varuint32(256, $msg'keyInt256, $msg'valueVaruint32);
        $self'int256_bool~__tact_dict_set_int_int(256, $msg'keyInt256, $msg'valueBool, 1);
        $self'int256_cell~__tact_dict_set_int_cell(256, $msg'keyInt256, $msg'valueCell);
        $self'int256_address~__tact_dict_set_int_slice(256, $msg'keyInt256, $msg'valueAddress);
        $self'int256_struct~__tact_dict_set_int_cell(256, $msg'keyInt256, $SomeStruct$_store_opt($msg'valueStruct));
        $self'uint8_varint16~__tact_dict_set_uint_varint16(8, $msg'keyUint8, $msg'valueVarint16);
        $self'uint8_varint32~__tact_dict_set_uint_varint32(8, $msg'keyUint8, $msg'valueVarint32);
        $self'uint8_varuint16~__tact_dict_set_uint_varuint16(8, $msg'keyUint8, $msg'valueVaruint16);
        $self'uint8_varuint32~__tact_dict_set_uint_varuint32(8, $msg'keyUint8, $msg'valueVaruint32);
        $self'uint8_bool~__tact_dict_set_uint_int(8, $msg'keyUint8, $msg'valueBool, 1);
        $self'uint8_cell~__tact_dict_set_uint_cell(8, $msg'keyUint8, $msg'valueCell);
        $self'uint8_address~__tact_dict_set_uint_slice(8, $msg'keyUint8, $msg'valueAddress);
        $self'uint8_struct~__tact_dict_set_uint_cell(8, $msg'keyUint8, $SomeStruct$_store_opt($msg'valueStruct));
        $self'uint42_varint16~__tact_dict_set_uint_varint16(42, $msg'keyUint42, $msg'valueVarint16);
        $self'uint42_varint32~__tact_dict_set_uint_varint32(42, $msg'keyUint42, $msg'valueVarint32);
        $self'uint42_varuint16~__tact_dict_set_uint_varuint16(42, $msg'keyUint42, $msg'valueVaruint16);
        $self'uint42_varuint32~__tact_dict_set_uint_varuint32(42, $msg'keyUint42, $msg'valueVaruint32);
        $self'uint42_bool~__tact_dict_set_uint_int(42, $msg'keyUint42, $msg'valueBool, 1);
        $self'uint42_cell~__tact_dict_set_uint_cell(42, $msg'keyUint42, $msg'valueCell);
        $self'uint42_address~__tact_dict_set_uint_slice(42, $msg'keyUint42, $msg'valueAddress);
        $self'uint42_struct~__tact_dict_set_uint_cell(42, $msg'keyUint42, $SomeStruct$_store_opt($msg'valueStruct));
        $self'uint256_varint16~__tact_dict_set_uint_varint16(256, $msg'keyUint256, $msg'valueVarint16);
        $self'uint256_varint32~__tact_dict_set_uint_varint32(256, $msg'keyUint256, $msg'valueVarint32);
        $self'uint256_varuint16~__tact_dict_set_uint_varuint16(256, $msg'keyUint256, $msg'valueVaruint16);
        $self'uint256_varuint32~__tact_dict_set_uint_varuint32(256, $msg'keyUint256, $msg'valueVaruint32);
        $self'uint256_bool~__tact_dict_set_uint_int(256, $msg'keyUint256, $msg'valueBool, 1);
        $self'uint256_cell~__tact_dict_set_uint_cell(256, $msg'keyUint256, $msg'valueCell);
        $self'uint256_address~__tact_dict_set_uint_slice(256, $msg'keyUint256, $msg'valueAddress);
        $self'uint256_struct~__tact_dict_set_uint_cell(256, $msg'keyUint256, $SomeStruct$_store_opt($msg'valueStruct));
        $self'address_varint16~__tact_dict_set_slice_varint16(267, $msg'keyAddress, $msg'valueVarint16);
        $self'address_varint32~__tact_dict_set_slice_varint32(267, $msg'keyAddress, $msg'valueVarint32);
        $self'address_varuint16~__tact_dict_set_slice_varuint16(267, $msg'keyAddress, $msg'valueVaruint16);
        $self'address_varuint32~__tact_dict_set_slice_varuint32(267, $msg'keyAddress, $msg'valueVaruint32);
        $self'address_bool~__tact_dict_set_slice_int(267, $msg'keyAddress, $msg'valueBool, 1);
        $self'address_cell~__tact_dict_set_slice_cell(267, $msg'keyAddress, $msg'valueCell);
        $self'address_address~__tact_dict_set_slice_slice(267, $msg'keyAddress, $msg'valueAddress);
        $self'address_struct~__tact_dict_set_slice_cell(267, $msg'keyAddress, $SomeStruct$_store_opt($msg'valueStruct));
        ;; Persist state
        $MapTestContract$_contract_store(($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct));
        return ();
    }
    
    ;; Receive DelAllMaps message
    if (op == 1261158015) {
        var ($msg'keyInt, $msg'keyInt8, $msg'keyInt42, $msg'keyInt256, $msg'keyUint8, $msg'keyUint42, $msg'keyUint256, $msg'keyAddress) = in_msg~$DelAllMaps$_load_without_opcode();
        $self'int_varint16~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int_varint32~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int_varuint16~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int_varuint32~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int_bool~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int_cell~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int_address~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int_struct~__tact_dict_delete_int(257, $msg'keyInt);
        $self'int8_varint16~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int8_varint32~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int8_varuint16~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int8_varuint32~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int8_bool~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int8_cell~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int8_address~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int8_struct~__tact_dict_delete_int(8, $msg'keyInt8);
        $self'int42_varint16~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int42_varint32~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int42_varuint16~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int42_varuint32~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int42_bool~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int42_cell~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int42_address~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int42_struct~__tact_dict_delete_int(42, $msg'keyInt42);
        $self'int256_varint16~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'int256_varint32~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'int256_varuint16~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'int256_varuint32~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'int256_bool~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'int256_cell~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'int256_address~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'int256_struct~__tact_dict_delete_int(256, $msg'keyInt256);
        $self'uint8_varint16~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint8_varint32~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint8_varuint16~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint8_varuint32~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint8_bool~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint8_cell~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint8_address~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint8_struct~__tact_dict_delete_uint(8, $msg'keyUint8);
        $self'uint42_varint16~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint42_varint32~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint42_varuint16~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint42_varuint32~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint42_bool~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint42_cell~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint42_address~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint42_struct~__tact_dict_delete_uint(42, $msg'keyUint42);
        $self'uint256_varint16~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'uint256_varint32~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'uint256_varuint16~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'uint256_varuint32~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'uint256_bool~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'uint256_cell~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'uint256_address~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'uint256_struct~__tact_dict_delete_uint(256, $msg'keyUint256);
        $self'address_varint16~__tact_dict_delete(267, $msg'keyAddress);
        $self'address_varint32~__tact_dict_delete(267, $msg'keyAddress);
        $self'address_varuint16~__tact_dict_delete(267, $msg'keyAddress);
        $self'address_varuint32~__tact_dict_delete(267, $msg'keyAddress);
        $self'address_bool~__tact_dict_delete(267, $msg'keyAddress);
        $self'address_cell~__tact_dict_delete(267, $msg'keyAddress);
        $self'address_address~__tact_dict_delete(267, $msg'keyAddress);
        $self'address_struct~__tact_dict_delete(267, $msg'keyAddress);
        ;; Persist state
        $MapTestContract$_contract_store(($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct));
        return ();
    }
    
    ;; Receive ReplaceAllMaps message
    if (op == 3909681767) {
        var ($msg'keyInt, $msg'keyInt8, $msg'keyInt42, $msg'keyInt256, $msg'keyUint8, $msg'keyUint42, $msg'keyUint256, $msg'keyAddress, $msg'valueVarint16, $msg'valueVarint32, $msg'valueVaruint16, $msg'valueVaruint32, $msg'valueBool, $msg'valueCell, $msg'valueAddress, $msg'valueStruct) = in_msg~$ReplaceAllMaps$_load_without_opcode();
        $self'int_varint16~__tact_dict_replace_int_varint16(257, $msg'keyInt, $msg'valueVarint16);
        $self'int_varint32~__tact_dict_replace_int_varint32(257, $msg'keyInt, $msg'valueVarint32);
        $self'int_varuint16~__tact_dict_replace_int_varuint16(257, $msg'keyInt, $msg'valueVaruint16);
        $self'int_varuint32~__tact_dict_replace_int_varuint32(257, $msg'keyInt, $msg'valueVaruint32);
        $self'int_bool~__tact_dict_replace_int_int(257, $msg'keyInt, $msg'valueBool, 1);
        $self'int_cell~__tact_dict_replace_int_cell(257, $msg'keyInt, $msg'valueCell);
        $self'int_address~__tact_dict_replace_int_slice(257, $msg'keyInt, $msg'valueAddress);
        $self'int_struct~__tact_dict_replace_int_cell(257, $msg'keyInt, $SomeStruct$_store_opt($msg'valueStruct));
        $self'int8_varint16~__tact_dict_replace_int_varint16(8, $msg'keyInt8, $msg'valueVarint16);
        $self'int8_varint32~__tact_dict_replace_int_varint32(8, $msg'keyInt8, $msg'valueVarint32);
        $self'int8_varuint16~__tact_dict_replace_int_varuint16(8, $msg'keyInt8, $msg'valueVaruint16);
        $self'int8_varuint32~__tact_dict_replace_int_varuint32(8, $msg'keyInt8, $msg'valueVaruint32);
        $self'int8_bool~__tact_dict_replace_int_int(8, $msg'keyInt8, $msg'valueBool, 1);
        $self'int8_cell~__tact_dict_replace_int_cell(8, $msg'keyInt8, $msg'valueCell);
        $self'int8_address~__tact_dict_replace_int_slice(8, $msg'keyInt8, $msg'valueAddress);
        $self'int8_struct~__tact_dict_replace_int_cell(8, $msg'keyInt8, $SomeStruct$_store_opt($msg'valueStruct));
        $self'int42_varint16~__tact_dict_replace_int_varint16(42, $msg'keyInt42, $msg'valueVarint16);
        $self'int42_varint32~__tact_dict_replace_int_varint32(42, $msg'keyInt42, $msg'valueVarint32);
        $self'int42_varuint16~__tact_dict_replace_int_varuint16(42, $msg'keyInt42, $msg'valueVaruint16);
        $self'int42_varuint32~__tact_dict_replace_int_varuint32(42, $msg'keyInt42, $msg'valueVaruint32);
        $self'int42_bool~__tact_dict_replace_int_int(42, $msg'keyInt42, $msg'valueBool, 1);
        $self'int42_cell~__tact_dict_replace_int_cell(42, $msg'keyInt42, $msg'valueCell);
        $self'int42_address~__tact_dict_replace_int_slice(42, $msg'keyInt42, $msg'valueAddress);
        $self'int42_struct~__tact_dict_replace_int_cell(42, $msg'keyInt42, $SomeStruct$_store_opt($msg'valueStruct));
        $self'int256_varint16~__tact_dict_replace_int_varint16(256, $msg'keyInt256, $msg'valueVarint16);
        $self'int256_varint32~__tact_dict_replace_int_varint32(256, $msg'keyInt256, $msg'valueVarint32);
        $self'int256_varuint16~__tact_dict_replace_int_varuint16(256, $msg'keyInt256, $msg'valueVaruint16);
        $self'int256_varuint32~__tact_dict_replace_int_varuint32(256, $msg'keyInt256, $msg'valueVaruint32);
        $self'int256_bool~__tact_dict_replace_int_int(256, $msg'keyInt256, $msg'valueBool, 1);
        $self'int256_cell~__tact_dict_replace_int_cell(256, $msg'keyInt256, $msg'valueCell);
        $self'int256_address~__tact_dict_replace_int_slice(256, $msg'keyInt256, $msg'valueAddress);
        $self'int256_struct~__tact_dict_replace_int_cell(256, $msg'keyInt256, $SomeStruct$_store_opt($msg'valueStruct));
        $self'uint8_varint16~__tact_dict_replace_uint_varint16(8, $msg'keyUint8, $msg'valueVarint16);
        $self'uint8_varint32~__tact_dict_replace_uint_varint32(8, $msg'keyUint8, $msg'valueVarint32);
        $self'uint8_varuint16~__tact_dict_replace_uint_varuint16(8, $msg'keyUint8, $msg'valueVaruint16);
        $self'uint8_varuint32~__tact_dict_replace_uint_varuint32(8, $msg'keyUint8, $msg'valueVaruint32);
        $self'uint8_bool~__tact_dict_replace_uint_int(8, $msg'keyUint8, $msg'valueBool, 1);
        $self'uint8_cell~__tact_dict_replace_uint_cell(8, $msg'keyUint8, $msg'valueCell);
        $self'uint8_address~__tact_dict_replace_uint_slice(8, $msg'keyUint8, $msg'valueAddress);
        $self'uint8_struct~__tact_dict_replace_uint_cell(8, $msg'keyUint8, $SomeStruct$_store_opt($msg'valueStruct));
        $self'uint42_varint16~__tact_dict_replace_uint_varint16(42, $msg'keyUint42, $msg'valueVarint16);
        $self'uint42_varint32~__tact_dict_replace_uint_varint32(42, $msg'keyUint42, $msg'valueVarint32);
        $self'uint42_varuint16~__tact_dict_replace_uint_varuint16(42, $msg'keyUint42, $msg'valueVaruint16);
        $self'uint42_varuint32~__tact_dict_replace_uint_varuint32(42, $msg'keyUint42, $msg'valueVaruint32);
        $self'uint42_bool~__tact_dict_replace_uint_int(42, $msg'keyUint42, $msg'valueBool, 1);
        $self'uint42_cell~__tact_dict_replace_uint_cell(42, $msg'keyUint42, $msg'valueCell);
        $self'uint42_address~__tact_dict_replace_uint_slice(42, $msg'keyUint42, $msg'valueAddress);
        $self'uint42_struct~__tact_dict_replace_uint_cell(42, $msg'keyUint42, $SomeStruct$_store_opt($msg'valueStruct));
        $self'uint256_varint16~__tact_dict_replace_uint_varint16(256, $msg'keyUint256, $msg'valueVarint16);
        $self'uint256_varint32~__tact_dict_replace_uint_varint32(256, $msg'keyUint256, $msg'valueVarint32);
        $self'uint256_varuint16~__tact_dict_replace_uint_varuint16(256, $msg'keyUint256, $msg'valueVaruint16);
        $self'uint256_varuint32~__tact_dict_replace_uint_varuint32(256, $msg'keyUint256, $msg'valueVaruint32);
        $self'uint256_bool~__tact_dict_replace_uint_int(256, $msg'keyUint256, $msg'valueBool, 1);
        $self'uint256_cell~__tact_dict_replace_uint_cell(256, $msg'keyUint256, $msg'valueCell);
        $self'uint256_address~__tact_dict_replace_uint_slice(256, $msg'keyUint256, $msg'valueAddress);
        $self'uint256_struct~__tact_dict_replace_uint_cell(256, $msg'keyUint256, $SomeStruct$_store_opt($msg'valueStruct));
        $self'address_varint16~__tact_dict_replace_slice_varint16(267, $msg'keyAddress, $msg'valueVarint16);
        $self'address_varint32~__tact_dict_replace_slice_varint32(267, $msg'keyAddress, $msg'valueVarint32);
        $self'address_varuint16~__tact_dict_replace_slice_varuint16(267, $msg'keyAddress, $msg'valueVaruint16);
        $self'address_varuint32~__tact_dict_replace_slice_varuint32(267, $msg'keyAddress, $msg'valueVaruint32);
        $self'address_bool~__tact_dict_replace_slice_int(267, $msg'keyAddress, $msg'valueBool, 1);
        $self'address_cell~__tact_dict_replace_slice_cell(267, $msg'keyAddress, $msg'valueCell);
        $self'address_address~__tact_dict_replace_slice_slice(267, $msg'keyAddress, $msg'valueAddress);
        $self'address_struct~__tact_dict_replace_slice_cell(267, $msg'keyAddress, $SomeStruct$_store_opt($msg'valueStruct));
        ;; Persist state
        $MapTestContract$_contract_store(($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct));
        return ();
    }
    
    ;; Receive ReplaceGetAllMaps message
    if (op == 1054468049) {
        var ($msg'keyInt, $msg'keyInt8, $msg'keyInt42, $msg'keyInt256, $msg'keyUint8, $msg'keyUint42, $msg'keyUint256, $msg'keyAddress, $msg'valueVarint16, $msg'valueVarint32, $msg'valueVaruint16, $msg'valueVaruint32, $msg'valueBool, $msg'valueCell, $msg'valueAddress, $msg'valueStruct) = in_msg~$ReplaceGetAllMaps$_load_without_opcode();
        $self'int_varint16~__tact_dict_replaceget_int_varint16(257, $msg'keyInt, $msg'valueVarint16);
        $self'int_varint32~__tact_dict_replaceget_int_varint32(257, $msg'keyInt, $msg'valueVarint32);
        $self'int_varuint16~__tact_dict_replaceget_int_varuint16(257, $msg'keyInt, $msg'valueVaruint16);
        $self'int_varuint32~__tact_dict_replaceget_int_varuint32(257, $msg'keyInt, $msg'valueVaruint32);
        $self'int_bool~__tact_dict_replaceget_int_int(257, $msg'keyInt, $msg'valueBool, 1);
        $self'int_cell~__tact_dict_replaceget_int_cell(257, $msg'keyInt, $msg'valueCell);
        $self'int_address~__tact_dict_replaceget_int_slice(257, $msg'keyInt, $msg'valueAddress);
        $SomeStruct$_load_opt($self'int_struct~__tact_dict_replaceget_int_cell(257, $msg'keyInt, $SomeStruct$_store_opt($msg'valueStruct)));
        $self'int8_varint16~__tact_dict_replaceget_int_varint16(8, $msg'keyInt8, $msg'valueVarint16);
        $self'int8_varint32~__tact_dict_replaceget_int_varint32(8, $msg'keyInt8, $msg'valueVarint32);
        $self'int8_varuint16~__tact_dict_replaceget_int_varuint16(8, $msg'keyInt8, $msg'valueVaruint16);
        $self'int8_varuint32~__tact_dict_replaceget_int_varuint32(8, $msg'keyInt8, $msg'valueVaruint32);
        $self'int8_bool~__tact_dict_replaceget_int_int(8, $msg'keyInt8, $msg'valueBool, 1);
        $self'int8_cell~__tact_dict_replaceget_int_cell(8, $msg'keyInt8, $msg'valueCell);
        $self'int8_address~__tact_dict_replaceget_int_slice(8, $msg'keyInt8, $msg'valueAddress);
        $SomeStruct$_load_opt($self'int8_struct~__tact_dict_replaceget_int_cell(8, $msg'keyInt8, $SomeStruct$_store_opt($msg'valueStruct)));
        $self'int42_varint16~__tact_dict_replaceget_int_varint16(42, $msg'keyInt42, $msg'valueVarint16);
        $self'int42_varint32~__tact_dict_replaceget_int_varint32(42, $msg'keyInt42, $msg'valueVarint32);
        $self'int42_varuint16~__tact_dict_replaceget_int_varuint16(42, $msg'keyInt42, $msg'valueVaruint16);
        $self'int42_varuint32~__tact_dict_replaceget_int_varuint32(42, $msg'keyInt42, $msg'valueVaruint32);
        $self'int42_bool~__tact_dict_replaceget_int_int(42, $msg'keyInt42, $msg'valueBool, 1);
        $self'int42_cell~__tact_dict_replaceget_int_cell(42, $msg'keyInt42, $msg'valueCell);
        $self'int42_address~__tact_dict_replaceget_int_slice(42, $msg'keyInt42, $msg'valueAddress);
        $SomeStruct$_load_opt($self'int42_struct~__tact_dict_replaceget_int_cell(42, $msg'keyInt42, $SomeStruct$_store_opt($msg'valueStruct)));
        $self'int256_varint16~__tact_dict_replaceget_int_varint16(256, $msg'keyInt256, $msg'valueVarint16);
        $self'int256_varint32~__tact_dict_replaceget_int_varint32(256, $msg'keyInt256, $msg'valueVarint32);
        $self'int256_varuint16~__tact_dict_replaceget_int_varuint16(256, $msg'keyInt256, $msg'valueVaruint16);
        $self'int256_varuint32~__tact_dict_replaceget_int_varuint32(256, $msg'keyInt256, $msg'valueVaruint32);
        $self'int256_bool~__tact_dict_replaceget_int_int(256, $msg'keyInt256, $msg'valueBool, 1);
        $self'int256_cell~__tact_dict_replaceget_int_cell(256, $msg'keyInt256, $msg'valueCell);
        $self'int256_address~__tact_dict_replaceget_int_slice(256, $msg'keyInt256, $msg'valueAddress);
        $SomeStruct$_load_opt($self'int256_struct~__tact_dict_replaceget_int_cell(256, $msg'keyInt256, $SomeStruct$_store_opt($msg'valueStruct)));
        $self'uint8_varint16~__tact_dict_replaceget_uint_varint16(8, $msg'keyUint8, $msg'valueVarint16);
        $self'uint8_varint32~__tact_dict_replaceget_uint_varint32(8, $msg'keyUint8, $msg'valueVarint32);
        $self'uint8_varuint16~__tact_dict_replaceget_uint_varuint16(8, $msg'keyUint8, $msg'valueVaruint16);
        $self'uint8_varuint32~__tact_dict_replaceget_uint_varuint32(8, $msg'keyUint8, $msg'valueVaruint32);
        $self'uint8_bool~__tact_dict_replaceget_uint_int(8, $msg'keyUint8, $msg'valueBool, 1);
        $self'uint8_cell~__tact_dict_replaceget_uint_cell(8, $msg'keyUint8, $msg'valueCell);
        $self'uint8_address~__tact_dict_replaceget_uint_slice(8, $msg'keyUint8, $msg'valueAddress);
        $SomeStruct$_load_opt($self'uint8_struct~__tact_dict_replaceget_uint_cell(8, $msg'keyUint8, $SomeStruct$_store_opt($msg'valueStruct)));
        $self'uint42_varint16~__tact_dict_replaceget_uint_varint16(42, $msg'keyUint42, $msg'valueVarint16);
        $self'uint42_varint32~__tact_dict_replaceget_uint_varint32(42, $msg'keyUint42, $msg'valueVarint32);
        $self'uint42_varuint16~__tact_dict_replaceget_uint_varuint16(42, $msg'keyUint42, $msg'valueVaruint16);
        $self'uint42_varuint32~__tact_dict_replaceget_uint_varuint32(42, $msg'keyUint42, $msg'valueVaruint32);
        $self'uint42_bool~__tact_dict_replaceget_uint_int(42, $msg'keyUint42, $msg'valueBool, 1);
        $self'uint42_cell~__tact_dict_replaceget_uint_cell(42, $msg'keyUint42, $msg'valueCell);
        $self'uint42_address~__tact_dict_replaceget_uint_slice(42, $msg'keyUint42, $msg'valueAddress);
        $SomeStruct$_load_opt($self'uint42_struct~__tact_dict_replaceget_uint_cell(42, $msg'keyUint42, $SomeStruct$_store_opt($msg'valueStruct)));
        $self'uint256_varint16~__tact_dict_replaceget_uint_varint16(256, $msg'keyUint256, $msg'valueVarint16);
        $self'uint256_varint32~__tact_dict_replaceget_uint_varint32(256, $msg'keyUint256, $msg'valueVarint32);
        $self'uint256_varuint16~__tact_dict_replaceget_uint_varuint16(256, $msg'keyUint256, $msg'valueVaruint16);
        $self'uint256_varuint32~__tact_dict_replaceget_uint_varuint32(256, $msg'keyUint256, $msg'valueVaruint32);
        $self'uint256_bool~__tact_dict_replaceget_uint_int(256, $msg'keyUint256, $msg'valueBool, 1);
        $self'uint256_cell~__tact_dict_replaceget_uint_cell(256, $msg'keyUint256, $msg'valueCell);
        $self'uint256_address~__tact_dict_replaceget_uint_slice(256, $msg'keyUint256, $msg'valueAddress);
        $SomeStruct$_load_opt($self'uint256_struct~__tact_dict_replaceget_uint_cell(256, $msg'keyUint256, $SomeStruct$_store_opt($msg'valueStruct)));
        $self'address_varint16~__tact_dict_replaceget_slice_varint16(267, $msg'keyAddress, $msg'valueVarint16);
        $self'address_varint32~__tact_dict_replaceget_slice_varint32(267, $msg'keyAddress, $msg'valueVarint32);
        $self'address_varuint16~__tact_dict_replaceget_slice_varuint16(267, $msg'keyAddress, $msg'valueVaruint16);
        $self'address_varuint32~__tact_dict_replaceget_slice_varuint32(267, $msg'keyAddress, $msg'valueVaruint32);
        $self'address_bool~__tact_dict_replaceget_slice_int(267, $msg'keyAddress, $msg'valueBool, 1);
        $self'address_cell~__tact_dict_replaceget_slice_cell(267, $msg'keyAddress, $msg'valueCell);
        $self'address_address~__tact_dict_replaceget_slice_slice(267, $msg'keyAddress, $msg'valueAddress);
        $SomeStruct$_load_opt($self'address_struct~__tact_dict_replaceget_slice_cell(267, $msg'keyAddress, $SomeStruct$_store_opt($msg'valueStruct)));
        ;; Persist state
        $MapTestContract$_contract_store(($self'int_varint16, $self'int_varint32, $self'int_varuint16, $self'int_varuint32, $self'int_bool, $self'int_cell, $self'int_address, $self'int_struct, $self'int8_varint16, $self'int8_varint32, $self'int8_varuint16, $self'int8_varuint32, $self'int8_bool, $self'int8_cell, $self'int8_address, $self'int8_struct, $self'int42_varint16, $self'int42_varint32, $self'int42_varuint16, $self'int42_varuint32, $self'int42_bool, $self'int42_cell, $self'int42_address, $self'int42_struct, $self'int256_varint16, $self'int256_varint32, $self'int256_varuint16, $self'int256_varuint32, $self'int256_bool, $self'int256_cell, $self'int256_address, $self'int256_struct, $self'uint8_varint16, $self'uint8_varint32, $self'uint8_varuint16, $self'uint8_varuint32, $self'uint8_bool, $self'uint8_cell, $self'uint8_address, $self'uint8_struct, $self'uint42_varint16, $self'uint42_varint32, $self'uint42_varuint16, $self'uint42_varuint32, $self'uint42_bool, $self'uint42_cell, $self'uint42_address, $self'uint42_struct, $self'uint256_varint16, $self'uint256_varint32, $self'uint256_varuint16, $self'uint256_varuint32, $self'uint256_bool, $self'uint256_cell, $self'uint256_address, $self'uint256_struct, $self'address_varint16, $self'address_varint32, $self'address_varuint16, $self'address_varuint32, $self'address_bool, $self'address_cell, $self'address_address, $self'address_struct));
        return ();
    }
    
    ;; Receive CheckNullReference message
    if (op == 2978152160) {
        var $msg = in_msg~$CheckNullReference$_load_without_opcode();
        cell $m = null();
        __tact_not_null(__tact_dict_get_int_int($m, 257, 0, 257));
        return ();
    }
    
    ;; Receive empty message
    if ((op == 0) & (in_msg_length <= 32)) {
        return ();
    }
    ;; Throw if not handled
    throw(130);
}

() __tact_selector_hack_asm() impure asm """
@atend @ 1 {
    execute current@ context@ current!
    {
        }END> b>
        
        <{
            SETCP0 DUP
            IFNOTJMP:<{
                DROP over <s ref@ 0 swap @procdictkeylen idict@ { "internal shortcut error" abort } ifnot @addop
            }>
swap <s ref@
            0 swap @procdictkeylen idict- drop
            -1 swap @procdictkeylen idict- drop
            65535 swap @procdictkeylen idict- drop

            @procdictkeylen DICTPUSHCONST DICTIGETJMPZ 11 THROWARG
        }> b>
    } : }END>c
    current@ context! current!
} does @atend !
""";
() __tact_selector_hack() method_id(65535) {
    return __tact_selector_hack_asm();
}