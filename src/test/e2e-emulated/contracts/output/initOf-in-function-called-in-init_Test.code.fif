// automatically generated from `@stdlib/std/stdlib.fc` `@stdlib/std/stdlib_ex.fc` `/home/benji/proj/ton/tact/src/test/e2e-emulated/contracts/output/initOf-in-function-called-in-init_Test.code.fc` 
PROGRAM{
  DECLPROC __tact_sha256
  DECLPROC $Test$_load
  DECLPROC $MasterV0$init$_store
  DECLPROC $Cell$_fun_asSlice
  DECLPROC $global_newAddress
  DECLPROC $global_contractAddressExt
  DECLPROC $global_contractAddress
  DECLPROC $MasterV0$_init_child
  DECLPROC $global_master_addr
  DECLPROC $Test$_contract_init
  DECLPROC $Test$_contract_load
  DECLPROC $Test$_fun_owner
  83229 DECLMETHOD %owner
  DECLPROC recv_internal
  65535 DECLMETHOD __tact_selector_hack
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_child_contract_codes
  DECLGLOBVAR __tact_randomized
  __tact_sha256 PROC:<{
    ONE
    WHILE:<{
      OVER SREFS 0 NEQINT
    }>DO<{
      OVER LDREF s0 POP CTOS s0 s1 XCHG INC
    }>
    HASHEXT_SHA256
  }>
  $Test$_load PROCINLINE:<{
    LDMSGADDR
    SWAP
  }>
  $MasterV0$init$_store PROCINLINE:<{
    DROP
  }>
  $Cell$_fun_asSlice PROCINLINE:<{
        CTOS
  }>
  $global_newAddress PROCINLINE:<{
        NEWC
    4 PUSHINT
    SWAP
    3 STU
    s1 s2 XCHG
    8 STI
    256 STU
        ENDC
    $Cell$_fun_asSlice INLINECALLDICT
  }>
  $global_contractAddressExt PROCINLINE:<{
        s0 PUSH HASHCU // `data` hash
        s2 PUSH HASHCU // `code` hash
        SWAP2
        CDEPTH         // `data` depth
        SWAP
        CDEPTH         // `code` depth
        131380 INT     // (2 << 16) | (1 << 8) | 0x34
        // Group 2: Composition of the Builder
        NEWC
        24 STU  // store refs_descriptor | bits_descriptor | data
        16 STU  // store depth_descriptor for `code`
        16 STU  // store depth_descriptor for `data`
        256 STU // store `code` hash
        256 STU // store `data` hash
        // Group 3: SHA256 hash of the resulting Builder
        ONE HASHEXT_SHA256
    $global_newAddress INLINECALLDICT
  }>
  $global_contractAddress PROCINLINE:<{
    0 PUSHINT
    -ROT
    $global_contractAddressExt INLINECALLDICT
  }>
  $MasterV0$_init_child PROCINLINE:<{
        B{b5ee9c7201010301005f00017aff00208e2f3030d072d721d200d200fa4021103450556f04f86101f862ed44d0d2000197810101d7000131923070e230dcf2c082e1f4a413f4bcf2c80b010131a64bc57b513434800065e0404075c0004c648c1c38b6cf0c6002000220} B>boc PUSHREF
    NEWC
    FALSE
    SWAP
    1 STI
    PUSHNULL
    $MasterV0$init$_store INLINECALLDICT
    ENDC
  }>
  $global_master_addr PROCREF:<{
    $MasterV0$_init_child INLINECALLDICT
    $global_contractAddress INLINECALLDICT
  }>
  $Test$_contract_init PROCINLINE:<{
    $global_master_addr INLINECALLDICT
  }>
  $Test$_contract_load PROCINLINE:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
    IF:<{
      $Test$_load INLINECALLDICT
      NIP
    }>ELSE<{
      DROP
      $Test$_contract_init INLINECALLDICT
    }>
  }>
  $Test$_fun_owner PROCREF:<{
    DUP
  }>
  %owner PROC:<{
    $Test$_contract_load INLINECALLDICT
    $Test$_fun_owner INLINECALLDICT
    NIP
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    2 PUSHINT
    SDSKIPFIRST
    1 LDI
    1 LDI
    LDMSGADDR
    OVER
    s3 s4 XCHG
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $Test$_contract_load INLINECALLDICT
    DROP
    SWAP
    IFJMP:<{
      DROP
    }>
    0 PUSHINT
    OVER
    SBITS
    DUP
    31 GTINT
    IF:<{
      NIP
      SWAP
      32 LDU
      DROP
    }>ELSE<{
      s2 POP
    }>
    0 EQINT
    SWAP
    33 LESSINT
    AND
    IFJMP:<{
    }>
    130 THROW
  }>
  __tact_selector_hack PROC:<{
    @atend @ 1 {
        execute current@ context@ current!
        {
            }END> b>
            
            <{
                SETCP0 DUP
                IFNOTJMP:<{
                    DROP over <s ref@ 0 swap @procdictkeylen idict@ { "internal shortcut error" abort } ifnot @addop
                }>
    swap <s ref@
                0 swap @procdictkeylen idict- drop
                -1 swap @procdictkeylen idict- drop
                65535 swap @procdictkeylen idict- drop
                @procdictkeylen DICTPUSHCONST DICTIGETJMPZ 11 THROWARG
            }> b>
        } : }END>c
        current@ context! current!
    } does @atend !
  }>
}END>c
