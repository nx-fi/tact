// automatically generated from `@stdlib/std/stdlib.fc` `@stdlib/std/stdlib_ex.fc` `/home/benji/proj/ton/tact/src/test/e2e-emulated/contracts/output/codeOf_CodeOfTester.code.fc` 
PROGRAM{
  DECLPROC __tact_sha256
  DECLPROC __tact_cell_eq
  DECLPROC __tact_cell_neq
  DECLPROC $CodeOfTester$_store
  DECLPROC $CodeOfTester$_load
  DECLPROC $StateInit$_get_code
  DECLPROC $CodeOfTester$init$_store
  DECLPROC $CodeOfTester$init$_load
  DECLPROC $ChildContract$init$_store
  DECLPROC $CodeOfTester$_contract_init
  DECLPROC $CodeOfTester$_contract_load
  DECLPROC $CodeOfTester$_contract_store
  DECLPROC $CodeOfTester$_init_child
  DECLPROC $CodeOfTester$_fun_selfCode
  DECLPROC $ChildContract$_code_child
  DECLPROC $CodeOfTester$_fun_childCode
  DECLPROC $CodeOfTester$_fun_testThatMyCodeEqualToCodeOfSelf
  DECLPROC $CodeOfTester$_fun_testThatMyCodeNotEqualToCodeOfChild
  DECLPROC $CodeOfTester$_fun_testThatInitOfSelfCodeEqualToCodeOf
  DECLPROC $ChildContract$_init_child
  DECLPROC $CodeOfTester$_fun_testThatInitOfChildCodeEqualToCodeOf
  DECLPROC $CodeOfTester$_fun_testThatInitOfSelfCodeNotEqualToCodeOfChild
  101265 DECLMETHOD %selfCode
  107267 DECLMETHOD %childCode
  96976 DECLMETHOD %testThatMyCodeEqualToCodeOfSelf
  99799 DECLMETHOD %testThatMyCodeNotEqualToCodeOfChild
  114302 DECLMETHOD %testThatInitOfSelfCodeEqualToCodeOf
  101139 DECLMETHOD %testThatInitOfChildCodeEqualToCodeOf
  69686 DECLMETHOD %testThatInitOfSelfCodeNotEqualToCodeOfChild
  DECLPROC recv_internal
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_child_contract_codes
  DECLGLOBVAR __tact_randomized
  __tact_sha256 PROC:<{
    ONE
    WHILE:<{
      OVER SREFS 0 NEQINT
    }>DO<{
      OVER LDREF s0 POP CTOS s0 s1 XCHG INC
    }>
    HASHEXT_SHA256
  }>
  __tact_cell_eq PROCINLINE:<{
    SWAP
    HASHCU
    SWAP
    HASHCU
    EQUAL
  }>
  __tact_cell_neq PROCINLINE:<{
    SWAP
    HASHCU
    SWAP
    HASHCU
    NEQ
  }>
  $CodeOfTester$_store PROCINLINE:<{
    s0 s2 XCHG
    257 PUSHINT
    STIX
    1 STI
  }>
  $CodeOfTester$_load PROCINLINE:<{
    257 PUSHINT
    LDIX
    1 LDI
    -ROT
  }>
  $StateInit$_get_code PROCINLINE:<{
    DROP
  }>
  $CodeOfTester$init$_store PROCINLINE:<{
    s0 s2 XCHG
    257 PUSHINT
    STIX
    1 STI
  }>
  $CodeOfTester$init$_load PROCINLINE:<{
    257 PUSHINT
    LDIX
    1 LDI
    -ROT
  }>
  $ChildContract$init$_store PROCINLINE:<{
    SWAP
    257 PUSHINT
    STIX
  }>
  $CodeOfTester$_contract_init PROCINLINE:<{
  }>
  $CodeOfTester$_contract_load PROCREF:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
    IFJMP:<{
      $CodeOfTester$_load INLINECALLDICT
      1 2 BLKDROP2
    }>
    $CodeOfTester$init$_load INLINECALLDICT
    s0 s2 XCHG
    ENDS
    SWAP
    $CodeOfTester$_contract_init INLINECALLDICT
  }>
  $CodeOfTester$_contract_store PROCINLINE:<{
    NEWC
    TRUE
    SWAP
    1 STI
    -ROT
    $CodeOfTester$_store INLINECALLDICT
    ENDC
    c4 POP
  }>
  $CodeOfTester$_init_child PROCREF:<{
    MYCODE
    NEWC
    FALSE
    SWAP
    1 STI
    2SWAP
    $CodeOfTester$init$_store INLINECALLDICT
    ENDC
  }>
  $CodeOfTester$_fun_selfCode PROCREF:<{
    MYCODE
  }>
  $ChildContract$_code_child PROCINLINE:<{
        B{b5ee9c72010106010086000114ff00f4a413f4bcf2c80b0102016202030192d001d072d721d200d200fa4021103450666f04f86102f862db3c02915be07021d74920c21f953101d31f309132e2c00001c121b09fc87f01ca000101810101cf00c9ed54e030f2c08204020fa1b581b679b678630405002eed44d0d2000197810101d7000131e0810101d7000101d1000220} B>boc PUSHREF
  }>
  $CodeOfTester$_fun_childCode PROCREF:<{
    $ChildContract$_code_child INLINECALLDICT
  }>
  $CodeOfTester$_fun_testThatMyCodeEqualToCodeOfSelf PROCREF:<{
    MYCODE
        MYCODE
    __tact_cell_eq INLINECALLDICT
  }>
  $CodeOfTester$_fun_testThatMyCodeNotEqualToCodeOfChild PROCREF:<{
    $ChildContract$_code_child INLINECALLDICT
        MYCODE
    __tact_cell_neq INLINECALLDICT
  }>
  $CodeOfTester$_fun_testThatInitOfSelfCodeEqualToCodeOf PROCREF:<{
    MYCODE
    0 PUSHINT
    FALSE
    $CodeOfTester$_init_child INLINECALLDICT
    $StateInit$_get_code INLINECALLDICT
    __tact_cell_eq INLINECALLDICT
  }>
  $ChildContract$_init_child PROCREF:<{
        B{b5ee9c72010106010086000114ff00f4a413f4bcf2c80b0102016202030192d001d072d721d200d200fa4021103450666f04f86102f862db3c02915be07021d74920c21f953101d31f309132e2c00001c121b09fc87f01ca000101810101cf00c9ed54e030f2c08204020fa1b581b679b678630405002eed44d0d2000197810101d7000131e0810101d7000101d1000220} B>boc PUSHREF
    NEWC
    FALSE
    SWAP
    1 STI
    ROT
    $ChildContract$init$_store INLINECALLDICT
    ENDC
  }>
  $CodeOfTester$_fun_testThatInitOfChildCodeEqualToCodeOf PROCREF:<{
    $ChildContract$_code_child INLINECALLDICT
    0 PUSHINT
    $ChildContract$_init_child INLINECALLDICT
    $StateInit$_get_code INLINECALLDICT
    __tact_cell_eq INLINECALLDICT
  }>
  $CodeOfTester$_fun_testThatInitOfSelfCodeNotEqualToCodeOfChild PROCREF:<{
    $ChildContract$_code_child INLINECALLDICT
    0 PUSHINT
    FALSE
    $CodeOfTester$_init_child INLINECALLDICT
    $StateInit$_get_code INLINECALLDICT
    __tact_cell_neq INLINECALLDICT
  }>
  %selfCode PROC:<{
    $CodeOfTester$_contract_load INLINECALLDICT
    $CodeOfTester$_fun_selfCode INLINECALLDICT
    2 1 BLKDROP2
  }>
  %childCode PROC:<{
    $CodeOfTester$_contract_load INLINECALLDICT
    $CodeOfTester$_fun_childCode INLINECALLDICT
    2 1 BLKDROP2
  }>
  %testThatMyCodeEqualToCodeOfSelf PROC:<{
    $CodeOfTester$_contract_load INLINECALLDICT
    $CodeOfTester$_fun_testThatMyCodeEqualToCodeOfSelf INLINECALLDICT
    2 1 BLKDROP2
  }>
  %testThatMyCodeNotEqualToCodeOfChild PROC:<{
    $CodeOfTester$_contract_load INLINECALLDICT
    $CodeOfTester$_fun_testThatMyCodeNotEqualToCodeOfChild INLINECALLDICT
    2 1 BLKDROP2
  }>
  %testThatInitOfSelfCodeEqualToCodeOf PROC:<{
    $CodeOfTester$_contract_load INLINECALLDICT
    $CodeOfTester$_fun_testThatInitOfSelfCodeEqualToCodeOf INLINECALLDICT
    2 1 BLKDROP2
  }>
  %testThatInitOfChildCodeEqualToCodeOf PROC:<{
    $CodeOfTester$_contract_load INLINECALLDICT
    $CodeOfTester$_fun_testThatInitOfChildCodeEqualToCodeOf INLINECALLDICT
    2 1 BLKDROP2
  }>
  %testThatInitOfSelfCodeNotEqualToCodeOfChild PROC:<{
    $CodeOfTester$_contract_load INLINECALLDICT
    $CodeOfTester$_fun_testThatInitOfSelfCodeNotEqualToCodeOfChild INLINECALLDICT
    2 1 BLKDROP2
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    2 PUSHINT
    SDSKIPFIRST
    1 LDI
    1 LDI
    LDMSGADDR
    OVER
    s3 s4 XCHG
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $CodeOfTester$_contract_load INLINECALLDICT
    s0 s3 XCHG
    IFJMP:<{
      3 BLKDROP
    }>
    0 PUSHINT
    s2 PUSH
    SBITS
    DUP
    31 GTINT
    IF:<{
      NIP
      s0 s2 XCHG
      32 LDU
      DROP
    }>ELSE<{
      s3 POP
    }>
    0 EQINT
    s0 s2 XCHG
    33 LESSINT
    s1 s2 XCHG
    AND
    IFJMP:<{
      SWAP
      $CodeOfTester$_contract_store INLINECALLDICT
    }>
    2DROP
    130 THROW
  }>
}END>c
