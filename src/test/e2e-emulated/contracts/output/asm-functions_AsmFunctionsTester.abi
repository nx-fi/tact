{"name":"AsmFunctionsTester","types":[{"name":"DataSize","header":null,"fields":[{"name":"cells","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"bits","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"refs","type":{"kind":"simple","type":"int","optional":false,"format":257}}]},{"name":"StateInit","header":null,"fields":[{"name":"code","type":{"kind":"simple","type":"cell","optional":false}},{"name":"data","type":{"kind":"simple","type":"cell","optional":false}}]},{"name":"Context","header":null,"fields":[{"name":"bounceable","type":{"kind":"simple","type":"bool","optional":false}},{"name":"sender","type":{"kind":"simple","type":"address","optional":false}},{"name":"value","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"raw","type":{"kind":"simple","type":"slice","optional":false}}]},{"name":"SendParameters","header":null,"fields":[{"name":"mode","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"body","type":{"kind":"simple","type":"cell","optional":true}},{"name":"code","type":{"kind":"simple","type":"cell","optional":true}},{"name":"data","type":{"kind":"simple","type":"cell","optional":true}},{"name":"value","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"to","type":{"kind":"simple","type":"address","optional":false}},{"name":"bounce","type":{"kind":"simple","type":"bool","optional":false}}]},{"name":"MessageParameters","header":null,"fields":[{"name":"mode","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"body","type":{"kind":"simple","type":"cell","optional":true}},{"name":"value","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"to","type":{"kind":"simple","type":"address","optional":false}},{"name":"bounce","type":{"kind":"simple","type":"bool","optional":false}}]},{"name":"DeployParameters","header":null,"fields":[{"name":"mode","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"body","type":{"kind":"simple","type":"cell","optional":true}},{"name":"value","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"bounce","type":{"kind":"simple","type":"bool","optional":false}},{"name":"init","type":{"kind":"simple","type":"StateInit","optional":false}}]},{"name":"StdAddress","header":null,"fields":[{"name":"workchain","type":{"kind":"simple","type":"int","optional":false,"format":8}},{"name":"address","type":{"kind":"simple","type":"uint","optional":false,"format":256}}]},{"name":"VarAddress","header":null,"fields":[{"name":"workchain","type":{"kind":"simple","type":"int","optional":false,"format":32}},{"name":"address","type":{"kind":"simple","type":"slice","optional":false}}]},{"name":"BasechainAddress","header":null,"fields":[{"name":"hash","type":{"kind":"simple","type":"int","optional":true,"format":257}}]},{"name":"AsmFunctionsTester$Data","header":null,"fields":[]},{"name":"MapIntIntSlice","header":null,"fields":[{"name":"val","type":{"kind":"dict","key":"int","value":"int"}},{"name":"rem","type":{"kind":"simple","type":"slice","optional":false}}]},{"name":"IntSlice","header":null,"fields":[{"name":"val","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"rem","type":{"kind":"simple","type":"slice","optional":false}}]},{"name":"SliceInt","header":null,"fields":[{"name":"rem","type":{"kind":"simple","type":"slice","optional":false}},{"name":"val","type":{"kind":"simple","type":"int","optional":false,"format":257}}]},{"name":"Two","header":null,"fields":[{"name":"a","type":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"b","type":{"kind":"simple","type":"int","optional":false,"format":257}}]},{"name":"TwoInTwo","header":null,"fields":[{"name":"a","type":{"kind":"simple","type":"Two","optional":false}},{"name":"b","type":{"kind":"simple","type":"Two","optional":false}}]}],"receivers":[{"receiver":"internal","message":{"kind":"empty"}}],"getters":[{"name":"testAsmStoreDict","methodId":81432,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmLoadCoins","methodId":86431,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmLoadCoinsMut","methodId":128872,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmLoadCoinsMutRuntime","methodId":127504,"arguments":[{"name":"c","type":{"kind":"simple","type":"cell","optional":false}}],"returnType":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"testAsmLoadInt","methodId":78218,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmDebugStr","methodId":93496,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmCreateUseWord","methodId":111813,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmSecondToLast","methodId":67436,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmSecondToLastRuntime","methodId":121641,"arguments":[{"name":"s1","type":{"kind":"simple","type":"Two","optional":false}},{"name":"s2","type":{"kind":"simple","type":"Two","optional":false}}],"returnType":{"kind":"simple","type":"int","optional":false,"format":257}},{"name":"testAsmFirst","methodId":124989,"arguments":[],"returnType":{"kind":"simple","type":"bool","optional":false}},{"name":"testAsmFirstRuntime","methodId":97303,"arguments":[{"name":"s1","type":{"kind":"simple","type":"TwoInTwo","optional":false}},{"name":"s2","type":{"kind":"simple","type":"TwoInTwo","optional":false}},{"name":"s3","type":{"kind":"simple","type":"TwoInTwo","optional":false}}],"returnType":{"kind":"simple","type":"int","optional":false,"format":257}}],"errors":{"2":{"message":"Stack underflow"},"3":{"message":"Stack overflow"},"4":{"message":"Integer overflow"},"5":{"message":"Integer out of expected range"},"6":{"message":"Invalid opcode"},"7":{"message":"Type check error"},"8":{"message":"Cell overflow"},"9":{"message":"Cell underflow"},"10":{"message":"Dictionary error"},"11":{"message":"'Unknown' error"},"12":{"message":"Fatal error"},"13":{"message":"Out of gas error"},"14":{"message":"Virtualization error"},"32":{"message":"Action list is invalid"},"33":{"message":"Action list is too long"},"34":{"message":"Action is invalid or not supported"},"35":{"message":"Invalid source address in outbound message"},"36":{"message":"Invalid destination address in outbound message"},"37":{"message":"Not enough Toncoin"},"38":{"message":"Not enough extra currencies"},"39":{"message":"Outbound message does not fit into a cell after rewriting"},"40":{"message":"Cannot process a message"},"41":{"message":"Library reference is null"},"42":{"message":"Library change action error"},"43":{"message":"Exceeded maximum number of cells in the library or the maximum depth of the Merkle tree"},"50":{"message":"Account state size exceeded limits"},"128":{"message":"Null reference exception"},"129":{"message":"Invalid serialization prefix"},"130":{"message":"Invalid incoming message"},"131":{"message":"Constraints error"},"132":{"message":"Access denied"},"133":{"message":"Contract stopped"},"134":{"message":"Invalid argument"},"135":{"message":"Code of a contract was not found"},"136":{"message":"Invalid standard address"}},"interfaces":["org.ton.introspection.v0","org.ton.abi.ipfs.v0","org.ton.deploy.lazy.v0","org.ton.debug.v0"]}