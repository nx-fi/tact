// automatically generated from `@stdlib/std/stdlib.fc` `@stdlib/std/stdlib_ex.fc` `/home/benji/proj/ton/tact/examples/output/wallet-opt_Wallet.code.fc` 
PROGRAM{
  DECLPROC __tact_sha256
  DECLPROC $TransferMessage$_load_without_opcode
  DECLPROC $Wallet$_store
  DECLPROC $Wallet$_load
  DECLPROC $Wallet$init$_load
  DECLPROC $Wallet$_contract_init
  DECLPROC $Wallet$_contract_load
  DECLPROC $Wallet$_contract_store
  DECLPROC $Wallet$_fun_publicKey
  DECLPROC $Wallet$_fun_walletId
  DECLPROC $Wallet$_fun_seqno
  86520 DECLMETHOD %publicKey
  114762 DECLMETHOD %walletId
  85143 DECLMETHOD %seqno
  DECLPROC recv_internal
  65535 DECLMETHOD __tact_selector_hack
  DECLGLOBVAR __tact_context
  DECLGLOBVAR __tact_context_sender
  DECLGLOBVAR __tact_child_contract_codes
  DECLGLOBVAR __tact_randomized
  __tact_sha256 PROC:<{
    ONE
    WHILE:<{
      OVER SREFS 0 NEQINT
    }>DO<{
      OVER LDREF s0 POP CTOS s0 s1 XCHG INC
    }>
    HASHEXT_SHA256
  }>
  $TransferMessage$_load_without_opcode PROCINLINE:<{
    9 PUSHPOW2
    LDSLICEX
    TUCK
  }>
  $Wallet$_store PROCINLINE:<{
    s2 s3 XCHG2
    32 STU
    256 STU
    64 STU
  }>
  $Wallet$_load PROCINLINE:<{
    32 LDU
    256 LDU
    64 LDU
    3 -ROLL
  }>
  $Wallet$init$_load PROCINLINE:<{
    257 PUSHINT
    LDIX
    257 PUSHINT
    LDIX
    -ROT
  }>
  $Wallet$_contract_init PROCINLINE:<{
    0 PUSHINT
    -ROT
  }>
  $Wallet$_contract_load PROCINLINE:<{
    c4 PUSH
    CTOS
    1 LDI
    SWAP
    IF:<{
      $Wallet$_load INLINECALLDICT
      1 3 BLKDROP2
    }>ELSE<{
      $Wallet$init$_load INLINECALLDICT
      s0 s2 XCHG
      ENDS
      SWAP
      $Wallet$_contract_init INLINECALLDICT
    }>
  }>
  $Wallet$_contract_store PROCINLINE:<{
    NEWC
    TRUE
    SWAP
    1 STI
    3 -ROLL
    $Wallet$_store INLINECALLDICT
    ENDC
    c4 POP
  }>
  $Wallet$_fun_publicKey PROCREF:<{
    OVER
  }>
  $Wallet$_fun_walletId PROCREF:<{
    DUP
  }>
  $Wallet$_fun_seqno PROCREF:<{
    s2 PUSH
  }>
  %publicKey PROC:<{
    $Wallet$_contract_load INLINECALLDICT
    $Wallet$_fun_publicKey INLINECALLDICT
    3 1 BLKDROP2
  }>
  %walletId PROC:<{
    $Wallet$_contract_load INLINECALLDICT
    $Wallet$_fun_walletId INLINECALLDICT
    3 1 BLKDROP2
  }>
  %seqno PROC:<{
    $Wallet$_contract_load INLINECALLDICT
    $Wallet$_fun_seqno INLINECALLDICT
    3 1 BLKDROP2
  }>
  recv_internal PROC:<{
    SWAP
    CTOS
    2 PUSHINT
    SDSKIPFIRST
    1 LDI
    1 LDI
    LDMSGADDR
    OVER
    s3 s4 XCHG
    s6 s6 XCHG2
    4 TUPLE
    __tact_context SETGLOB
    s0 s2 XCHG
    __tact_context_sender SETGLOB
    $Wallet$_contract_load INLINECALLDICT
    s0 s4 XCHG
    IFJMP:<{
      4 BLKDROP
    }>
    s0 s2 XCHG
    32 LDUQ 130 THROWIFNOT
    SWAP
    3548477446 PUSHINT
    EQUAL
    IFJMP:<{
      $TransferMessage$_load_without_opcode INLINECALLDICT
      s2 POP
      OVER
          HASHSU
      48401 PUSHINT
      s2 s5 XCPU
          CHKSIGNU
      THROWANYIFNOT
      32 LDI
      8 LDI
          LDREF
      DROP
      17654 PUSHINT
      s3 s4 XCPU
      EQUAL
      s1 s3 XCHG
      THROWANYIFNOT
      s0 s2 XCHG
      INC
      16 MODPOW2#
          COMMIT
      s0 s2 XCHG
          SENDRAWMSG
      s0 s2 XCHG
      $Wallet$_contract_store INLINECALLDICT
    }>
    4 BLKDROP
    130 THROW
  }>
  __tact_selector_hack PROC:<{
    @atend @ 1 {
        execute current@ context@ current!
        {
            }END> b>
            
            <{
                SETCP0 DUP
                IFNOTJMP:<{
                    DROP over <s ref@ 0 swap @procdictkeylen idict@ { "internal shortcut error" abort } ifnot @addop
                }>
    swap <s ref@
                0 swap @procdictkeylen idict- drop
                -1 swap @procdictkeylen idict- drop
                65535 swap @procdictkeylen idict- drop
                @procdictkeylen DICTPUSHCONST DICTIGETJMPZ 11 THROWARG
            }> b>
        } : }END>c
        current@ context! current!
    } does @atend !
  }>
}END>c
